{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\NewDashBoardScreen\\\\BarChar.js\";\nimport React from 'react';\nimport moment from \"moment\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','November','December'];\n\nconst createGradient = context => {\n  const gradient = context.chart.ctx.createLinearGradient(120, 120, 180, 300);\n  gradient.addColorStop(0, '#ff9000'); // Start color\n  return gradient;\n};\n\n// export const options = {\n//   responsive: true,\n//   scales: {  \n//       x: {\n//          grid: {\n//             display: false,\n//             color: 'white',\n//             drawBorder: false,\n//             borderDash: []\n//          },\n//          ticks: {\n//           // callback: (value) => {\n//           //   const index = Math.round(value);\n//           //   return appointmentData[index] ? moment(appointmentData[index]._id).format('MMM Do, h:mm a') : '';\n//           // },\n//         },\n//         beginAtZero: true,\n//       },\n//       y: {\n//          grid: {\n//           color: '#ffffff1c',\n//           margin: '1rem'\n//          },\n//         //  beginAtZero: true\n//       }\n//  },\n//   plugins: {\n//     legend: {\n//       display:false,\n//     },\n//     title: {\n//       display: false,\n//       text: 'Chart.js Bar Chart',\n//     },\n//   },\n// };\n\nconst BarChar = ({\n  appointmentData,\n  role\n}) => {\n  // console.log(appointmentData , \"appointment\")\n  const labels = Array.from({\n    length: appointmentData && appointmentData.length || 0\n  }, (_, index) => index);\n  const data = {\n    labels: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.salonData && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item => moment(item._id).format('MMM Do, h:mm a')),\n    datasets: [{\n      label: labels,\n      data: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item => item.count),\n      barThickness: 30,\n      // maxBarThickness:40,\n      // minBarLength: 10,\n      backgroundColor: context => createGradient(context),\n      borderWidth: 1,\n      borderColor: 'white'\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        grid: {\n          display: false,\n          color: 'white'\n        },\n        ticks: {\n          callback: value => {\n            const ticksArray = appointmentData && appointmentData.appointmentChart && appointmentData.appointmentChart.map(item => moment(item._id).format('MMM Do'));\n            const index = Math.round(value);\n            return ticksArray ? ticksArray[index] : '';\n          },\n          color: \"white\"\n        },\n        beginAtZero: true\n        // afterBuildTicks: (scale) => {\n        //   console.log('Ticks:', scale.ticks);\n        // },\n      },\n      y: {\n        grid: {\n          color: '#ffffff1c',\n          margin: '1rem',\n          drawBorder: false\n        },\n        ticks: {\n          stepSize: 1,\n          color: \"white\",\n          borderWidth: 1\n        },\n        zeroLineColor: 'white',\n        afterBuildTicks: scale => {\n          // console.log('Ticks:', scale.ticks);\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard_section_2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard_p\",\n      children: \"Number of appointments in current month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChar;\nexport default BarChar;\nvar _c;\n$RefreshReg$(_c, \"BarChar\");","map":{"version":3,"names":["React","moment","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","createGradient","context","gradient","chart","ctx","createLinearGradient","addColorStop","BarChar","appointmentData","role","labels","Array","from","length","_","index","data","map","item","salonData","name","appointmentChart","_id","format","datasets","label","appointmentCount","count","barThickness","backgroundColor","borderWidth","borderColor","options","responsive","scales","x","grid","display","color","ticks","callback","value","ticksArray","Math","round","beginAtZero","y","margin","drawBorder","stepSize","zeroLineColor","afterBuildTicks","scale","plugins","legend","title","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/NewDashBoardScreen/BarChar.js"],"sourcesContent":["import React from 'react'\r\nimport moment from \"moment\"\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\n\r\n// const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','November','December'];\r\n\r\nconst createGradient = (context) => {\r\n  const gradient = context.chart.ctx.createLinearGradient(120, 120, 180, 300);\r\n  gradient.addColorStop(0, '#ff9000');  // Start color\r\n  return gradient;\r\n};\r\n\r\n// export const options = {\r\n//   responsive: true,\r\n//   scales: {  \r\n//       x: {\r\n//          grid: {\r\n//             display: false,\r\n//             color: 'white',\r\n//             drawBorder: false,\r\n//             borderDash: []\r\n//          },\r\n//          ticks: {\r\n//           // callback: (value) => {\r\n//           //   const index = Math.round(value);\r\n//           //   return appointmentData[index] ? moment(appointmentData[index]._id).format('MMM Do, h:mm a') : '';\r\n//           // },\r\n//         },\r\n//         beginAtZero: true,\r\n//       },\r\n//       y: {\r\n//          grid: {\r\n//           color: '#ffffff1c',\r\n//           margin: '1rem'\r\n//          },\r\n//         //  beginAtZero: true\r\n//       }\r\n//  },\r\n//   plugins: {\r\n//     legend: {\r\n//       display:false,\r\n//     },\r\n//     title: {\r\n//       display: false,\r\n//       text: 'Chart.js Bar Chart',\r\n//     },\r\n//   },\r\n// };\r\n\r\nconst BarChar = ({ appointmentData, role }) => {\r\n  // console.log(appointmentData , \"appointment\")\r\n  const labels = Array.from({ length: (appointmentData && appointmentData.length) || 0 }, (_, index) => index);\r\n\r\n  const data = {\r\n    labels: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.salonData && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item => moment(item._id).format('MMM Do, h:mm a')),\r\n    datasets: [\r\n      {\r\n        label: labels,\r\n        data: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item => item.count),\r\n        barThickness: 30,\r\n        // maxBarThickness:40,\r\n        // minBarLength: 10,\r\n        backgroundColor: (context) => createGradient(context),\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n          color: 'white'\r\n        },\r\n        ticks: {\r\n          callback: (value) => {\r\n            const ticksArray = appointmentData && appointmentData.appointmentChart && appointmentData.appointmentChart.map(item => moment(item._id).format('MMM Do'));\r\n            const index = Math.round(value);\r\n            return ticksArray ? ticksArray[index] : '';\r\n          },\r\n          color: \"white\"\r\n        },\r\n        beginAtZero: true,\r\n        // afterBuildTicks: (scale) => {\r\n        //   console.log('Ticks:', scale.ticks);\r\n        // },\r\n      },\r\n      y: {\r\n        grid: {\r\n          color: '#ffffff1c',\r\n          margin: '1rem',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          stepSize: 1,\r\n          color: \"white\",\r\n          borderWidth: 1\r\n        },\r\n        zeroLineColor: 'white',\r\n        afterBuildTicks: (scale) => {\r\n          // console.log('Ticks:', scale.ticks);\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Bar Chart',\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className='dashboard_section_2'>\r\n      <p className='dashboard_p'>Number of appointments in current month</p>\r\n      <Bar data={data} options={options} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChar"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}