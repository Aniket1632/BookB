{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_APP_VERSION_REQUEST, GET_ALL_APP_VERSION_SUCCESS, GET_ALL_APP_VERSION_FAIL, ADD_APP_VERSION_REQUEST, ADD_APP_VERSION_SUCCESS, ADD_APP_VERSION_FAIL, CHANGE_APP_VERSION_STATUS_REQUEST, CHANGE_APP_VERSION_STATUS_SUCCESS, CHANGE_APP_VERSION_STATUS_FAIL, DELETE_APP_VERSION_REQUEST, DELETE_APP_VERSION_SUCCESS, DELETE_APP_VERSION_FAIL } from '../constants/appVersionConstants';\nimport { BASE_URL } from './ip';\nexport const getAllAppVersionAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ALL_APP_VERSION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/version/get-version?salon=${formData.salon}&pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\n    dispatch({\n      type: GET_ALL_APP_VERSION_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_APP_VERSION_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const createAppVersionAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_APP_VERSION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/version/add-version`, formData, config);\n    dispatch({\n      type: ADD_APP_VERSION_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_APP_VERSION_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const changeAppVersionStatusAction = (id, enableStatus) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CHANGE_APP_VERSION_STATUS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`${BASE_URL}/version/enable-disable-version?id=${id}`, enableStatus, config);\n    dispatch({\n      type: CHANGE_APP_VERSION_STATUS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CHANGE_APP_VERSION_STATUS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const deleteAppVersionAction = (id, salon) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_APP_VERSION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`${BASE_URL}/version/delete-version?id=${id}&salonId=${salon}`, config);\n    dispatch({\n      type: DELETE_APP_VERSION_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_APP_VERSION_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};","map":{"version":3,"names":["axios","GET_ALL_APP_VERSION_REQUEST","GET_ALL_APP_VERSION_SUCCESS","GET_ALL_APP_VERSION_FAIL","ADD_APP_VERSION_REQUEST","ADD_APP_VERSION_SUCCESS","ADD_APP_VERSION_FAIL","CHANGE_APP_VERSION_STATUS_REQUEST","CHANGE_APP_VERSION_STATUS_SUCCESS","CHANGE_APP_VERSION_STATUS_FAIL","DELETE_APP_VERSION_REQUEST","DELETE_APP_VERSION_SUCCESS","DELETE_APP_VERSION_FAIL","BASE_URL","getAllAppVersionAction","formData","dispatch","getState","type","userLogin","userInfo","config","headers","token","data","get","salon","pageNumber","pageSize","filter","payload","err","response","message","createAppVersionAction","post","changeAppVersionStatusAction","id","enableStatus","patch","deleteAppVersionAction","delete"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/redux/actions/appVersionActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tGET_ALL_APP_VERSION_REQUEST,\r\n\tGET_ALL_APP_VERSION_SUCCESS,\r\n\tGET_ALL_APP_VERSION_FAIL,\r\n\tADD_APP_VERSION_REQUEST,\r\n\tADD_APP_VERSION_SUCCESS,\r\n\tADD_APP_VERSION_FAIL,\r\n\tCHANGE_APP_VERSION_STATUS_REQUEST,\r\n\tCHANGE_APP_VERSION_STATUS_SUCCESS,\r\n\tCHANGE_APP_VERSION_STATUS_FAIL,\r\n\r\n\tDELETE_APP_VERSION_REQUEST,\r\n\tDELETE_APP_VERSION_SUCCESS,\r\n\tDELETE_APP_VERSION_FAIL,\r\n} from '../constants/appVersionConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\nexport const getAllAppVersionAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_APP_VERSION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/version/get-version?salon=${formData.salon}&pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_APP_VERSION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_APP_VERSION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const createAppVersionAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_APP_VERSION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/version/add-version`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_APP_VERSION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_APP_VERSION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const changeAppVersionStatusAction = (id, enableStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_APP_VERSION_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/version/enable-disable-version?id=${id}`, enableStatus, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_APP_VERSION_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_APP_VERSION_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const deleteAppVersionAction = (id, salon) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_APP_VERSION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/version/delete-version?id=${id}&salonId=${salon}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_APP_VERSION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_APP_VERSION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}