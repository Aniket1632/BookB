{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\website\\\\BookAppointment\\\\Services\\\\AppointmentTime.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppointmentTime = ({\n  time,\n  setModalState,\n  data,\n  serviceName,\n  subServiceName,\n  charges,\n  setInfo,\n  availableTime,\n  stylist,\n  serviceId,\n  salon,\n  subServiceId,\n  dateAsAString,\n  requiredTime,\n  availableList\n}) => {\n  const handleClick = info => {\n    setModalState(true);\n    setInfo({\n      serviceName: serviceName,\n      subServiceName: subServiceName,\n      charges: charges,\n      salon: salon,\n      serviceId: serviceId,\n      subServiceId: subServiceId,\n      dateAsAString: dateAsAString,\n      requiredTime: requiredTime,\n      stylist: stylist,\n      availableTime: availableTime,\n      availableList: availableList,\n      ...info\n    });\n  };\n  // :\"time\"\n\n  const dateHour = (date, hour) => {\n    let datetimeA = moment(date + \" \" + hour);\n    return datetimeA.toISOString();\n  };\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.timeData.map(d => {\n      return (\n        /*#__PURE__*/\n        // moment(dateHour(dateAsAString,d.timeAsAString)) > moment().add(15,'minutes') ?\n        _jsxDEV(\"div\", {\n          className: \"time-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Current Waiting List : \", availableList && availableList.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(d),\n            disabled: d.slotStatus === 'confirmed' && true || d.slotStatus === 'canceled' && true || moment(dateHour(dateAsAString, d.timeAsAString)) < moment().add(15, 'minutes'),\n            className: d.slotStatus === 'booked' && \"time-booked\" || d.slotStatus === 'confirmed' && \"time-confirmed\" || d.slotStatus === 'waiting' && \"time-waiting\" || d.slotStatus === 'requested' && \"time-waiting\" || d.slotStatus === 'available' && \"time\" || d.slotStatus === 'canceled' && \"time-canceled\",\n            children: d.timeAsAString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      );\n    })\n  }, void 0, false)\n  // <button onClick={() => setModalState(true)} className=\"time\">\n  // \t{time}\n  // </button>\n  ;\n};\n_c = AppointmentTime;\nexport default AppointmentTime;\nvar _c;\n$RefreshReg$(_c, \"AppointmentTime\");","map":{"version":3,"names":["React","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","AppointmentTime","time","setModalState","data","serviceName","subServiceName","charges","setInfo","availableTime","stylist","serviceId","salon","subServiceId","dateAsAString","requiredTime","availableList","handleClick","info","dateHour","date","hour","datetimeA","toISOString","console","log","children","timeData","map","d","className","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","slotStatus","timeAsAString","add","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/website/BookAppointment/Services/AppointmentTime.js"],"sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\"\r\n\r\nconst AppointmentTime = ({\r\n  time,\r\n  setModalState,\r\n  data,\r\n  serviceName,\r\n  subServiceName,\r\n  charges,\r\n  setInfo,\r\n  availableTime,\r\n  stylist,\r\n  serviceId,\r\n  salon,\r\n  subServiceId,\r\n  dateAsAString,\r\n  requiredTime,\r\n  availableList\r\n}) => {\r\n  const handleClick = (info) => {\r\n    setModalState(true); \r\n    setInfo({\r\n      serviceName: serviceName,\r\n      subServiceName: subServiceName,\r\n      charges: charges,\r\n\t  salon:salon,\r\n\t  serviceId: serviceId,\r\n\t  subServiceId:subServiceId,\r\n\t  dateAsAString:dateAsAString,\r\n\t  requiredTime:requiredTime,\r\n    stylist:stylist,\r\n    availableTime:availableTime,\r\n    availableList:availableList,\r\n      ...info,\r\n    });\r\n  };\r\n  // :\"time\"\r\n\r\n  const dateHour = (date,hour)=>{\r\n\t\tlet datetimeA = moment(date + \" \" + hour);\r\n\t\treturn datetimeA.toISOString()\r\n\t}\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <>\r\n      {data.timeData.map((d) => {\r\n        return (\r\n          // moment(dateHour(dateAsAString,d.timeAsAString)) > moment().add(15,'minutes') ?\r\n          <div className=\"time-btn\">\r\n             <span>Current Waiting List : {availableList && availableList.length}</span>\r\n          <button onClick={() => handleClick(d)} disabled={d.slotStatus=== 'confirmed'&&true|| d.slotStatus=== 'canceled'&&true || moment(dateHour(dateAsAString,d.timeAsAString)) < moment().add(15,'minutes')} className={d.slotStatus=== 'booked'&&\"time-booked\" || d.slotStatus=== 'confirmed'&&\"time-confirmed\" || d.slotStatus=== 'waiting'&&\"time-waiting\"|| d.slotStatus=== 'requested'&&\"time-waiting\" ||d.slotStatus=== 'available'&&\"time\" ||d.slotStatus=== 'canceled'&&\"time-canceled\"   }>\r\n            {d.timeAsAString}\r\n          </button>\r\n         \r\n          </div>\r\n          \r\n        );\r\n      })}\r\n\r\n      {/* <p>{data.salon}</p> */}\r\n    </>\r\n    // <button onClick={() => setModalState(true)} className=\"time\">\r\n    // \t{time}\r\n    // </button>\r\n  );\r\n};\r\n\r\nexport default AppointmentTime;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,eAAe,GAAGA,CAAC;EACvBC,IAAI;EACJC,aAAa;EACbC,IAAI;EACJC,WAAW;EACXC,cAAc;EACdC,OAAO;EACPC,OAAO;EACPC,aAAa;EACbC,OAAO;EACPC,SAAS;EACTC,KAAK;EACLC,YAAY;EACZC,aAAa;EACbC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5Bf,aAAa,CAAC,IAAI,CAAC;IACnBK,OAAO,CAAC;MACNH,WAAW,EAAEA,WAAW;MACxBC,cAAc,EAAEA,cAAc;MAC9BC,OAAO,EAAEA,OAAO;MACnBK,KAAK,EAACA,KAAK;MACXD,SAAS,EAAEA,SAAS;MACpBE,YAAY,EAACA,YAAY;MACzBC,aAAa,EAACA,aAAa;MAC3BC,YAAY,EAACA,YAAY;MACxBL,OAAO,EAACA,OAAO;MACfD,aAAa,EAACA,aAAa;MAC3BO,aAAa,EAACA,aAAa;MACzB,GAAGE;IACL,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAACC,IAAI,KAAG;IAC9B,IAAIC,SAAS,GAAG1B,MAAM,CAACwB,IAAI,GAAG,GAAG,GAAGC,IAAI,CAAC;IACzC,OAAOC,SAAS,CAACC,WAAW,CAAC,CAAC;EAC/B,CAAC;EAEAC,OAAO,CAACC,GAAG,CAACrB,IAAI,CAAC;EAEjB,oBACEN,OAAA,CAAAE,SAAA;IAAA0B,QAAA,EACGtB,IAAI,CAACuB,QAAQ,CAACC,GAAG,CAAEC,CAAC,IAAK;MACxB;QAAA;QACE;QACA/B,OAAA;UAAKgC,SAAS,EAAC,UAAU;UAAAJ,QAAA,gBACtB5B,OAAA;YAAA4B,QAAA,GAAM,yBAAuB,EAACV,aAAa,IAAIA,aAAa,CAACe,MAAM;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9ErC,OAAA;YAAQsC,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACY,CAAC,CAAE;YAACQ,QAAQ,EAAER,CAAC,CAACS,UAAU,KAAI,WAAW,IAAE,IAAI,IAAGT,CAAC,CAACS,UAAU,KAAI,UAAU,IAAE,IAAI,IAAI1C,MAAM,CAACuB,QAAQ,CAACL,aAAa,EAACe,CAAC,CAACU,aAAa,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC4C,GAAG,CAAC,EAAE,EAAC,SAAS,CAAE;YAACV,SAAS,EAAED,CAAC,CAACS,UAAU,KAAI,QAAQ,IAAE,aAAa,IAAIT,CAAC,CAACS,UAAU,KAAI,WAAW,IAAE,gBAAgB,IAAIT,CAAC,CAACS,UAAU,KAAI,SAAS,IAAE,cAAc,IAAGT,CAAC,CAACS,UAAU,KAAI,WAAW,IAAE,cAAc,IAAGT,CAAC,CAACS,UAAU,KAAI,WAAW,IAAE,MAAM,IAAGT,CAAC,CAACS,UAAU,KAAI,UAAU,IAAE,eAAmB;YAAAZ,QAAA,EAC1dG,CAAC,CAACU;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEJ;MAAC;IAGV,CAAC;EAAC,gBAGF;EACF;EACA;EACA;EAAA;AAEJ,CAAC;AAACM,EAAA,GAjEIxC,eAAe;AAmErB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}