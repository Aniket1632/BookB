{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\NewDashBoardScreen\\\\LineChart.js\";\nimport React, { useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  scales: {\n    x: {\n      grid: {\n        display: true,\n        color: '#4d4d4d4f',\n        // Change this to the desired color (e.g., red with 20% opacity)\n        drawBorder: false,\n        borderDash: []\n      },\n      ticks: {\n        display: true,\n        color: 'white',\n        // Change this to the desired color (e.g., red with 20% opacity)\n        drawBorder: false\n      }\n    },\n    y: {\n      grid: {\n        display: true,\n        drawBorder: false,\n        color: '#4d4d4d4f',\n        borderDash: []\n      },\n      ticks: {\n        display: true,\n        color: 'white',\n        // Change this to the desired color (e.g., red with 20% opacity)\n        drawBorder: false,\n        stepSize: 1\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      display: false\n    },\n    title: {\n      display: false,\n      text: 'Chart.js Line Chart'\n    }\n  }\n};\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Nov', 'Dec'];\nfunction getMonth(month) {\n  switch (month) {\n    case 'Jan':\n      return 1;\n    case 'Feb':\n      return 2;\n    case 'Mar':\n      return 3;\n    case 'Apr':\n      return 4;\n    case 'May':\n      return 5;\n    case 'Jun':\n      return 6;\n    case 'Jul':\n      return 7;\n    case 'Aug':\n      return 8;\n    case 'Sep':\n      return 9;\n    case 'Oct':\n      return 10;\n    case 'Nov':\n      return 11;\n    case 'Dec':\n      return 12;\n    default:\n      break;\n  }\n}\nconst LineChart = ({\n  currentData,\n  style\n}) => {\n  const dataset = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (var i = 0; i < 12; i++) {\n    let dataMonth = getMonth(currentData && currentData[i] && currentData[i]._id);\n    if (currentData && currentData[i] && currentData[i]._id) {\n      dataset[dataMonth - 1] = currentData && currentData[i] && currentData[i].count;\n    }\n  }\n  const data = {\n    // labels:currentData && currentData.map(item=>item._id),\n    labels,\n    datasets: [{\n      // data: currentData && currentData.map(item=>item.count),\n      data: dataset,\n      barPercentage: 0.5,\n      backgroundColor: \"#ff9000\",\n      borderColor: \"#ff9000\",\n      fill: false,\n      lineTension: 0.4,\n      //  pointRadius: 0,     \n      radius: 6\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard_box\",\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard_p\",\n      style: {\n        marginBottom: '1.2rem'\n      },\n      children: \"Appointments by month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data,\n      style: {\n        height: '2rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","options","responsive","scales","x","grid","display","color","drawBorder","borderDash","ticks","y","stepSize","plugins","legend","title","text","labels","getMonth","month","LineChart","currentData","style","dataset","i","dataMonth","_id","count","data","datasets","barPercentage","backgroundColor","borderColor","fill","lineTension","radius","className","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/NewDashBoardScreen/LineChart.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      grid: {\r\n        display: true,\r\n        color: '#4d4d4d4f', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false,\r\n        borderDash: []\r\n      },\r\n      ticks: {\r\n        display: true,\r\n        color: 'white', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false\r\n      }\r\n    },\r\n    y: {\r\n      grid: {\r\n        display: true,\r\n        drawBorder: false,\r\n        color: '#4d4d4d4f', \r\n        borderDash: []\r\n      },\r\n      ticks: {\r\n        display: true,\r\n        color: 'white', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false,\r\n        stepSize: 1\r\n      }\r\n    },\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: false,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Nov', 'Dec'];\r\nfunction getMonth(month) {\r\n  switch (month) {\r\n    case 'Jan': return 1;\r\n    case 'Feb': return 2;\r\n    case 'Mar': return 3;\r\n    case 'Apr': return 4;\r\n    case 'May': return 5;\r\n    case 'Jun': return 6;\r\n    case 'Jul': return 7;\r\n    case 'Aug': return 8;\r\n    case 'Sep': return 9;\r\n    case 'Oct': return 10;\r\n    case 'Nov': return 11;\r\n    case 'Dec': return 12;\r\n    default: break;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst LineChart = ({ currentData,style }) => {\r\n  const dataset = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n  for (var i = 0; i < 12; i++) {\r\n    let dataMonth = getMonth(currentData && currentData[i] && currentData[i]._id)\r\n    if ((currentData && currentData[i] && currentData[i]._id)) {\r\n      dataset[dataMonth - 1] = currentData && currentData[i] && currentData[i].count;\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    // labels:currentData && currentData.map(item=>item._id),\r\n    labels,\r\n    datasets: [\r\n      {\r\n        // data: currentData && currentData.map(item=>item.count),\r\n        data: dataset,\r\n        barPercentage: 0.5,\r\n        backgroundColor: \"#ff9000\",\r\n        borderColor: \"#ff9000\",\r\n        fill: false,\r\n        lineTension: 0.4,\r\n        //  pointRadius: 0,     \r\n        radius: 6,\r\n      },\r\n\r\n    ],\r\n  };\r\n  return (\r\n    <div className='dashboard_box' style={style}>\r\n      <p className='dashboard_p' style={{marginBottom: '1.2rem'}}>Appointments by month</p>\r\n      <Line options={options} data={data} style={{height: '2rem'}} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}