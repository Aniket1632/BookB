{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\NewStylistScreen\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport Content from '../../components/Content/Content';\nimport Spinner from '../../components/Spinner/Spinner';\nimport { changeStatusStylistAction, createNewStylistAction, createStylistSettingsAction, deleteStylistAction, getStylistListAction, getStylistSettingsAction } from '../../redux/actions/stylistActions';\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators';\nimport { addNotesAction, changePasswordUserAction } from '../../redux/actions/userActions';\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\nimport { STYLER_RESET, CHANGE_STATUS_STYLER_RESET, CREATE_NEW_STYLER_RESET, DELETE_STYLER_RESET, CREATE_STYLIST_SETTINGS_RESET } from '../../redux/constants/stylistConstants';\nimport CreateStylist from './CreateStylist';\nimport DeleteStylist from './DeleteStylist';\nimport StylistData from './StylistData';\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\nimport Pagination from '../../components/Pagination';\nimport StylistSettings from './StylistSettings';\nimport NoData from '../../website/components/NoData';\nimport AddNotes from './AddNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StylistsScreen = ({\n  showFilter = false,\n  history\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const getUserInfo = useSelector(state => state.getUserInfo);\n  const stylistList = useSelector(state => state.stylistList);\n  const createStylist = useSelector(state => state.createStylist);\n  const changeStatustylist = useSelector(state => state.changeStatustylist);\n  const deleteStylist = useSelector(state => state.deleteStylist);\n  const changePasswordUser = useSelector(state => state.changePasswordUser);\n  const addStylistSettings = useSelector(state => state.addStylistSettings);\n  const getStylistSettings = useSelector(state => state.getStylistSettings);\n  const [uploadFileData, setUploadFileData] = useState('');\n  const [uploadFileDataError, setUploadFileDataError] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalDeleteState, setModalDeleteState] = useState(false);\n  const [modalChangePasswordState, setModalChangePasswordState] = useState(false);\n  const [stylistSettingsModal, setStylistSettingsModal] = useState(false);\n  const [selectUpdateModel, setSelectUpdateModel] = useState({});\n  const [totalPageSize, setTotalPageSize] = useState(1);\n  const [pageNumber, setPageNumber] = useState(1);\n  const pageLimit = 20;\n  const [id, setUserId] = useState('');\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState('');\n  const [addNotesModal, setAddNotesModal] = useState(false);\n  const [notes, setNotes] = useState('');\n  const [notesError, setNotesError] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [address, setAddress] = useState('');\n  const [addressError, setAddressError] = useState('');\n  const [imageSrc, setImageSrc] = useState('');\n  const [imageSrcError, setImageSrcError] = useState('');\n  const [search, setSearch] = useState('');\n\n  //stylist settings\n  const [serviceArray, setServiceArray] = useState({\n    value: '',\n    error: ''\n  });\n  const [recurringType, setRecurringType] = useState({\n    value: 'month',\n    error: ''\n  });\n  const [startTime, setStartTime] = useState({\n    value: '',\n    error: ''\n  });\n  const [endTime, setEndTime] = useState({\n    value: '',\n    error: ''\n  });\n  const [intervalTime, setIntervalTime] = useState({\n    value: '',\n    error: ''\n  });\n  const [isCompulsory, setIsCompulsory] = useState(false);\n  const [isCompulsoryError, setIsCompulsoryError] = useState('');\n  // const [endTimeError, setEndTimeError] = useState({ value: '', error: '' });\n\n  useEffect(() => {\n    if (getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && (getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'manager' || getUserInfo.userInfo.data.role === 'admin' || getUserInfo.userInfo.data.role === 'superadmin')) {\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n      return () => {\n        dispatch({\n          type: STYLER_RESET\n        });\n      };\n    } else {\n      history.push('/');\n    }\n  }, [getUserInfo, dispatch]);\n  useEffect(() => {\n    if (createStylist && createStylist.userInfo && createStylist.userInfo.status) {\n      setSearch('');\n      clearData();\n      setShowAddModal(false);\n      dispatch({\n        type: CREATE_NEW_STYLER_RESET\n      });\n      toast.success(createStylist.userInfo.message);\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    } else if (createStylist && createStylist.userInfo && !createStylist.userInfo.status) {\n      dispatch({\n        type: CREATE_NEW_STYLER_RESET\n      });\n      toast.error(createStylist.userInfo.message);\n    }\n  },\n  // eslint-disable-next-line\n  [createStylist, dispatch]);\n  useEffect(() => {\n    if (addStylistSettings && addStylistSettings.userInfo && addStylistSettings.userInfo.status) {\n      clearDataSettings();\n      dispatch({\n        type: CREATE_STYLIST_SETTINGS_RESET\n      });\n      toast.success(addStylistSettings.userInfo.message);\n    } else if (addStylistSettings && addStylistSettings.userInfo && !addStylistSettings.userInfo.status) {\n      dispatch({\n        type: CREATE_STYLIST_SETTINGS_RESET\n      });\n      toast.error(addStylistSettings.userInfo.message);\n    }\n  },\n  // eslint-disable-next-line\n  [addStylistSettings, dispatch]);\n  useEffect(() => {\n    if (deleteStylist && deleteStylist.userInfo && deleteStylist.userInfo.status) {\n      toast.success(deleteStylist.userInfo.message);\n      dispatch({\n        type: DELETE_STYLER_RESET\n      });\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    } else if (deleteStylist && deleteStylist.userInfo && !deleteStylist.userInfo.status) {\n      toast.error(deleteStylist.userInfo.message);\n      dispatch({\n        type: DELETE_STYLER_RESET\n      });\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    }\n  },\n  // eslint-disable-next-line\n  [deleteStylist, dispatch]);\n  useEffect(() => {\n    if (changeStatustylist && changeStatustylist.userInfo && changeStatustylist.userInfo.status) {\n      toast.success(changeStatustylist.userInfo.message);\n      setSelectUpdateModel({});\n      dispatch({\n        type: CHANGE_STATUS_STYLER_RESET\n      });\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    } else if (changeStatustylist && changeStatustylist.userInfo && !changeStatustylist.userInfo.status) {\n      toast.error(changeStatustylist.userInfo.message);\n      dispatch({\n        type: CHANGE_STATUS_STYLER_RESET\n      });\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    }\n  },\n  // eslint-disable-next-line\n  [changeStatustylist, dispatch]);\n  useEffect(() => {\n    if (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\n      toast.success(changePasswordUser.userInfo.message);\n      setSelectUpdateModel({});\n      dispatch({\n        type: CHANGE_PASSWORD_USER_RESET\n      });\n    } else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\n      toast.error(changePasswordUser.userInfo.message);\n      dispatch({\n        type: CHANGE_PASSWORD_USER_RESET\n      });\n    }\n  },\n  // eslint-disable-next-line\n  [changePasswordUser, dispatch]);\n  const handleAddModalClose = () => {\n    clearData();\n    setShowAddModal(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '' && name.trim() === '') {\n      setNameError('Please enter name');\n    } else if (email === '' && email.trim() === '') {\n      setEmailError('Please enter email address');\n    } else if (!validateEmail(email)) {\n      setEmailError('Please enter valid email address');\n    } else if (phone === '' && phone.trim() === '') {\n      setPhoneError('Please enter phone');\n    } else if (!validatePhone(unMasking(phone))) {\n      setPhoneError('Phone number must be 10 digits');\n    } else if (address === '' && address.trim() === '') {\n      setAddressError('Please enter address');\n    } else if (id === '' && password === '') {\n      setPasswordError('Please enter password');\n    } else if (id === '' && password.length < 7) {\n      setPasswordError('Password must be at least 8 characters');\n    } else if (!imageSrc) {\n      setUploadFileDataError('Please select files to upload');\n    } else {\n      let fileData = new FormData();\n      if (id !== '') {\n        fileData.append('id', id);\n      } else {\n        fileData.append('password', password);\n      }\n      fileData.append('name', name);\n      fileData.append('email', email);\n      fileData.append('address', address);\n      fileData.append('phone', unMasking(phone));\n      for (let i = 0; i < uploadFileData.length; i++) {\n        fileData.append('image', uploadFileData[i]);\n      }\n      dispatch(createNewStylistAction(fileData));\n    }\n  };\n  const handleAddNotesModalClose = () => {\n    setAddNotesModal(false);\n  };\n\n  //Add Notes Handler\n  const handleNoteModal = d => {\n    // setAddNotesModal(true)\n    setUserId(d);\n  };\n  const handleNotesSubmit = id => {\n    // e.preventDefault()\n    if (notes === '') {\n      setNotesError(\"Please add notes\");\n    } else {\n      let data = {\n        userNote: notes\n      };\n      dispatch(addNotesAction(id, data));\n      dispatch(getStylistListAction({\n        pageNumber: pageNumber,\n        pageSize: pageLimit,\n        filter: ''\n      }));\n    }\n  };\n  const handleSettingsModalClose = () => {\n    clearDataSettings();\n  };\n  const clearDataSettings = () => {\n    setSelectUpdateModel({});\n    setStartTime({\n      value: '',\n      error: ''\n    });\n    setEndTime({\n      value: '',\n      error: ''\n    });\n    setRecurringType({\n      value: '',\n      error: ''\n    });\n    setServiceArray({\n      value: '',\n      error: ''\n    });\n    setIntervalTime({\n      value: '',\n      error: ''\n    });\n    setIsCompulsory('');\n    setIsCompulsoryError('');\n    setStylistSettingsModal(false);\n  };\n  const settingsSubmitHandler = e => {\n    e.preventDefault();\n    let services = serviceArray.value;\n    if (startTime.value === '' && startTime.value === '') {\n      setStartTime({\n        value: '',\n        error: 'Please enter start time'\n      });\n    } else if (endTime.value === '' && endTime.value.trim() === '') {\n      setEndTime({\n        value: '',\n        error: 'Please enter end time'\n      });\n    } else if (recurringType.value === '' && recurringType.value.trim() === '') {\n      setRecurringType({\n        ...recurringType,\n        error: 'Please select recurring type'\n      });\n    } else if (intervalTime.value === '' && intervalTime.value.trim() === '') {\n      setIntervalTime({\n        value: '',\n        error: 'Please enter interval time'\n      });\n    } else if (services === '' && !services.length) {\n      setServiceArray('Please select services');\n    } else {\n      let serviceArrayTmp = [];\n      for (let i = 0; i < services.length; i++) {\n        serviceArrayTmp.push(services[i]._id);\n      }\n      // makePublic: makePublic.value,\n      dispatch(createStylistSettingsAction({\n        id: selectUpdateModel._id,\n        recurringType: recurringType.value,\n        intervalTime: intervalTime.value,\n        startTime: startTime.value,\n        endTime: endTime.value,\n        services: serviceArrayTmp.toString(),\n        isBreakTimeCompulsory: isCompulsory\n      }));\n    }\n  };\n  const onDeleteModalClose = () => {\n    setSelectUpdateModel({});\n    setModalDeleteState(false);\n  };\n  const onDeleteHandler = d => {\n    dispatch(deleteStylistAction(selectUpdateModel._id));\n    dispatch(getStylistListAction({\n      pageNumber: pageNumber,\n      pageSize: pageLimit,\n      filter: ''\n    }));\n    onDeleteModalClose();\n  };\n  const handlePageChange = async currentPage => {\n    const selectedPage = currentPage.selected;\n    dispatch(getStylistListAction({\n      pageNumber: selectedPage + 1,\n      pageSize: pageLimit,\n      filter: ''\n    }));\n    setPageNumber(selectedPage + 1);\n  };\n  const onChangeHandler = d => {\n    dispatch(changeStatusStylistAction(d._id, {\n      enable: d.active ? true : false\n    }));\n  };\n  const clearData = () => {\n    setSelectUpdateModel({});\n    setUserId('');\n    setEmail('');\n    setPassword('');\n    setPhone('');\n    setAddress('');\n    setName('');\n    setEmailError('');\n    setPasswordError('');\n    setPhoneError('');\n    setAddressError('');\n    setNameError('');\n    setImageSrc('');\n    setImageSrcError('');\n    // setCompany('');\n    // setCompanyError('');\n  };\n  const handleEditModalStylist = d => {\n    setUserId(d._id);\n    setEmail(d.email);\n    setPhone(inputPhoneMasking(d.phone));\n    setName(d.name);\n    setAddress(d.address);\n    setImageSrc(d.photo);\n    // setCompany(d.company);\n    setShowAddModal(true);\n  };\n  const onChangePwdUserHandler = () => {\n    let d = selectUpdateModel;\n    let type = 'byAdmin';\n    dispatch(changePasswordUserAction({\n      id: d._id,\n      type,\n      email: d.email\n    }));\n    onChangePwdModalClose();\n  };\n  const onChangePwdModalClose = () => {\n    setModalChangePasswordState(false);\n  };\n  const onSearchHandler = event => {\n    setSearch(event.target.value);\n    if (search.trim !== '' && search.length > 0) {\n      setPageNumber(1);\n    }\n    dispatch(getStylistListAction({\n      pageNumber: pageNumber,\n      pageSize: pageLimit,\n      filter: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Content, {\n    currentMenu: \"stylist\",\n    headerTitle: \"Stylist\",\n    addBtn: getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && (getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'manager' || getUserInfo.userInfo.data.role === 'superadmin') ? true : false,\n    addBtnText: \"Add New Stylist\",\n    addBtnIcon: \"plus\",\n    addBtnClick: () => setShowAddModal(true),\n    search: true,\n    searchPlaceholder: \"Search Stylists...\",\n    searchIcon: \"search\",\n    searchvalue: search,\n    searchOnChange: onSearchHandler,\n    children: [stylistList.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 5\n    }, this) : stylistList && stylistList.userInfo && stylistList.userInfo.status && stylistList.userInfo.data.result && stylistList.userInfo.data.result.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StylistData, {\n        data: stylistList.userInfo.data.result,\n        showFilter: showFilter,\n        setNotes: setNotes,\n        setShowAddModal: setShowAddModal,\n        setModalDeleteState: setModalDeleteState,\n        setSelectUpdateModel: setSelectUpdateModel,\n        handleEditModalStylist: handleEditModalStylist,\n        onChangeHandler: onChangeHandler,\n        setModalChangePasswordState: setModalChangePasswordState,\n        setStylistSettingsModal: setStylistSettingsModal,\n        addNotesModal: addNotesModal,\n        setAddNotesModal: setAddNotesModal,\n        handleNoteModal: handleNoteModal,\n        setUserId: setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 6\n      }, this), totalPageSize > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableContainer--paginater\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          list: stylistList.userInfo,\n          onPageChange: handlePageChange,\n          rowsPerPage: pageLimit,\n          totalPageSize: totalPageSize,\n          pageNumber: pageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(NoData, {\n      title: \"No Data Found!\",\n      subTitle: \"We could not find any stylist data.\",\n      height: \"40vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CreateStylist, {\n      data: {\n        name,\n        email,\n        password,\n        address,\n        phone,\n        setUserId,\n        setEmail,\n        setPhone,\n        setName,\n        setAddress,\n        setPassword,\n        emailError,\n        phoneError,\n        nameError,\n        passwordError,\n        addressError,\n        setEmailError,\n        setPhoneError,\n        setNameError,\n        setAddressError,\n        setPasswordError,\n        // companyList,\n        // company,\n        // setCompany,\n        // companyError,\n\n        showAddModal,\n        selectUpdateModel,\n        handleAddModalClose,\n        handleSubmit,\n        imageSrc,\n        setImageSrc,\n        imageSrcError,\n        setImageSrcError,\n        setUploadFileData,\n        uploadFileDataError,\n        setUploadFileDataError,\n        notes,\n        setNotes,\n        notesError\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DeleteStylist, {\n      data: {\n        modalDeleteState,\n        onDeleteModalClose,\n        onDeleteHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ChangePwdUser, {\n      data: {\n        modalChangePasswordState,\n        onChangePwdModalClose,\n        onChangePwdUserHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StylistSettings, {\n      data: {\n        startTime,\n        setStartTime,\n        endTime,\n        setEndTime,\n        recurringType,\n        setRecurringType,\n        intervalTime,\n        setIntervalTime,\n        serviceArray,\n        setServiceArray,\n        selectUpdateModel,\n        getStylistSettings,\n        stylistSettingsModal,\n        handleSettingsModalClose,\n        settingsSubmitHandler,\n        isCompulsory,\n        setIsCompulsory,\n        isCompulsoryError,\n        setIsCompulsoryError\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddNotes, {\n      data: {\n        id,\n        addNotesModal,\n        handleAddNotesModalClose,\n        notes,\n        setNotes,\n        notesError,\n        handleNotesSubmit\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 3\n  }, this);\n};\n_s(StylistsScreen, \"YnKmAGvQiLWqMO4D6KrU/qbDxXo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = StylistsScreen;\nexport default StylistsScreen;\nvar _c;\n$RefreshReg$(_c, \"StylistsScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","toast","Content","Spinner","changeStatusStylistAction","createNewStylistAction","createStylistSettingsAction","deleteStylistAction","getStylistListAction","getStylistSettingsAction","inputPhoneMasking","unMasking","validateEmail","validatePhone","addNotesAction","changePasswordUserAction","CHANGE_PASSWORD_USER_RESET","STYLER_RESET","CHANGE_STATUS_STYLER_RESET","CREATE_NEW_STYLER_RESET","DELETE_STYLER_RESET","CREATE_STYLIST_SETTINGS_RESET","CreateStylist","DeleteStylist","StylistData","ChangePwdUser","Pagination","StylistSettings","NoData","AddNotes","jsxDEV","_jsxDEV","StylistsScreen","showFilter","history","_s","dispatch","getUserInfo","state","stylistList","createStylist","changeStatustylist","deleteStylist","changePasswordUser","addStylistSettings","getStylistSettings","uploadFileData","setUploadFileData","uploadFileDataError","setUploadFileDataError","showAddModal","setShowAddModal","modalDeleteState","setModalDeleteState","modalChangePasswordState","setModalChangePasswordState","stylistSettingsModal","setStylistSettingsModal","selectUpdateModel","setSelectUpdateModel","totalPageSize","setTotalPageSize","pageNumber","setPageNumber","pageLimit","id","setUserId","name","setName","nameError","setNameError","email","setEmail","emailError","setEmailError","phone","setPhone","phoneError","setPhoneError","addNotesModal","setAddNotesModal","notes","setNotes","notesError","setNotesError","password","setPassword","passwordError","setPasswordError","address","setAddress","addressError","setAddressError","imageSrc","setImageSrc","imageSrcError","setImageSrcError","search","setSearch","serviceArray","setServiceArray","value","error","recurringType","setRecurringType","startTime","setStartTime","endTime","setEndTime","intervalTime","setIntervalTime","isCompulsory","setIsCompulsory","isCompulsoryError","setIsCompulsoryError","userInfo","data","role","pageSize","filter","type","push","status","clearData","success","message","clearDataSettings","handleAddModalClose","handleSubmit","e","preventDefault","trim","length","fileData","FormData","append","i","handleAddNotesModalClose","handleNoteModal","d","handleNotesSubmit","userNote","handleSettingsModalClose","settingsSubmitHandler","services","serviceArrayTmp","_id","toString","isBreakTimeCompulsory","onDeleteModalClose","onDeleteHandler","handlePageChange","currentPage","selectedPage","selected","onChangeHandler","enable","active","handleEditModalStylist","photo","onChangePwdUserHandler","onChangePwdModalClose","onSearchHandler","event","target","currentMenu","headerTitle","addBtn","addBtnText","addBtnIcon","addBtnClick","searchPlaceholder","searchIcon","searchvalue","searchOnChange","children","loading","fileName","_jsxFileName","lineNumber","columnNumber","result","className","list","onPageChange","rowsPerPage","title","subTitle","height","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/NewStylistScreen/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tchangeStatusStylistAction,\r\n\tcreateNewStylistAction,\r\n\tcreateStylistSettingsAction,\r\n\tdeleteStylistAction,\r\n\tgetStylistListAction,\r\n\tgetStylistSettingsAction\r\n} from '../../redux/actions/stylistActions';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport { addNotesAction, changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport {\r\n\tSTYLER_RESET,\r\n\tCHANGE_STATUS_STYLER_RESET,\r\n\tCREATE_NEW_STYLER_RESET,\r\n\tDELETE_STYLER_RESET,\r\n\tCREATE_STYLIST_SETTINGS_RESET\r\n} from '../../redux/constants/stylistConstants';\r\nimport CreateStylist from './CreateStylist';\r\nimport DeleteStylist from './DeleteStylist';\r\nimport StylistData from './StylistData';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport Pagination from '../../components/Pagination';\r\nimport StylistSettings from './StylistSettings';\r\nimport NoData from '../../website/components/NoData';\r\nimport AddNotes from './AddNotes';\r\n\r\nconst StylistsScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst stylistList = useSelector((state) => state.stylistList);\r\n\tconst createStylist = useSelector((state) => state.createStylist);\r\n\tconst changeStatustylist = useSelector((state) => state.changeStatustylist);\r\n\tconst deleteStylist = useSelector((state) => state.deleteStylist);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst addStylistSettings = useSelector((state) => state.addStylistSettings);\r\n\tconst getStylistSettings = useSelector((state) => state.getStylistSettings);\r\n\r\n\tconst [uploadFileData, setUploadFileData] = useState('');\r\n\tconst [uploadFileDataError, setUploadFileDataError] = useState('');\r\n\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [stylistSettingsModal, setStylistSettingsModal] = useState(false);\r\n\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tconst [id, setUserId] = useState('');\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\r\n\r\n\tconst [addNotesModal, setAddNotesModal] = useState(false);\r\n\tconst [notes, setNotes] = useState('');\r\n\tconst [notesError, setNotesError] = useState('');\r\n\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [imageSrcError, setImageSrcError] = useState('');\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\t//stylist settings\r\n\tconst [serviceArray, setServiceArray] = useState({ value: '', error: '' });\r\n\tconst [recurringType, setRecurringType] = useState({ value: 'month', error: '' });\r\n\tconst [startTime, setStartTime] = useState({ value: '', error: '' });\r\n\tconst [endTime, setEndTime] = useState({ value: '', error: '' });\r\n\tconst [intervalTime, setIntervalTime] = useState({ value: '', error: '' });\r\n\tconst [isCompulsory, setIsCompulsory] = useState(false);\r\n\tconst [isCompulsoryError, setIsCompulsoryError] = useState('');\r\n\t// const [endTimeError, setEndTimeError] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'admin' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: STYLER_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createStylist && createStylist.userInfo && createStylist.userInfo.status) {\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.success(createStylist.userInfo.message);\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createStylist && createStylist.userInfo && !createStylist.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.error(createStylist.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[createStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addStylistSettings && addStylistSettings.userInfo && addStylistSettings.userInfo.status) {\r\n\t\t\t\tclearDataSettings();\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.success(addStylistSettings.userInfo.message);\r\n\t\t\t} else if (addStylistSettings && addStylistSettings.userInfo && !addStylistSettings.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.error(addStylistSettings.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[addStylistSettings, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteStylist && deleteStylist.userInfo && deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteStylist && deleteStylist.userInfo && !deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[deleteStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatustylist && changeStatustylist.userInfo && changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatustylist.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatustylist && changeStatustylist.userInfo && !changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatustylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeStatustylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (id === '' && password === '') {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileDataError('Please select files to upload');\r\n\t\t} else {\r\n\t\t\tlet fileData = new FormData();\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tfileData.append('id', id);\r\n\t\t\t} else {\r\n\t\t\t\tfileData.append('password', password);\r\n\t\t\t}\r\n\r\n\t\t\tfileData.append('name', name);\r\n\t\t\tfileData.append('email', email);\r\n\t\t\tfileData.append('address', address);\r\n\t\t\tfileData.append('phone', unMasking(phone));\r\n\t\t\tfor (let i = 0; i < uploadFileData.length; i++) {\r\n\t\t\t\tfileData.append('image', uploadFileData[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(createNewStylistAction(fileData));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst handleAddNotesModalClose = () => {\r\n\t\tsetAddNotesModal(false)\r\n\t}\r\n\r\n\t//Add Notes Handler\r\n\tconst handleNoteModal = (d) => {\r\n\t\t// setAddNotesModal(true)\r\n\t\tsetUserId(d)\r\n\t}\r\n\tconst handleNotesSubmit = (id) => {\r\n\t\t// e.preventDefault()\r\n\t\tif (notes === '') {\r\n\t\t\tsetNotesError(\"Please add notes\")\r\n\t\t} else {\r\n\t\t\tlet data = {\r\n\t\t\t\tuserNote: notes,\r\n\t\t\t}\r\n\t\t\tdispatch(addNotesAction(id, data))\r\n\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tclearDataSettings();\r\n\t};\r\n\r\n\tconst clearDataSettings = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetStartTime({ value: '', error: '' })\r\n\t\tsetEndTime({ value: '', error: '' })\r\n\t\tsetRecurringType({ value: '', error: '' })\r\n\t\tsetServiceArray({ value: '', error: '' })\r\n\t\tsetIntervalTime({ value: '', error: '' })\r\n\t\tsetIsCompulsory('');\r\n\t\tsetIsCompulsoryError('');\r\n\t\tsetStylistSettingsModal(false);\r\n\t}\r\n\r\n\tconst settingsSubmitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet services = serviceArray.value;\r\n\t\tif (startTime.value === '' && startTime.value === '') {\r\n\t\t\tsetStartTime({ value: '', error: 'Please enter start time' });\r\n\t\t} else if (endTime.value === '' && endTime.value.trim() === '') {\r\n\t\t\tsetEndTime({ value: '', error: 'Please enter end time' });\r\n\t\t} else if (recurringType.value === '' && recurringType.value.trim() === '') {\r\n\t\t\tsetRecurringType({ ...recurringType, error: 'Please select recurring type' });\r\n\t\t} else if (intervalTime.value === '' && intervalTime.value.trim() === '') {\r\n\t\t\tsetIntervalTime({ value: '', error: 'Please enter interval time' });\r\n\t\t} else if (services === '' && !services.length) {\r\n\t\t\tsetServiceArray('Please select services');\r\n\t\t} else {\r\n\t\t\tlet serviceArrayTmp = [];\r\n\t\t\tfor (let i = 0; i < services.length; i++) {\r\n\t\t\t\tserviceArrayTmp.push(services[i]._id);\r\n\t\t\t}\r\n\t\t\t// makePublic: makePublic.value,\r\n\t\t\tdispatch(createStylistSettingsAction({\r\n\t\t\t\tid: selectUpdateModel._id,\r\n\t\t\t\trecurringType: recurringType.value,\r\n\t\t\t\tintervalTime: intervalTime.value,\r\n\t\t\t\tstartTime: startTime.value,\r\n\t\t\t\tendTime: endTime.value,\r\n\t\t\t\tservices: serviceArrayTmp.toString(),\r\n\t\t\t\tisBreakTimeCompulsory: isCompulsory\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = (d) => {\r\n\t\tdispatch(deleteStylistAction(selectUpdateModel._id));\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getStylistListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeStatusStylistAction(d._id, {\r\n\t\t\t\tenable: d.active ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetUserId('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPasswordError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetImageSrc('');\r\n\t\tsetImageSrcError('');\r\n\t\t// setCompany('');\r\n\t\t// setCompanyError('');\r\n\t};\r\n\r\n\tconst handleEditModalStylist = (d) => {\r\n\t\tsetUserId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetImageSrc(d.photo);\r\n\t\t// setCompany(d.company);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ id: d._id, type, email: d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='stylist'\r\n\t\t\theaderTitle='Stylist'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Stylist'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Stylists...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{stylistList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : stylistList &&\r\n\t\t\t\tstylistList.userInfo &&\r\n\t\t\t\tstylistList.userInfo.status &&\r\n\t\t\t\tstylistList.userInfo.data.result &&\r\n\t\t\t\tstylistList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<StylistData\r\n\t\t\t\t\t\tdata={stylistList.userInfo.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tsetNotes={setNotes}\r\n\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\thandleEditModalStylist={handleEditModalStylist}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t\tsetStylistSettingsModal={setStylistSettingsModal}\r\n\t\t\t\t\t\taddNotesModal={addNotesModal}\r\n\t\t\t\t\t\tsetAddNotesModal={setAddNotesModal}\r\n\t\t\t\t\t\thandleNoteModal={handleNoteModal}\r\n\t\t\t\t\t\tsetUserId={setUserId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={stylistList.userInfo}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any stylist data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateStylist\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\taddress,\r\n\t\t\t\t\tphone,\r\n\r\n\t\t\t\t\tsetUserId,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetAddress,\r\n\t\t\t\t\tsetPassword,\r\n\r\n\t\t\t\t\temailError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\tpasswordError,\r\n\t\t\t\t\taddressError,\r\n\r\n\t\t\t\t\tsetEmailError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetAddressError,\r\n\t\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\t\t// companyList,\r\n\t\t\t\t\t// company,\r\n\t\t\t\t\t// setCompany,\r\n\t\t\t\t\t// companyError,\r\n\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\r\n\t\t\t\t\timageSrc,\r\n\t\t\t\t\tsetImageSrc,\r\n\t\t\t\t\timageSrcError,\r\n\t\t\t\t\tsetImageSrcError,\r\n\t\t\t\t\tsetUploadFileData,\r\n\t\t\t\t\tuploadFileDataError,\r\n\t\t\t\t\tsetUploadFileDataError,\r\n\r\n\t\t\t\t\tnotes,\r\n\t\t\t\t\tsetNotes,\r\n\t\t\t\t\tnotesError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DeleteStylist data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t<StylistSettings\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tstartTime, setStartTime,\r\n\t\t\t\t\tendTime, setEndTime,\r\n\t\t\t\t\trecurringType, setRecurringType,\r\n\t\t\t\t\tintervalTime, setIntervalTime,\r\n\t\t\t\t\tserviceArray, setServiceArray,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\tgetStylistSettings,\r\n\t\t\t\t\tstylistSettingsModal,\r\n\t\t\t\t\thandleSettingsModalClose,\r\n\t\t\t\t\tsettingsSubmitHandler,\r\n\t\t\t\t\tisCompulsory,\r\n\t\t\t\t\tsetIsCompulsory,\r\n\t\t\t\t\tisCompulsoryError,\r\n\t\t\t\t\tsetIsCompulsoryError\r\n\t\t\t\t}} />\r\n\r\n\t\t\t<AddNotes data={{ id, addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit }} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default StylistsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}