{"ast":null,"code":"import axios from 'axios';\nimport { SALON_STAFF_REQUEST, SALON_STAFF_SUCCESS, SALON_STAFF_FAIL, DELETE_SALON_STAFF_SUCCESS, DELETE_SALON_STAFF_REQUEST, DELETE_SALON_STAFF_FAIL, CREATE_NEW_SALON_STAFF_REQUEST, CREATE_NEW_SALON_STAFF_SUCCESS, CREATE_NEW_SALON_STAFF_FAIL, UPDATE_SALON_STAFF_REQUEST, UPDATE_SALON_STAFF_RESET, UPDATE_SALON_STAFF_FAIL, UPDATE_SALON_STAFF_SUCCESS, CHANGE_STATUS_SALON_STAFF_REQUEST, CHANGE_STATUS_SALON_STAFF_SUCCESS, CHANGE_STATUS_SALON_STAFF_FAIL } from '../constants/salonStaffConstants';\nimport { BASE_URL } from './ip';\nexport const getSalonStaffListAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SALON_STAFF_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/salon-staff/get-salon-staff?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\n    dispatch({\n      type: SALON_STAFF_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: SALON_STAFF_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const deleteSalonStaffAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_SALON_STAFF_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`${BASE_URL}/salon-staff/delete-salon-staff?salonID=${id}`, config);\n    dispatch({\n      type: DELETE_SALON_STAFF_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_SALON_STAFF_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const createNewStaffSalonAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_NEW_SALON_STAFF_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/salon-staff/create-salon-staff`, formData, config);\n    dispatch({\n      type: CREATE_NEW_SALON_STAFF_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CREATE_NEW_SALON_STAFF_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const changeStatusSalonStaffAction = (id, formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CHANGE_STATUS_SALON_STAFF_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`${BASE_URL}/salon-staff/enable-disable-salon-staff?userID=${id}`, formData, config);\n    dispatch({\n      type: CHANGE_STATUS_SALON_STAFF_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CHANGE_STATUS_SALON_STAFF_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};","map":{"version":3,"names":["axios","SALON_STAFF_REQUEST","SALON_STAFF_SUCCESS","SALON_STAFF_FAIL","DELETE_SALON_STAFF_SUCCESS","DELETE_SALON_STAFF_REQUEST","DELETE_SALON_STAFF_FAIL","CREATE_NEW_SALON_STAFF_REQUEST","CREATE_NEW_SALON_STAFF_SUCCESS","CREATE_NEW_SALON_STAFF_FAIL","UPDATE_SALON_STAFF_REQUEST","UPDATE_SALON_STAFF_RESET","UPDATE_SALON_STAFF_FAIL","UPDATE_SALON_STAFF_SUCCESS","CHANGE_STATUS_SALON_STAFF_REQUEST","CHANGE_STATUS_SALON_STAFF_SUCCESS","CHANGE_STATUS_SALON_STAFF_FAIL","BASE_URL","getSalonStaffListAction","formData","dispatch","getState","type","userLogin","userInfo","config","headers","token","data","get","pageNumber","pageSize","filter","payload","err","response","message","deleteSalonStaffAction","id","delete","createNewStaffSalonAction","post","changeStatusSalonStaffAction","patch"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/redux/actions/salonStaffActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tSALON_STAFF_REQUEST,\r\n\tSALON_STAFF_SUCCESS,\r\n\tSALON_STAFF_FAIL,\r\n\r\n\tDELETE_SALON_STAFF_SUCCESS,\r\n\tDELETE_SALON_STAFF_REQUEST,\r\n\tDELETE_SALON_STAFF_FAIL,\r\n\r\n\tCREATE_NEW_SALON_STAFF_REQUEST,\r\n\tCREATE_NEW_SALON_STAFF_SUCCESS,\r\n\tCREATE_NEW_SALON_STAFF_FAIL,\r\n\r\n\tUPDATE_SALON_STAFF_REQUEST,\r\n\tUPDATE_SALON_STAFF_RESET,\r\n\tUPDATE_SALON_STAFF_FAIL,\r\n\tUPDATE_SALON_STAFF_SUCCESS,\r\n\tCHANGE_STATUS_SALON_STAFF_REQUEST,\r\n\tCHANGE_STATUS_SALON_STAFF_SUCCESS,\r\n\tCHANGE_STATUS_SALON_STAFF_FAIL\r\n} from '../constants/salonStaffConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\nexport const getSalonStaffListAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: SALON_STAFF_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/salon-staff/get-salon-staff?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const deleteSalonStaffAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/salon-staff/delete-salon-staff?salonID=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const createNewStaffSalonAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_NEW_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/salon-staff/create-salon-staff`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const changeStatusSalonStaffAction = (id, formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_STATUS_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/salon-staff/enable-disable-salon-staff?userID=${id}`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}