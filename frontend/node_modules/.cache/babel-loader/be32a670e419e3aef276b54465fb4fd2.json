{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\website\\\\Checkout\\\\ForgotPasswordModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Modal from '../../components/Modal';\nimport ModalButton from '../../components/Modal/ModalButton';\nimport ModalForm from '../../components/Modal/ModalForm';\nimport ModalHeading from '../../components/Modal/ModalHeading';\nimport { getUserByTokenAction } from '../../redux/actions/userActions';\nimport { forgotPasswordUserAction } from '../../redux/actions/websiteSettingAction';\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\nimport { validateEmail } from '../../utils/validators';\nimport InputBox from '../components/InputBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordModal = ({\n  data\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    modalChangePasswordState,\n    onChangePwdModalClose\n  } = data;\n  const [emailFPwd, setEmailFPwd] = useState({\n    value: '',\n    error: ''\n  });\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userLogin;\n  const changePasswordUser = useSelector(state => state.changePasswordUser);\n  useEffect(() => {\n    dispatch(getUserByTokenAction());\n    if (userInfo && userInfo.status) {\n      setEmailFPwd({\n        value: '',\n        error: ''\n      });\n      // history.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/checkout`)\n    } else if (userInfo && !userInfo.status) {\n      setEmailFPwd({\n        ...emailFPwd,\n        error: userInfo.message\n      });\n    }\n  }, [userInfo, error, dispatch]);\n  useEffect(() => {\n    if (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\n      toast.success(changePasswordUser.userInfo.message);\n      onChangePwdModalClose();\n      dispatch({\n        type: CHANGE_PASSWORD_USER_RESET\n      });\n    } else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\n      toast.error(changePasswordUser.userInfo.message);\n      dispatch({\n        type: CHANGE_PASSWORD_USER_RESET\n      });\n    }\n  },\n  // eslint-disable-next-line\n  [changePasswordUser, dispatch]);\n  const onChangePwdUserHandler = e => {\n    e.preventDefault();\n    if (emailFPwd.value === \"\") {\n      setEmailFPwd({\n        error: \"Please enter your Email\"\n      });\n    } else if (!validateEmail(emailFPwd.value)) {\n      setEmailFPwd({\n        error: \"Invalid Email\"\n      });\n    } else {\n      dispatch(forgotPasswordUserAction({\n        email: emailFPwd.value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: modalChangePasswordState,\n    style: {\n      background: '#ffffff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ModalHeading, {\n      heading: \"Password assistance\",\n      onClose: onChangePwdModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal__text\",\n        style: {\n          marginBottom: '0'\n        },\n        children: [\"Enter the email address associated with your salon account.\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n        type: \"email\",\n        placeholder: \"eg, johndoe@example.com\",\n        value: emailFPwd.value,\n        style: {\n          width: '100%',\n          height: '5rem'\n        },\n        onChange: e => setEmailFPwd({\n          value: e.target.value\n        }),\n        errorMessage: emailFPwd.error,\n        label: \"\",\n        icon: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal__text2\",\n        children: \"We'll send the auto genrated password to user email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n        varient: \"danger\",\n        label: \"Reset Password\",\n        icon: \"key\",\n        onClick: onChangePwdUserHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n_s(ForgotPasswordModal, \"oDg+4bBcydyxMdE2B8r4Res6wpw=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n_c = ForgotPasswordModal;\nexport default ForgotPasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordModal\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","toast","Modal","ModalButton","ModalForm","ModalHeading","getUserByTokenAction","forgotPasswordUserAction","CHANGE_PASSWORD_USER_RESET","validateEmail","InputBox","jsxDEV","_jsxDEV","ForgotPasswordModal","data","_s","dispatch","history","modalChangePasswordState","onChangePwdModalClose","emailFPwd","setEmailFPwd","value","error","userLogin","state","userInfo","loading","changePasswordUser","status","message","success","type","onChangePwdUserHandler","e","preventDefault","email","show","style","background","children","heading","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","marginBottom","placeholder","width","height","onChange","target","errorMessage","label","icon","varient","onClick","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/website/Checkout/ForgotPasswordModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Modal from '../../components/Modal'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport { getUserByTokenAction } from '../../redux/actions/userActions'\r\nimport { forgotPasswordUserAction } from '../../redux/actions/websiteSettingAction'\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants'\r\nimport { validateEmail } from '../../utils/validators'\r\nimport InputBox from '../components/InputBox'\r\n\r\nconst ForgotPasswordModal = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst { modalChangePasswordState, onChangePwdModalClose } = data;\r\n\tconst [emailFPwd, setEmailFPwd] = useState({ value: '', error: '' });\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo, loading, error } = userLogin;\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserByTokenAction());\r\n\t\t\tif (userInfo && userInfo.status) {\r\n\t\t\t\tsetEmailFPwd({ value: '', error: '' });\r\n\t\t\t\t// history.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/checkout`)\r\n\t\t\t} else if (userInfo && !userInfo.status) {\r\n\t\t\t\tsetEmailFPwd({ ...emailFPwd, error: userInfo.message });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userInfo, error, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tonChangePwdModalClose();\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tconst onChangePwdUserHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (emailFPwd.value === \"\") {\r\n\t\t\tsetEmailFPwd({ error: \"Please enter your Email\" })\r\n\t\t} else if (!validateEmail(emailFPwd.value)) {\r\n\t\t\tsetEmailFPwd({ error: \"Invalid Email\" })\r\n\t\t} else {\r\n\t\t\tdispatch(forgotPasswordUserAction({ email: emailFPwd.value }));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={modalChangePasswordState} style={{ background: '#ffffff' }}>\r\n\t\t\t<ModalHeading heading='Password assistance' onClose={onChangePwdModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text' style={{ marginBottom: '0' }}>\r\n\t\t\t\t\tEnter the email address associated with your salon account.{' '}\r\n\t\t\t\t</p>\r\n\t\t\t\t<br />\r\n\t\t\t\t<InputBox\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\tvalue={emailFPwd.value}\r\n\t\t\t\t\tstyle={{ width: '100%', height: '5rem' }}\r\n\t\t\t\t\tonChange={(e) => setEmailFPwd({ value: e.target.value })}\r\n\t\t\t\t\terrorMessage={emailFPwd.error}\r\n\t\t\t\t\tlabel=''\r\n\t\t\t\t\ticon='email'\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p className='modal__text2'>We'll send the auto genrated password to user email address.</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Reset Password' icon='key' onClick={onChangePwdUserHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default ForgotPasswordModal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}