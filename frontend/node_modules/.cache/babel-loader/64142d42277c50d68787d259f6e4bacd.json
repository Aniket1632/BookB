{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\NewDashBoardScreen\\\\SalonBarChar.js\";\nimport React from 'react';\nimport moment from \"moment\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'November', 'December'];\nconst createGradient = context => {\n  const gradient = context.chart.ctx.createLinearGradient(120, 120, 180, 300);\n  gradient.addColorStop(0, '#ff9000'); // Start color\n  return gradient;\n};\nexport const options = {\n  responsive: true,\n  scales: {\n    x: {\n      grid: {\n        display: false,\n        color: 'white'\n      }\n    },\n    y: {\n      grid: {\n        color: '#ffffff1c',\n        margin: '1rem'\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      display: false\n    },\n    title: {\n      display: false,\n      text: 'Chart.js Bar Chart'\n    }\n  }\n};\nconst SalonBarChar = ({\n  appointmentData,\n  role\n}) => {\n  const data = {\n    labels: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.salonData && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item => moment(item._id).format('MMM Do, h:mm a')),\n    datasets: [{\n      // label: 'Dataset 1',\n      data: role === \"admin\" ? appointmentData && appointmentData.map(item => item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item => item.count),\n      barThickness: 20,\n      // maxBarThickness:40,\n      // minBarLength: 10,\n      backgroundColor: context => createGradient(context),\n      borderWidth: 1,\n      borderColor: 'white'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard_section_2_1\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard_p\",\n      children: \"Number of appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = SalonBarChar;\nexport default SalonBarChar;\nvar _c;\n$RefreshReg$(_c, \"SalonBarChar\");","map":{"version":3,"names":["React","moment","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","labels","createGradient","context","gradient","chart","ctx","createLinearGradient","addColorStop","options","responsive","scales","x","grid","display","color","y","margin","plugins","legend","title","text","SalonBarChar","appointmentData","role","data","map","item","salonData","name","appointmentChart","_id","format","datasets","appointmentCount","count","barThickness","backgroundColor","borderWidth","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/NewDashBoardScreen/SalonBarChar.js"],"sourcesContent":["import React from 'react'\r\nimport moment from \"moment\"\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\n\r\n\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','November','December'];\r\n\r\n  const createGradient = (context) => {\r\n    const gradient = context.chart.ctx.createLinearGradient(120, 120, 180, 300);\r\n    gradient.addColorStop(0, '#ff9000');  // Start color\r\n    return gradient;\r\n  };\r\n\r\n  export const options = {\r\n    responsive: true,\r\n    scales: {\r\n        x: {\r\n           grid: {\r\n              display: false,\r\n              color: 'white'\r\n           }\r\n        },\r\n        y: {\r\n           grid: {\r\n            color: '#ffffff1c',\r\n            margin: '1rem'\r\n           }\r\n        }\r\n   },\r\n    plugins: {\r\n      legend: {\r\n        display:false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Bar Chart',\r\n      },\r\n    },\r\n  };\r\n\r\nconst SalonBarChar = ({appointmentData,role}) => {\r\n    const data = {\r\n        labels:role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.salonData  && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item=> moment(item._id).format('MMM Do, h:mm a')),\r\n        datasets: [\r\n          {\r\n            // label: 'Dataset 1',\r\n            data: role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item=>item.count),\r\n            barThickness: 20,\r\n            // maxBarThickness:40,\r\n            // minBarLength: 10,\r\n            backgroundColor: (context) => createGradient(context),\r\n            borderWidth: 1,\r\n            borderColor: 'white',\r\n\r\n          },\r\n          \r\n        ],\r\n      };\r\n    \r\n  return (\r\n    <div className='dashboard_section_2_1'>\r\n        <p className='dashboard_p'>Number of appointments</p>\r\n        <Bar options={options} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalonBarChar"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}