{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_COUPONS_FAIL, GET_ALL_COUPONS_REQUEST, GET_ALL_COUPONS_SUCCESS } from '../constants/couponConstants';\nimport { CHANGE_PASSWORD_USER_FAIL, CHANGE_PASSWORD_USER_REQUEST, CHANGE_PASSWORD_USER_SUCCESS, CREATE_NEW_USER_FAIL, CREATE_NEW_USER_REQUEST, CREATE_NEW_USER_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS } from '../constants/userConstants';\nimport { ADD_WEBSITE_CONTACT_US_FAIL, ADD_WEBSITE_CONTACT_US_REQUEST, ADD_WEBSITE_CONTACT_US_SUCCESS, ADD_WEBSITE_SETTING_FAIL, ADD_WEBSITE_SETTING_REQUEST, ADD_WEBSITE_SETTING_SUCCESS, GET_WEBSITE_SERVICE_FAIL, GET_WEBSITE_SERVICE_REQUEST, GET_WEBSITE_SERVICE_SUCCESS, GET_WEBSITE_SETTING_FAIL, GET_WEBSITE_SETTING_REQUEST, GET_WEBSITE_SETTING_SUCCESS } from '../constants/websiteSettingConstant';\nimport { BASE_URL } from './ip';\nconst utcTimeOffset = new Date().getTimezoneOffset();\nexport const addWebsiteSettingAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_WEBSITE_SETTING_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        token: userInfo.data.token,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/website/add-website-setting?offset=${utcTimeOffset}&type=website`, formData, config);\n    dispatch({\n      type: ADD_WEBSITE_SETTING_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_WEBSITE_SETTING_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getWebsiteSettingAction = salonId => async dispatch => {\n  try {\n    dispatch({\n      type: GET_WEBSITE_SETTING_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/website/get-website-setting-by-name?offset=${utcTimeOffset}&name=${salonId}`, config);\n    dispatch({\n      type: GET_WEBSITE_SETTING_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('websiteInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: GET_WEBSITE_SETTING_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getWebsiteSlotsAction = salonId => async dispatch => {\n  try {\n    dispatch({\n      type: GET_WEBSITE_SETTING_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/website/get-business-hour?offset=${utcTimeOffset}&salon=${salonId}`, config);\n    console.log(data);\n    dispatch({\n      type: GET_WEBSITE_SETTING_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_WEBSITE_SETTING_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getWebsiteSettingActionById = salonId => async dispatch => {\n  try {\n    dispatch({\n      type: GET_WEBSITE_SETTING_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/website/get-website-setting-by-salon?offset=${utcTimeOffset}&salon=${salonId}`, config);\n    dispatch({\n      type: GET_WEBSITE_SETTING_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('websiteInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: GET_WEBSITE_SETTING_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getWebsiteServiceAction = salonName => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_WEBSITE_SERVICE_REQUEST\n    });\n    // const { getPublicWebsite: { websiteInfo } } = getState(); \n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/service/get-website-service-groupby-category?offset=${utcTimeOffset}&name=${salonName}`, config);\n    dispatch({\n      type: GET_WEBSITE_SERVICE_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_WEBSITE_SERVICE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getWebsiteServiceActionById = salonId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_WEBSITE_SERVICE_REQUEST\n    });\n    // const { getPublicWebsite: { websiteInfo } } = getState(); \n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/service/get-website-service-groupby-category-salon?offset=${utcTimeOffset}&salon=${salonId}`, config);\n    dispatch({\n      type: GET_WEBSITE_SERVICE_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_WEBSITE_SERVICE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const addWebsiteContactUsAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_WEBSITE_CONTACT_US_REQUEST\n    });\n    const {\n      getPublicWebsite: {\n        websiteInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/website/contact-us?offset=${utcTimeOffset}&name=${websiteInfo.data.salon.name}`, formData, config);\n    dispatch({\n      type: ADD_WEBSITE_CONTACT_US_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_WEBSITE_CONTACT_US_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const webLogin = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const registerUserAction = userData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_NEW_USER_REQUEST\n    });\n    const {\n      getPublicWebsite: {\n        websiteInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BASE_URL}/website/register-user?name=${websiteInfo.data.salon.name}`, userData, config);\n    dispatch({\n      type: CREATE_NEW_USER_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CREATE_NEW_USER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const forgotPasswordUserAction = userData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CHANGE_PASSWORD_USER_REQUEST\n    });\n    const {\n      getPublicWebsite: {\n        websiteInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`${BASE_URL}/users/forgot-password?name=${websiteInfo.data.salon.name}`, userData, config);\n    dispatch({\n      type: CHANGE_PASSWORD_USER_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CHANGE_PASSWORD_USER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getAllWebsiteCouponsAction = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ALL_COUPONS_REQUEST\n    });\n    const {\n      getPublicWebsite: {\n        websiteInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/coupon/get-website-coupon-by-salon-name?name=${websiteInfo.data.salon.name}&pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\n    dispatch({\n      type: GET_ALL_COUPONS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_COUPONS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};","map":{"version":3,"names":["axios","GET_ALL_COUPONS_FAIL","GET_ALL_COUPONS_REQUEST","GET_ALL_COUPONS_SUCCESS","CHANGE_PASSWORD_USER_FAIL","CHANGE_PASSWORD_USER_REQUEST","CHANGE_PASSWORD_USER_SUCCESS","CREATE_NEW_USER_FAIL","CREATE_NEW_USER_REQUEST","CREATE_NEW_USER_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","ADD_WEBSITE_CONTACT_US_FAIL","ADD_WEBSITE_CONTACT_US_REQUEST","ADD_WEBSITE_CONTACT_US_SUCCESS","ADD_WEBSITE_SETTING_FAIL","ADD_WEBSITE_SETTING_REQUEST","ADD_WEBSITE_SETTING_SUCCESS","GET_WEBSITE_SERVICE_FAIL","GET_WEBSITE_SERVICE_REQUEST","GET_WEBSITE_SERVICE_SUCCESS","GET_WEBSITE_SETTING_FAIL","GET_WEBSITE_SETTING_REQUEST","GET_WEBSITE_SETTING_SUCCESS","BASE_URL","utcTimeOffset","Date","getTimezoneOffset","addWebsiteSettingAction","formData","dispatch","getState","type","userLogin","userInfo","config","headers","token","data","post","payload","err","response","message","getWebsiteSettingAction","salonId","get","localStorage","setItem","JSON","stringify","getWebsiteSlotsAction","console","log","getWebsiteSettingActionById","getWebsiteServiceAction","salonName","getWebsiteServiceActionById","addWebsiteContactUsAction","getPublicWebsite","websiteInfo","salon","name","webLogin","email","password","registerUserAction","userData","forgotPasswordUserAction","patch","getAllWebsiteCouponsAction","pageNumber","pageSize","filter"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/redux/actions/websiteSettingAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { GET_ALL_COUPONS_FAIL, GET_ALL_COUPONS_REQUEST, GET_ALL_COUPONS_SUCCESS } from '../constants/couponConstants';\r\nimport { CHANGE_PASSWORD_USER_FAIL, CHANGE_PASSWORD_USER_REQUEST, CHANGE_PASSWORD_USER_SUCCESS, CREATE_NEW_USER_FAIL, CREATE_NEW_USER_REQUEST, CREATE_NEW_USER_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS } from '../constants/userConstants';\r\nimport { ADD_WEBSITE_CONTACT_US_FAIL, ADD_WEBSITE_CONTACT_US_REQUEST, ADD_WEBSITE_CONTACT_US_SUCCESS, ADD_WEBSITE_SETTING_FAIL, ADD_WEBSITE_SETTING_REQUEST, ADD_WEBSITE_SETTING_SUCCESS, GET_WEBSITE_SERVICE_FAIL, GET_WEBSITE_SERVICE_REQUEST, GET_WEBSITE_SERVICE_SUCCESS, GET_WEBSITE_SETTING_FAIL, GET_WEBSITE_SETTING_REQUEST, GET_WEBSITE_SETTING_SUCCESS } from '../constants/websiteSettingConstant';\r\nimport { BASE_URL } from './ip';\r\n\r\nconst utcTimeOffset = new Date().getTimezoneOffset();\r\n\r\nexport const addWebsiteSettingAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_WEBSITE_SETTING_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/website/add-website-setting?offset=${utcTimeOffset}&type=website`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_WEBSITE_SETTING_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_WEBSITE_SETTING_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getWebsiteSettingAction = (salonId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_WEBSITE_SETTING_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/website/get-website-setting-by-name?offset=${utcTimeOffset}&name=${salonId}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('websiteInfo', JSON.stringify(data));\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getWebsiteSlotsAction = (salonId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_WEBSITE_SETTING_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/website/get-business-hour?offset=${utcTimeOffset}&salon=${salonId}`, config);\r\n\r\n\t\tconsole.log(data)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getWebsiteSettingActionById = (salonId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_WEBSITE_SETTING_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/website/get-website-setting-by-salon?offset=${utcTimeOffset}&salon=${salonId}`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('websiteInfo', JSON.stringify(data));\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SETTING_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getWebsiteServiceAction = (salonName) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_WEBSITE_SERVICE_REQUEST });\r\n\t\t// const { getPublicWebsite: { websiteInfo } } = getState(); \r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-website-service-groupby-category?offset=${utcTimeOffset}&name=${salonName}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getWebsiteServiceActionById = (salonId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_WEBSITE_SERVICE_REQUEST });\r\n\t\t// const { getPublicWebsite: { websiteInfo } } = getState(); \r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-website-service-groupby-category-salon?offset=${utcTimeOffset}&salon=${salonId}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_WEBSITE_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addWebsiteContactUsAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_WEBSITE_CONTACT_US_REQUEST });\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/website/contact-us?offset=${utcTimeOffset}&name=${websiteInfo.data.salon.name}`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_WEBSITE_CONTACT_US_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_WEBSITE_CONTACT_US_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const webLogin = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/users/login`, { email, password }, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const registerUserAction = (userData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_NEW_USER_REQUEST });\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/website/register-user?name=${websiteInfo.data.salon.name}`, userData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_USER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_USER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const forgotPasswordUserAction = (userData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_PASSWORD_USER_REQUEST });\r\n\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/users/forgot-password?name=${websiteInfo.data.salon.name}`, userData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_PASSWORD_USER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_PASSWORD_USER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const getAllWebsiteCouponsAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_COUPONS_REQUEST });\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/coupon/get-website-coupon-by-salon-name?name=${websiteInfo.data.salon.name}&pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_COUPONS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_COUPONS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}