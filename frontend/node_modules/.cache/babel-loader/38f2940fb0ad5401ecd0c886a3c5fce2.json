{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\AppSettingScreen\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMenuSettingsAction } from '../../redux/actions/salonActions';\nimport Content from '../../components/Content/Content';\nimport LogoUpload from './LogoUpload';\nimport LoginScreen from './LoginScreen';\nimport RegisterScreen from './RegisterScreen';\nimport HomeScreen from './HomeScreen';\nimport VideosScreen from './VideosScreen';\nimport ShopScreen from './ShopScreen';\nimport MyProfileScreen from './MyProfileScreen';\nimport AppSettingStyles from './AppSetting.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppSettingScreen = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const userLogin = useSelector(state => state.userLogin);\n  const getUserInfo = useSelector(state => state.getUserInfo);\n  useEffect(() => {\n    if (userLogin && userLogin.userInfo && userLogin.userInfo.status && userLogin.userInfo.data) {\n      setToken(userLogin.userInfo.data.token);\n    }\n  }, [userLogin]);\n  return /*#__PURE__*/_jsxDEV(Content, {\n    currentMenu: \"app-settings\",\n    headerTitle: \"App Settings\",\n    addBtn: false,\n    children: [/*#__PURE__*/_jsxDEV(LogoUpload, {\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: AppSettingStyles.screenCards,\n      children: [/*#__PURE__*/_jsxDEV(LoginScreen, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterScreen, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HomeScreen, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.appMenu && getUserInfo.userInfo.data.appMenu.isPOS && /*#__PURE__*/_jsxDEV(ShopScreen, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(MyProfileScreen, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(AppSettingScreen, \"pQUJHXvKZLxint3ntuHPkbBXNXQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = AppSettingScreen;\nexport default AppSettingScreen;\nvar _c;\n$RefreshReg$(_c, \"AppSettingScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getMenuSettingsAction","Content","LogoUpload","LoginScreen","RegisterScreen","HomeScreen","VideosScreen","ShopScreen","MyProfileScreen","AppSettingStyles","jsxDEV","_jsxDEV","AppSettingScreen","_s","token","setToken","userLogin","state","getUserInfo","userInfo","status","data","currentMenu","headerTitle","addBtn","children","fileName","_jsxFileName","lineNumber","columnNumber","className","screenCards","appMenu","isPOS","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/AppSettingScreen/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMenuSettingsAction } from '../../redux/actions/salonActions';\r\n\r\nimport Content from '../../components/Content/Content';\r\nimport LogoUpload from './LogoUpload';\r\nimport LoginScreen from './LoginScreen';\r\nimport RegisterScreen from './RegisterScreen';\r\nimport HomeScreen from './HomeScreen';\r\nimport VideosScreen from './VideosScreen';\r\nimport ShopScreen from './ShopScreen';\r\nimport MyProfileScreen from './MyProfileScreen';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\n\r\nconst AppSettingScreen = () => { \r\n\tconst [ token, setToken ] = useState('');\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo); \r\n\t\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userLogin && userLogin.userInfo && userLogin.userInfo.status && userLogin.userInfo.data) {\r\n\t\t\t\tsetToken(userLogin.userInfo.data.token);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ userLogin ]\r\n\t);\r\n \r\n\r\n\treturn (\r\n\t\t<Content currentMenu='app-settings' headerTitle='App Settings' addBtn={false}>\r\n\t\t\t<LogoUpload token={token} />\r\n\r\n\t\t\t<div className={AppSettingStyles.screenCards}>\r\n\t\t\t\t<LoginScreen token={token} />\r\n\t\t\t\t<RegisterScreen token={token} />\r\n\t\t\t\t<HomeScreen token={token} /> \r\n\t\t\t\t{getUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\tgetUserInfo.userInfo.data.appMenu &&\r\n\t\t\t\tgetUserInfo.userInfo.data.appMenu.isPOS && <ShopScreen token={token} />}\r\n\t\t\t\t<MyProfileScreen token={token} />\r\n\t\t\t</div>\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default AppSettingScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}