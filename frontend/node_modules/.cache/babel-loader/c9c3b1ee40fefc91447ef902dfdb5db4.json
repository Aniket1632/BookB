{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\components\\\\DragDropImg\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './dragDrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragDrop = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState();\n  const [errorMessage, setErrorMessage] = useState('');\n  const dragOver = e => {\n    e.preventDefault();\n  };\n  const dragEnter = e => {\n    e.preventDefault();\n  };\n  const dragLeave = e => {\n    e.preventDefault();\n  };\n  const fileSize = size => {\n    if (size === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n  };\n  const handleFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        // add to an array so we can display the name of file\n      } else {\n        // add a new property called invalid\n        // files\\[i\\]['invalid'] = true;\n        // add to the same array so we can display the name of the file\n        setSelectedFiles(prevArray => [...prevArray, files[i]]);\n        // set error message\n        setErrorMessage('File type not permitted');\n      }\n    }\n  };\n  const validateFile = file => {\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon'];\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n    return true;\n  };\n  const fileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-container\",\n        onDragOver: dragOver,\n        onDragEnter: dragEnter,\n        onDragLeave: dragLeave,\n        onDrop: fileDrop,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), \"Drag & Drop files here or click to upload\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-display-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(DragDrop, \"2DKgbZ3yjcBKPvR2pNkH1S7bNA4=\");\n_c = DragDrop;\nexport default DragDrop;\nvar _c;\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DragDrop","_s","selectedFiles","setSelectedFiles","errorMessage","setErrorMessage","dragOver","e","preventDefault","dragEnter","dragLeave","fileSize","size","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","length","handleFiles","files","validateFile","prevArray","file","validTypes","indexOf","type","fileDrop","dataTransfer","children","className","onDragOver","onDragEnter","onDragLeave","onDrop","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/components/DragDropImg/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './dragDrop.css'\r\n\r\nconst DragDrop = () => {\r\n    const [selectedFiles, setSelectedFiles] = useState();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    }\r\n\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (validateFile(files[i])) {\r\n                // add to an array so we can display the name of file\r\n\r\n            } else {\r\n                // add a new property called invalid\r\n                // files\\[i\\]['invalid'] = true;\r\n                // add to the same array so we can display the name of the file\r\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n                // set error message\r\n                setErrorMessage('File type not permitted');\r\n            }\r\n        }\r\n    }\r\n    const validateFile = (file) => {\r\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon'];\r\n        if (validTypes.indexOf(file.type) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        if (files.length) {\r\n            handleFiles(files);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <p className=\"drag-title\">React Drag and Drop Image Upload</p> */}\r\n            <div className=\"drag-container\">\r\n                <div className=\"drop-container\" onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                        <div className=\"file-display-container\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragDrop"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}