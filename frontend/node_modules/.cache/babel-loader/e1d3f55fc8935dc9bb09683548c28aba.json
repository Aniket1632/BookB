{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\AppSettingScreen\\\\LogoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport FileUpload from '../../components/formInputs/FileUpload';\nimport ModalButton from '../../components/Modal/ModalButton';\nimport LogoUploadSkeleton from '../../components/Skeletons/AppSettings/LogoUploadSkeleton';\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\nimport AppSettingStyles from './AppSetting.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogoUpload = ({\n  token\n}) => {\n  _s();\n  const [imageSrc, setImageSrc] = useState('');\n  const [uploadLogo, setUploadLogo] = useState({\n    data: [],\n    error: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [loginScreenData, setLoginScreenData] = useState({});\n  useEffect(() => {\n    if (token) getData();\n  }, [token]);\n  useEffect(() => {\n    if (loginScreenData && loginScreenData._id) {\n      setImageSrc(loginScreenData.appLogoImageURL);\n    }\n  }, [loginScreenData]);\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await getSalonAppSetting('logo', token);\n      setLoginScreenData(data);\n    } catch (error) {\n      toast.error(error);\n    }\n    setLoading(false);\n  };\n  const handleChangeImage = e => {\n    var file = e.target.files[0];\n    var reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        setImageSrc(reader.result);\n      };\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!imageSrc) {\n      setUploadLogo({\n        ...uploadLogo,\n        error: 'Please upload salon logo'\n      });\n    } else {\n      let formData = new FormData();\n      uploadLogo.data.length > 0 && formData.append('appLogoImageURL', uploadLogo.data[0]);\n      try {\n        setLoading(true);\n        await setSalonAppSetting('logo', formData, token);\n        setLoading(false);\n        // toast.success(data && data.message);\n        toast.success('Salon logo updated!');\n        getData();\n      } catch (error) {\n        setLoading(false);\n        toast.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: AppSettingStyles.flex,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: AppSettingStyles.screenCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: AppSettingStyles.screenCardTitle,\n        children: \"App Logo Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LogoUploadSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n          label: \"Upload App Logo\",\n          icon: \"upload\",\n          image: imageSrc,\n          onChange: e => {\n            handleChangeImage(e);\n            setUploadLogo({\n              data: e.target.files,\n              error: ''\n            });\n          },\n          errorMessage: uploadLogo.error\n          // style={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n          label: \"Save\",\n          icon: \"plus\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n_s(LogoUpload, \"Wss6pLtlYNhyhyCIonCWB4nJatQ=\");\n_c = LogoUpload;\nexport default LogoUpload;\nvar _c;\n$RefreshReg$(_c, \"LogoUpload\");","map":{"version":3,"names":["React","useState","Fragment","useEffect","toast","FileUpload","ModalButton","LogoUploadSkeleton","getSalonAppSetting","setSalonAppSetting","AppSettingStyles","jsxDEV","_jsxDEV","LogoUpload","token","_s","imageSrc","setImageSrc","uploadLogo","setUploadLogo","data","error","loading","setLoading","loginScreenData","setLoginScreenData","getData","_id","appLogoImageURL","handleChangeImage","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","handleSubmit","preventDefault","formData","FormData","length","append","success","className","flex","children","screenCard","screenCardTitle","fileName","_jsxFileName","lineNumber","columnNumber","label","icon","image","onChange","errorMessage","onClick","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/AppSettingScreen/LogoUpload.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport LogoUploadSkeleton from '../../components/Skeletons/AppSettings/LogoUploadSkeleton';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\n\r\nconst LogoUpload = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadLogo, setUploadLogo] = useState({ data: [], error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [loginScreenData, setLoginScreenData] = useState({});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (loginScreenData && loginScreenData._id) {\r\n\t\t\t\tsetImageSrc(loginScreenData.appLogoImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[loginScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('logo', token);\r\n\t\t\tsetLoginScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!imageSrc) {\r\n\t\t\tsetUploadLogo({ ...uploadLogo, error: 'Please upload salon logo' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tuploadLogo.data.length > 0 && formData.append('appLogoImageURL', uploadLogo.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('logo', formData, token);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\ttoast.success('Salon logo updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.flex}>\r\n\t\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>App Logo Settings</h3>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<LogoUploadSkeleton />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Upload App Logo'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadLogo({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadLogo.error}\r\n\t\t\t\t\t\t// style={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LogoUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}