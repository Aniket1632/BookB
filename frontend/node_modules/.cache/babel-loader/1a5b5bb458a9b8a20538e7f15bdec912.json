{"ast":null,"code":"var _jsxFileName = \"E:\\\\D-Disk folders\\\\office projects\\\\barberly\\\\frontend\\\\src\\\\screens\\\\AppearanceScreen\\\\WorkHourModal.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Button from '../../components/formInputs/Button';\nimport InputBox from '../../components/formInputs/InputBox';\nimport Modal from '../../components/Modal';\nimport ModalForm from '../../components/Modal/ModalForm';\nimport ModalHeading from '../../components/Modal/ModalHeading';\nimport AvailabilityStyle from '../StylistSessionScreen/StylistAvailability.module.css';\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkHourModal = ({\n  data\n}) => {\n  const {\n    appointmentModal,\n    setAppointmentModal,\n    weekDays,\n    setWeekDays,\n    handleWorkHourSubmit\n  } = data;\n  const handleStatusChange = (e, main, mainIndex, day) => {\n    const newFormValues = [...weekDays];\n    newFormValues[mainIndex].isAvailable = e.target.checked;\n    setWeekDays(newFormValues);\n  };\n  const handleChange = (e, mainIndex) => {\n    const newFormValues = [...weekDays];\n    newFormValues[mainIndex].slot[e.target.name] = e.target.value;\n    setWeekDays(newFormValues);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: appointmentModal,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeading, {\n      heading: \"Add Work Hours\",\n      onClose: () => setAppointmentModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n      style: {\n        marginBottom: '2.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '60vh',\n          overflow: 'auto',\n          color: 'white'\n        },\n        children: weekDays && weekDays.length > 0 && weekDays.map((day, mainIndex, main) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(InputsSectionColumn, {\n              style: {\n                alignItems: 'flex-end',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: day.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: day.isAvailable,\n                  onChange: e => handleStatusChange(e, main, mainIndex, day),\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  name: \"active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 10\n              }, this), day.isAvailable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(InputBox, {\n                  label: \"Start time\",\n                  icon: \"clock\",\n                  type: \"time\",\n                  onChange: e => handleChange(e, mainIndex),\n                  value: day.slot.startTime\n                  // onChange={(e) => setProductName({ value: e.target.value })}\n                  // errorMessage={productName.error}\n                  ,\n                  name: \"startTime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n                  label: \"End time\",\n                  icon: \"clock\",\n                  type: \"time\",\n                  onChange: e => handleChange(e, mainIndex),\n                  value: day.slot.endTime,\n                  name: \"endTime\"\n                  // value={productName.value}\n                  // onChange={(e) => setProductName({ value: e.target.value })}\n                  // errorMessage={productName.error}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true) : \"Closed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }, this)\n          }, mainIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Update\",\n          onClick: handleWorkHourSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_c = WorkHourModal;\nexport default WorkHourModal;\nvar _c;\n$RefreshReg$(_c, \"WorkHourModal\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Button","InputBox","Modal","ModalForm","ModalHeading","AvailabilityStyle","InputsSectionColumn","jsxDEV","_jsxDEV","_Fragment","WorkHourModal","data","appointmentModal","setAppointmentModal","weekDays","setWeekDays","handleWorkHourSubmit","handleStatusChange","e","main","mainIndex","day","newFormValues","isAvailable","target","checked","handleChange","slot","name","value","show","children","heading","onClose","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","height","overflow","color","length","map","alignItems","flexDirection","className","onChange","type","label","icon","startTime","endTime","onClick","_c","$RefreshReg$"],"sources":["E:/D-Disk folders/office projects/barberly/frontend/src/screens/AppearanceScreen/WorkHourModal.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport Button from '../../components/formInputs/Button';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport Modal from '../../components/Modal'\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport AvailabilityStyle from '../StylistSessionScreen/StylistAvailability.module.css';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn'\r\n\r\nconst WorkHourModal = ({ data }) => {\r\n\tconst { appointmentModal, setAppointmentModal, weekDays, setWeekDays, handleWorkHourSubmit } = data;\r\n\r\n\tconst handleStatusChange = (e, main, mainIndex, day) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].isAvailable = e.target.checked;\r\n\t\tsetWeekDays(newFormValues);\r\n\t}\r\n\r\n\tconst handleChange = (e, mainIndex) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].slot[e.target.name] = e.target.value;\r\n\t\tsetWeekDays(newFormValues);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal show={appointmentModal}>\r\n\t\t\t<ModalHeading heading=\"Add Work Hours\" onClose={() => setAppointmentModal(false)} />\r\n\r\n\t\t\t<ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<div style={{ height: '60vh', overflow: 'auto',color:'white' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tweekDays &&\r\n\t\t\t\t\t\tweekDays.length > 0 &&\r\n\t\t\t\t\t\tweekDays.map((day, mainIndex, main) => {\r\n\r\n\r\n\t\t\t\t\t\t\treturn <div key={mainIndex}>\r\n\t\t\t\t\t\t\t\t<InputsSectionColumn style={{ alignItems: 'flex-end', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t\t\t\t<h1>{day.day}</h1>\r\n\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={day.isAvailable}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleStatusChange(e, main, mainIndex, day)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tday.isAvailable ? <>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Start time'\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon='clock'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, mainIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={day.slot.startTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(e) => setProductName({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// errorMessage={productName.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"startTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='End time'\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon='clock'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, mainIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={day.slot.endTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"endTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t// value={productName.value}\r\n\t\t\t\t\t\t\t\t\t\t\t// onChange={(e) => setProductName({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t// errorMessage={productName.error}\r\n\t\t\t\t\t\t\t\t\t\t\t/></> : \"Closed\"}\r\n\t\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='form-button'>\r\n\t\t\t\t\t<Button label='Update' onClick={handleWorkHourSubmit} >\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default WorkHourModal"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,iBAAiB,MAAM,wDAAwD;AACtF,OAAOC,mBAAmB,MAAM,4CAA4C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAX,QAAA,IAAAY,SAAA;AAE5E,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnC,MAAM;IAAEC,gBAAgB;IAAEC,mBAAmB;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAqB,CAAC,GAAGL,IAAI;EAEnG,MAAMM,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,KAAK;IACvD,MAAMC,aAAa,GAAG,CAAC,GAAGR,QAAQ,CAAC;IACnCQ,aAAa,CAACF,SAAS,CAAC,CAACG,WAAW,GAAGL,CAAC,CAACM,MAAM,CAACC,OAAO;IACvDV,WAAW,CAACO,aAAa,CAAC;EAC3B,CAAC;EAED,MAAMI,YAAY,GAAGA,CAACR,CAAC,EAAEE,SAAS,KAAK;IACtC,MAAME,aAAa,GAAG,CAAC,GAAGR,QAAQ,CAAC;IACnCQ,aAAa,CAACF,SAAS,CAAC,CAACO,IAAI,CAACT,CAAC,CAACM,MAAM,CAACI,IAAI,CAAC,GAAGV,CAAC,CAACM,MAAM,CAACK,KAAK;IAC7Dd,WAAW,CAACO,aAAa,CAAC;EAC3B,CAAC;EAED,oBACCd,OAAA,CAACN,KAAK;IAAC4B,IAAI,EAAElB,gBAAiB;IAAAmB,QAAA,gBAC7BvB,OAAA,CAACJ,YAAY;MAAC4B,OAAO,EAAC,gBAAgB;MAACC,OAAO,EAAEA,CAAA,KAAMpB,mBAAmB,CAAC,KAAK;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpF7B,OAAA,CAACL,SAAS;MAACmC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAS,CAAE;MAAAR,QAAA,gBAC5CvB,OAAA;QAAK8B,KAAK,EAAE;UAAEE,MAAM,EAAE,MAAM;UAAEC,QAAQ,EAAE,MAAM;UAACC,KAAK,EAAC;QAAQ,CAAE;QAAAX,QAAA,EAE7DjB,QAAQ,IACRA,QAAQ,CAAC6B,MAAM,GAAG,CAAC,IACnB7B,QAAQ,CAAC8B,GAAG,CAAC,CAACvB,GAAG,EAAED,SAAS,EAAED,IAAI,KAAK;UAGtC,oBAAOX,OAAA;YAAAuB,QAAA,eACNvB,OAAA,CAACF,mBAAmB;cAACgC,KAAK,EAAE;gBAAEO,UAAU,EAAE,UAAU;gBAAEC,aAAa,EAAE;cAAM,CAAE;cAAAf,QAAA,gBAC5EvB,OAAA;gBAAAuB,QAAA,EAAKV,GAAG,CAACA;cAAG;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClB7B,OAAA;gBAAOuC,SAAS,EAAC,QAAQ;gBAAAhB,QAAA,gBACxBvB,OAAA;kBACCiB,OAAO,EAAEJ,GAAG,CAACE,WAAY;kBACzByB,QAAQ,EAAG9B,CAAC,IAAKD,kBAAkB,CAACC,CAAC,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,CAAE;kBAC7D4B,IAAI,EAAC,UAAU;kBACfF,SAAS,EAAC,UAAU;kBACpBnB,IAAI,EAAC;gBAAQ;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACF7B,OAAA;kBAAMuC,SAAS,EAAC;gBAAc;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,EAGPhB,GAAG,CAACE,WAAW,gBAAGf,OAAA,CAAAC,SAAA;gBAAAsB,QAAA,gBACjBvB,OAAA,CAACP,QAAQ;kBACRiD,KAAK,EAAC,YAAY;kBAClBC,IAAI,EAAC,OAAO;kBACZF,IAAI,EAAC,MAAM;kBACXD,QAAQ,EAAG9B,CAAC,IAAKQ,YAAY,CAACR,CAAC,EAAEE,SAAS,CAAE;kBAC5CS,KAAK,EAAER,GAAG,CAACM,IAAI,CAACyB;kBAChB;kBACA;kBAAA;kBACAxB,IAAI,EAAC;gBAAW;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB,CAAC,eACF7B,OAAA,CAACP,QAAQ;kBACRiD,KAAK,EAAC,UAAU;kBAChBC,IAAI,EAAC,OAAO;kBACZF,IAAI,EAAC,MAAM;kBACXD,QAAQ,EAAG9B,CAAC,IAAKQ,YAAY,CAACR,CAAC,EAAEE,SAAS,CAAE;kBAC5CS,KAAK,EAAER,GAAG,CAACM,IAAI,CAAC0B,OAAQ;kBACxBzB,IAAI,EAAC;kBACN;kBACA;kBACA;gBAAA;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,eAAE,CAAC,GAAG,QAAQ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC,GArCNjB,SAAS;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCrB,CAAC;QAEP,CACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN7B,OAAA;QAAKuC,SAAS,EAAC,aAAa;QAAAhB,QAAA,eAC3BvB,OAAA,CAACR,MAAM;UAACkD,KAAK,EAAC,QAAQ;UAACI,OAAO,EAAEtC;QAAqB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAAAkB,EAAA,GA/EK7C,aAAa;AAiFnB,eAAeA,aAAa;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}