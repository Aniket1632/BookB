[{"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\index.js":"1","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\App.js":"2","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\store.js":"3","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\userActions.js":"4","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\salonActions.js":"5","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\ip.js":"6","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\userReducers.js":"7","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ConragatulationModal\\CongratulationModal.js":"8","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\salonReducers.js":"9","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\videoReducers.js":"10","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\stylistReducers.js":"11","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\attendanceReducers.js":"12","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\salonStaffReducers.js":"13","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\productReducers.js":"14","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\companyReducers.js":"15","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\formReducers.js":"16","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\couponReducers.js":"17","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\appVersionReducers.js":"18","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\serviceReducers.js":"19","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\availabilityReducers.js":"20","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\notificationReducers.js":"21","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\appointmentReducers.js":"22","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\reportReducers.js":"23","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\subscriptionReducers.js":"24","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\onboardingReducers.js":"25","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\couponBookBReducers.js":"26","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\websiteSettingReducers.js":"27","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\promoCodesReducers.js":"28","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\navigation\\index.js":"29","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\salonConstants.js":"30","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\userConstants.js":"31","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\salonStaffConstants.js":"32","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\videoConstants.js":"33","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\couponConstants.js":"34","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\stylistConstants.js":"35","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\formConstants.js":"36","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\attendanceConstants.js":"37","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\availabilityConstants.js":"38","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\appVersionConstants.js":"39","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\productConstants.js":"40","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\companyConstants.js":"41","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\reportConstants.js":"42","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\serviceConstants.js":"43","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\appointmentConstants.js":"44","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\promoCodesConstant.js":"45","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\notificationConstants.js":"46","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\onboardingConstants.js":"47","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\couponBookBConstants.js":"48","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\SubscriptionConstants.js":"49","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\websiteSettingConstant.js":"50","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\RewardScreen\\index.js":"51","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductInformation\\ProductInfo.js":"52","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\index.js":"53","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\index.js":"54","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ViewCart\\ViewCart.js":"55","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\LoginScreenNew\\index.js":"56","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\RewardScreen\\RewardDescriptionModel.js":"57","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\productActions.js":"58","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\websiteSettingAction.js":"59","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Content\\Content.js":"60","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\RewardContent\\Content.js":"61","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\index.js":"62","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsCategoriesScreen\\index.js":"63","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\index.js":"64","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CheckinUserScreen\\index.js":"65","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\LoginScreen\\index.js":"66","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\index.js":"67","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\index.js":"68","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\index.js":"69","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductDetailsScreen\\index.js":"70","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\index.js":"71","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SendNotification\\index.js":"72","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\index.js":"73","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoDetailsScreen\\index.js":"74","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\index.js":"75","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\index.js":"76","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\index.js":"77","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\index.js":"78","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\PromotionCodeScreen\\index.js":"79","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\index.js":"80","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\index.js":"81","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\index.js":"82","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceCategoriesScreen\\index.js":"83","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\index.js":"84","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductsList\\index.js":"85","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\index.js":"86","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\index.js":"87","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\index.js":"88","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\index.js":"89","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\index.js":"90","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\index.js":"91","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\index.js":"92","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\index.js":"93","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\UserSignUp\\index.js":"94","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\login\\index.js":"95","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewPromotionCodeScreen\\index.js":"96","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\index.js":"97","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\index.js":"98","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewNotificationsScreen\\index.js":"99","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\OrderHistory\\index.js":"100","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\index.js":"101","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\OrderSummary\\index.js":"102","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\MyProfileScreen_New\\index.js":"103","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\PageNotFound\\index.js":"104","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\index.js":"105","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\index.js":"106","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\DiscountsList\\index.js":"107","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\CustomHomeScreen\\index.js":"108","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductCategoriesScreen\\index.js":"109","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\AppPayment\\index.js":"110","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Button\\CheckoutButton.js":"111","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\SubHeadingContent\\SubHeadingContent.js":"112","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\QuantityInput\\QuantityInput.js":"113","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Stars\\Stars.js":"114","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\WebsiteContent\\Content.js":"115","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\WebsiteSpinner\\Spinner.js":"116","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\index.js":"117","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\index.js":"118","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\Modals\\DeleteCouponModal.js":"119","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\Modals\\AddCoupon.js":"120","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LoginContent\\LoginContent.js":"121","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Content.js":"122","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\couponActions.js":"123","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\WaitlistTable.js":"124","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Spinner\\Spinner.js":"125","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Readmore\\index.js":"126","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\NoData\\index.js":"127","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SessionTimeoutModal.js":"128","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\reportActions.js":"129","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductCategoriesScreen\\NewProductsCategoriesScreen.js":"130","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\CustomHomeScreen\\RoundCards.js":"131","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\AddAppVersion.js":"132","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\appVersionActions.js":"133","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\DeleteAppVersion.js":"134","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\CancelSubscription.js":"135","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\subscriptionAction.js":"136","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\MenuSettingUser.js":"137","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\ChangePwdUser.js":"138","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\SalonData.js":"139","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\DeleteSalon.js":"140","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\CreateEditSalon.js":"141","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Headers\\Header.js":"142","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\DeleteModal.js":"143","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\utils\\validators.js":"144","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\Button\\index.js":"145","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\index.js":"146","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\RewardModal\\RewardModal.js":"147","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\MyProfileSkeleton.js":"148","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\PasswordChangeComponent\\PasswordChangeComponent.js":"149","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\TimeDurationComponent\\TimeDurationComponent.js":"150","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalHeading.js":"151","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalForm.js":"152","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalButton.js":"153","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\addStockProduct.js":"154","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\ProductDetailModal.js":"155","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\CreateEditProduct.js":"156","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\DeleteProduct.js":"157","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\MyProfileInputComponent\\MyProfileInputComponent.js":"158","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\ProductSummary.js":"159","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\UserIconComponent\\UserIconComponent.js":"160","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseButton\\BaseButton.js":"161","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\OrderData.js":"162","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Pagination\\index.js":"163","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\AppointmentSection.js":"164","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\Activityskeleton.js":"165","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\appointmentAction.js":"166","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\AppointmentList.js":"167","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LogoutModal.js":"168","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LoginContent\\LoginCard\\LoginCard.js":"169","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Footer\\index.js":"170","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NoData\\index.js":"171","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSectionColumn.js":"172","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\StylistSettings.js":"173","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\AddNotes.js":"174","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\index.js":"175","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalButton.js":"176","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalHeading.js":"177","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalForm.js":"178","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputsSectionColumn.js":"179","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputsSection.js":"180","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\CartSidebar\\CartSidebar.js":"181","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\TextareaBox\\index.js":"182","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\stylistActions.js":"183","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseInput\\BaseInput.js":"184","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewRadioButton\\RadioButtons.js":"185","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Header\\index.js":"186","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ImageUploadComponent\\ImageUploadComponent.js":"187","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\index.js":"188","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\ActivitySkeletonSmall.js":"189","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\UploadFile.js":"190","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputSections.js":"191","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\StylistData.js":"192","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\DeleteStylist.js":"193","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewInputBox\\index.js":"194","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\LoginSkeleton.js":"195","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\index.js":"196","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewTextareaBox\\index.js":"197","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewFileUpload\\index.js":"198","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\CreateStylist.js":"199","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSection.js":"200","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\serviceActions.js":"201","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseInputNew\\BaseInput.js":"202","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\MultiSelectBox.js":"203","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewInputBox\\InputTime.js":"204","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\CreateAccountModal.js":"205","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\ForgotPasswordModal.js":"206","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewButton\\index.js":"207","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\LoginModal.js":"208","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\QuantityInput\\QuantityInputSidebar.js":"209","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\notificationActions.js":"210","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\DeleteService.js":"211","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\AddService.js":"212","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\DeleteAppointmentModal.js":"213","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\CreateSlotModal.js":"214","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddSlotModal.js":"215","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\WaitlistModal.js":"216","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\availabilityActions.js":"217","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\DeleteAvailability.js":"218","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\calendarData.js":"219","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddBusinessHoursWeekly.js":"220","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\index.js":"221","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddAvailability.js":"222","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Calender\\Temp.js":"223","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\SidebarSkeleton.js":"224","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\StylistSidebar.js":"225","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\SalonSidebar.js":"226","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\AdminSidebar.js":"227","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\HeaderSkeleton.js":"228","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewPromotionCodeScreen\\CreatePromoCode.js":"229","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\PromoCodeAction.js":"230","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\UserScreenSkeleton.js":"231","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\couponBookBActions.js":"232","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\login\\ChangePwdUser.js":"233","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\PublicAppointmentSkeleton.js":"234","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSection1.js":"235","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\SubscriptionDetail.js":"236","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\AppointmentDetail.js":"237","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\Stylist.js":"238","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\RangeDatePickerModal.js":"239","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\PieChart.js":"240","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\LineChart.js":"241","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\DasboardCard.js":"242","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\DashboardCard.js":"243","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\BarChar.js":"244","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\AllPackages.js":"245","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Inputs\\Input.js":"246","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\DeleteSubscription.js":"247","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\CreateSubscription.js":"248","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\BookAnAppointmentModal.js":"249","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\AddPriceModal.js":"250","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\DownloadButton.js":"251","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\AllPackages.js":"252","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\DeleteSubscription.js":"253","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\CreateSubscription.js":"254","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\ServiceCard.js":"255","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\salonStaffActions.js":"256","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\CreateSalonStaffUser.js":"257","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\DeleteSalonUser.js":"258","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\SalonStaffData.js":"259","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\LogOutUser.js":"260","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\SendMessage.js":"261","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\AddNotes.js":"262","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\SelectInput.js":"263","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\CreateUser.js":"264","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\DeleteUser.js":"265","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\UsersData.js":"266","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\SalonBarChar.js":"267","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\SubscriptionDetail.js":"268","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\AppointmentDetail.js":"269","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\RangeDatePickerModal.js":"270","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\Stylist.js":"271","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\LineChart.js":"272","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\DasboardCard.js":"273","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\PieChart.js":"274","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\BarChatAdmin.js":"275","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\BarChar.js":"276","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductsList\\Products.js":"277","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\Subscription.js":"278","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\StylistDetails.js":"279","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\AddStylistModal.js":"280","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\onboardingActions.js":"281","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\SalonInfo.js":"282","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\Payment.js":"283","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\RangeDatePickerModal.js":"284","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\BusinessHours.js":"285","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\DeleteService.js":"286","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\InputBox\\index.js":"287","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\InputTime.js":"288","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\CheckOutForm\\index.js":"289","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\AddService.js":"290","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\CreateSlotModal.js":"291","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\MultiSelectBox.js":"292","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddSlotModal.js":"293","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\DeleteAvailability.js":"294","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\calendarData.js":"295","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddBusinessHoursWeekly.js":"296","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddAvailability.js":"297","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\FileUpload\\index.js":"298","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\MyProfileScreen.js":"299","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\ShopScreen.js":"300","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\AddPriceModal.js":"301","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\VideosScreen.js":"302","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\HomeScreen.js":"303","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\RegisterScreen.js":"304","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\LoginScreen.js":"305","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\LogoUpload.js":"306","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\StylistServiceData.js":"307","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\SelectBox.js":"308","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\PromotionCodeScreen\\CreatePromoCode.js":"309","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\WorkHourModal.js":"310","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceServices.js":"311","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceProduct.js":"312","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\ServiceModal.js":"313","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\LogoModal.js":"314","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceNavbar.js":"315","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\Modals\\DeleteCouponModal.js":"316","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceContact.js":"317","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\DeleteService.js":"318","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\Modals\\AddCoupon.js":"319","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceBar.js":"320","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceBanner.js":"321","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceAppointment.js":"322","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\index.js":"323","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ProgressForm\\index.js":"324","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\ProductSummary.js":"325","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\OrderData.js":"326","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\DeleteCompany.js":"327","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\AddStylistComponent.js":"328","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\AddCompany.js":"329","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\utils\\CountryCodesList.js":"330","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBoxFogotPasswod\\index.js":"331","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\InputCoupon.js":"332","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\SelectInput.js":"333","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\companyActions.js":"334","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\videoActions.js":"335","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\DeleteVideoCategory.js":"336","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\CreateCategory.js":"337","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\addStockProduct.js":"338","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\ProductDetailModal.js":"339","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\CreateEditProduct.js":"340","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\AppSettingsActions.js":"341","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\StylistSettings.js":"342","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\StylistData.js":"343","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\DeleteStylist.js":"344","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\DeleteProduct.js":"345","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\CreateStylist.js":"346","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\DeleteAppVersion.js":"347","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\HomeScreenSkeleton.js":"348","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\MyProfileScreenSkeleton.js":"349","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\VideosScreenSkeleton.js":"350","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\LoginScreenSkeleton.js":"351","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\LogoUploadSkeleton.js":"352","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\BarberInfo.js":"353","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\AddAppVersion.js":"354","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\SendMessage.js":"355","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\AddNotes.js":"356","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\CreateUser.js":"357","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\DeleteUser.js":"358","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\UsersData.js":"359","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\attendanceActions.js":"360","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\CancelSubscription.js":"361","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\MenuSettingUser.js":"362","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\CreateEditSalon.js":"363","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\DeleteSalon.js":"364","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\SalonData.js":"365","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsCategoriesScreen\\ProductsCategories.js":"366","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\DeleteVideo.js":"367","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\CreateVideo.js":"368","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\AppointmentSectionNew\\AppointmentSectionNew.js":"369","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\HeaderNew\\HeaderNew.js":"370","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\SideBarNew.js":"371","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\UploadFile.js":"372","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputSections.js":"373","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\RadioButtons\\RadioButtons.js":"374","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\DragDropImg\\index.js":"375","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\AppointmentTime.js":"376","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\SalonSidebar.js":"377","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\AdminSidebar.js":"378"},{"size":303,"mtime":1711610753310,"results":"379","hashOfConfig":"380"},{"size":3817,"mtime":1729272168559,"results":"381","hashOfConfig":"380"},{"size":13545,"mtime":1727676747907,"results":"382","hashOfConfig":"380"},{"size":15934,"mtime":1729268115376,"results":"383","hashOfConfig":"380"},{"size":4856,"mtime":1711610753323,"results":"384","hashOfConfig":"380"},{"size":516,"mtime":1728371031113,"results":"385","hashOfConfig":"380"},{"size":7724,"mtime":1711610753362,"results":"386","hashOfConfig":"380"},{"size":2003,"mtime":1729265565904,"results":"387","hashOfConfig":"380"},{"size":3745,"mtime":1711610753359,"results":"388","hashOfConfig":"380"},{"size":4893,"mtime":1711610753363,"results":"389","hashOfConfig":"380"},{"size":4403,"mtime":1711610753361,"results":"390","hashOfConfig":"380"},{"size":3391,"mtime":1711610753350,"results":"391","hashOfConfig":"380"},{"size":2868,"mtime":1711610753360,"results":"392","hashOfConfig":"380"},{"size":13224,"mtime":1711610753357,"results":"393","hashOfConfig":"380"},{"size":2744,"mtime":1711610753351,"results":"394","hashOfConfig":"380"},{"size":1967,"mtime":1711610753354,"results":"395","hashOfConfig":"380"},{"size":3161,"mtime":1711610753353,"results":"396","hashOfConfig":"380"},{"size":2309,"mtime":1711610753349,"results":"397","hashOfConfig":"380"},{"size":6322,"mtime":1711610753360,"results":"398","hashOfConfig":"380"},{"size":3617,"mtime":1711610753351,"results":"399","hashOfConfig":"380"},{"size":1178,"mtime":1711610753354,"results":"400","hashOfConfig":"380"},{"size":7185,"mtime":1711610753350,"results":"401","hashOfConfig":"380"},{"size":5391,"mtime":1711610753358,"results":"402","hashOfConfig":"380"},{"size":4569,"mtime":1727676747906,"results":"403","hashOfConfig":"380"},{"size":1664,"mtime":1711610753356,"results":"404","hashOfConfig":"380"},{"size":4100,"mtime":1711610753352,"results":"405","hashOfConfig":"380"},{"size":2271,"mtime":1711610753363,"results":"406","hashOfConfig":"380"},{"size":1121,"mtime":1711610753357,"results":"407","hashOfConfig":"380"},{"size":8609,"mtime":1728122531605,"results":"408","hashOfConfig":"380"},{"size":1824,"mtime":1711610753343,"results":"409","hashOfConfig":"380"},{"size":3552,"mtime":1711610753347,"results":"410","hashOfConfig":"380"},{"size":1459,"mtime":1711610753344,"results":"411","hashOfConfig":"380"},{"size":2474,"mtime":1711610753347,"results":"412","hashOfConfig":"380"},{"size":1502,"mtime":1711610753339,"results":"413","hashOfConfig":"380"},{"size":2206,"mtime":1711610753346,"results":"414","hashOfConfig":"380"},{"size":1078,"mtime":1711610753340,"results":"415","hashOfConfig":"380"},{"size":1750,"mtime":1711610753336,"results":"416","hashOfConfig":"380"},{"size":1938,"mtime":1711610753337,"results":"417","hashOfConfig":"380"},{"size":1180,"mtime":1711610753335,"results":"418","hashOfConfig":"380"},{"size":5992,"mtime":1711610753342,"results":"419","hashOfConfig":"380"},{"size":1366,"mtime":1711610753338,"results":"420","hashOfConfig":"380"},{"size":2764,"mtime":1711610753343,"results":"421","hashOfConfig":"380"},{"size":3280,"mtime":1711610753345,"results":"422","hashOfConfig":"380"},{"size":3666,"mtime":1711610753336,"results":"423","hashOfConfig":"380"},{"size":556,"mtime":1711610753342,"results":"424","hashOfConfig":"380"},{"size":582,"mtime":1711610753341,"results":"425","hashOfConfig":"380"},{"size":818,"mtime":1711610753341,"results":"426","hashOfConfig":"380"},{"size":2120,"mtime":1711610753339,"results":"427","hashOfConfig":"380"},{"size":2446,"mtime":1727676747904,"results":"428","hashOfConfig":"380"},{"size":1188,"mtime":1711610753348,"results":"429","hashOfConfig":"380"},{"size":4664,"mtime":1728536407372,"results":"430","hashOfConfig":"380"},{"size":19994,"mtime":1729266168586,"results":"431","hashOfConfig":"380"},{"size":687,"mtime":1711610753581,"results":"432","hashOfConfig":"380"},{"size":14289,"mtime":1727676747917,"results":"433","hashOfConfig":"380"},{"size":9147,"mtime":1711610753620,"results":"434","hashOfConfig":"380"},{"size":412,"mtime":1711610753415,"results":"435","hashOfConfig":"380"},{"size":759,"mtime":1728155089476,"results":"436","hashOfConfig":"380"},{"size":17876,"mtime":1711610753322,"results":"437","hashOfConfig":"380"},{"size":8571,"mtime":1727676747903,"results":"438","hashOfConfig":"380"},{"size":9327,"mtime":1729177772318,"results":"439","hashOfConfig":"380"},{"size":9856,"mtime":1728536519547,"results":"440","hashOfConfig":"380"},{"size":11826,"mtime":1711610753577,"results":"441","hashOfConfig":"380"},{"size":9120,"mtime":1712202890557,"results":"442","hashOfConfig":"380"},{"size":14859,"mtime":1711610753533,"results":"443","hashOfConfig":"380"},{"size":4310,"mtime":1711610753385,"results":"444","hashOfConfig":"380"},{"size":4003,"mtime":1711610753413,"results":"445","hashOfConfig":"380"},{"size":17109,"mtime":1711610753569,"results":"446","hashOfConfig":"380"},{"size":12441,"mtime":1711610753374,"results":"447","hashOfConfig":"380"},{"size":16105,"mtime":1711610753557,"results":"448","hashOfConfig":"380"},{"size":2895,"mtime":1711610753508,"results":"449","hashOfConfig":"380"},{"size":15056,"mtime":1728152918703,"results":"450","hashOfConfig":"380"},{"size":6641,"mtime":1711610753538,"results":"451","hashOfConfig":"380"},{"size":9744,"mtime":1711610753572,"results":"452","hashOfConfig":"380"},{"size":2692,"mtime":1711610753573,"results":"453","hashOfConfig":"380"},{"size":10517,"mtime":1711610753390,"results":"454","hashOfConfig":"380"},{"size":5130,"mtime":1711610753506,"results":"455","hashOfConfig":"380"},{"size":23979,"mtime":1727676747914,"results":"456","hashOfConfig":"380"},{"size":13287,"mtime":1727676747918,"results":"457","hashOfConfig":"380"},{"size":7644,"mtime":1711610753519,"results":"458","hashOfConfig":"380"},{"size":21883,"mtime":1711610753544,"results":"459","hashOfConfig":"380"},{"size":1626,"mtime":1711610753371,"results":"460","hashOfConfig":"380"},{"size":26998,"mtime":1711610753553,"results":"461","hashOfConfig":"380"},{"size":10510,"mtime":1711610753540,"results":"462","hashOfConfig":"380"},{"size":6893,"mtime":1727676748007,"results":"463","hashOfConfig":"380"},{"size":8131,"mtime":1729266168589,"results":"464","hashOfConfig":"380"},{"size":10635,"mtime":1727676747939,"results":"465","hashOfConfig":"380"},{"size":21352,"mtime":1727676747989,"results":"466","hashOfConfig":"380"},{"size":13088,"mtime":1711610753537,"results":"467","hashOfConfig":"380"},{"size":9501,"mtime":1727676747983,"results":"468","hashOfConfig":"380"},{"size":12904,"mtime":1727676748019,"results":"469","hashOfConfig":"380"},{"size":9445,"mtime":1711610753563,"results":"470","hashOfConfig":"380"},{"size":9098,"mtime":1727676747919,"results":"471","hashOfConfig":"380"},{"size":45551,"mtime":1729266168581,"results":"472","hashOfConfig":"380"},{"size":2121,"mtime":1711610753618,"results":"473","hashOfConfig":"380"},{"size":11557,"mtime":1727676748038,"results":"474","hashOfConfig":"380"},{"size":7678,"mtime":1711610753453,"results":"475","hashOfConfig":"380"},{"size":28797,"mtime":1727676747975,"results":"476","hashOfConfig":"380"},{"size":22817,"mtime":1729266168577,"results":"477","hashOfConfig":"380"},{"size":6872,"mtime":1711610753439,"results":"478","hashOfConfig":"380"},{"size":5532,"mtime":1729266168585,"results":"479","hashOfConfig":"380"},{"size":17184,"mtime":1727676747967,"results":"480","hashOfConfig":"380"},{"size":7714,"mtime":1727676748026,"results":"481","hashOfConfig":"380"},{"size":10370,"mtime":1728536730168,"results":"482","hashOfConfig":"380"},{"size":198,"mtime":1711610753608,"results":"483","hashOfConfig":"380"},{"size":14867,"mtime":1711610753458,"results":"484","hashOfConfig":"380"},{"size":12500,"mtime":1727676747926,"results":"485","hashOfConfig":"380"},{"size":4127,"mtime":1727676748023,"results":"486","hashOfConfig":"380"},{"size":15816,"mtime":1727676748022,"results":"487","hashOfConfig":"380"},{"size":9157,"mtime":1727676747944,"results":"488","hashOfConfig":"380"},{"size":8602,"mtime":1727676748015,"results":"489","hashOfConfig":"380"},{"size":596,"mtime":1711610753623,"results":"490","hashOfConfig":"380"},{"size":365,"mtime":1711610753650,"results":"491","hashOfConfig":"380"},{"size":1709,"mtime":1711610753642,"results":"492","hashOfConfig":"380"},{"size":725,"mtime":1711610753648,"results":"493","hashOfConfig":"380"},{"size":1898,"mtime":1727676748035,"results":"494","hashOfConfig":"380"},{"size":390,"mtime":1711610753654,"results":"495","hashOfConfig":"380"},{"size":5159,"mtime":1727676747941,"results":"496","hashOfConfig":"380"},{"size":15249,"mtime":1729266168573,"results":"497","hashOfConfig":"380"},{"size":915,"mtime":1711610753392,"results":"498","hashOfConfig":"380"},{"size":4673,"mtime":1727676747915,"results":"499","hashOfConfig":"380"},{"size":370,"mtime":1711610753113,"results":"500","hashOfConfig":"380"},{"size":5900,"mtime":1727676747843,"results":"501","hashOfConfig":"380"},{"size":4425,"mtime":1711610753318,"results":"502","hashOfConfig":"380"},{"size":9427,"mtime":1729266168579,"results":"503","hashOfConfig":"380"},{"size":389,"mtime":1711610753182,"results":"504","hashOfConfig":"380"},{"size":676,"mtime":1711610753157,"results":"505","hashOfConfig":"380"},{"size":590,"mtime":1711610753641,"results":"506","hashOfConfig":"380"},{"size":738,"mtime":1727676747874,"results":"507","hashOfConfig":"380"},{"size":7240,"mtime":1711610753322,"results":"508","hashOfConfig":"380"},{"size":1691,"mtime":1712049678397,"results":"509","hashOfConfig":"380"},{"size":1233,"mtime":1729266168584,"results":"510","hashOfConfig":"380"},{"size":4265,"mtime":1727676747923,"results":"511","hashOfConfig":"380"},{"size":3361,"mtime":1711610753314,"results":"512","hashOfConfig":"380"},{"size":964,"mtime":1711610753426,"results":"513","hashOfConfig":"380"},{"size":1308,"mtime":1727676747954,"results":"514","hashOfConfig":"380"},{"size":7959,"mtime":1727676747901,"results":"515","hashOfConfig":"380"},{"size":2850,"mtime":1711610753455,"results":"516","hashOfConfig":"380"},{"size":973,"mtime":1711610753565,"results":"517","hashOfConfig":"380"},{"size":4441,"mtime":1711610753457,"results":"518","hashOfConfig":"380"},{"size":922,"mtime":1711610753455,"results":"519","hashOfConfig":"380"},{"size":4848,"mtime":1727676747955,"results":"520","hashOfConfig":"380"},{"size":8278,"mtime":1727676748033,"results":"521","hashOfConfig":"380"},{"size":656,"mtime":1711610753117,"results":"522","hashOfConfig":"380"},{"size":3006,"mtime":1712051073132,"results":"523","hashOfConfig":"380"},{"size":599,"mtime":1711610753296,"results":"524","hashOfConfig":"380"},{"size":1852,"mtime":1727676747886,"results":"525","hashOfConfig":"380"},{"size":1613,"mtime":1728108212545,"results":"526","hashOfConfig":"380"},{"size":1152,"mtime":1711610753179,"results":"527","hashOfConfig":"380"},{"size":3965,"mtime":1711610753154,"results":"528","hashOfConfig":"380"},{"size":2916,"mtime":1712051073010,"results":"529","hashOfConfig":"380"},{"size":486,"mtime":1727676747856,"results":"530","hashOfConfig":"380"},{"size":238,"mtime":1711610753122,"results":"531","hashOfConfig":"380"},{"size":289,"mtime":1711610753121,"results":"532","hashOfConfig":"380"},{"size":2133,"mtime":1729266168571,"results":"533","hashOfConfig":"380"},{"size":3319,"mtime":1729266168568,"results":"534","hashOfConfig":"380"},{"size":6009,"mtime":1729266168567,"results":"535","hashOfConfig":"380"},{"size":760,"mtime":1711610753447,"results":"536","hashOfConfig":"380"},{"size":1951,"mtime":1727780999667,"results":"537","hashOfConfig":"380"},{"size":1784,"mtime":1729266168565,"results":"538","hashOfConfig":"380"},{"size":1431,"mtime":1727676747883,"results":"539","hashOfConfig":"380"},{"size":572,"mtime":1727676747835,"results":"540","hashOfConfig":"380"},{"size":2632,"mtime":1729266168563,"results":"541","hashOfConfig":"380"},{"size":1210,"mtime":1711610753151,"results":"542","hashOfConfig":"380"},{"size":12009,"mtime":1729266168558,"results":"543","hashOfConfig":"380"},{"size":712,"mtime":1711610753173,"results":"544","hashOfConfig":"380"},{"size":10956,"mtime":1727676747898,"results":"545","hashOfConfig":"380"},{"size":3986,"mtime":1711610753091,"results":"546","hashOfConfig":"380"},{"size":678,"mtime":1711610753116,"results":"547","hashOfConfig":"380"},{"size":4597,"mtime":1727676747851,"results":"548","hashOfConfig":"380"},{"size":1697,"mtime":1711610753631,"results":"549","hashOfConfig":"380"},{"size":590,"mtime":1711610753151,"results":"550","hashOfConfig":"380"},{"size":230,"mtime":1711610753119,"results":"551","hashOfConfig":"380"},{"size":7930,"mtime":1727676747965,"results":"552","hashOfConfig":"380"},{"size":1329,"mtime":1727676747960,"results":"553","hashOfConfig":"380"},{"size":328,"mtime":1727676747858,"results":"554","hashOfConfig":"380"},{"size":301,"mtime":1711610753137,"results":"555","hashOfConfig":"380"},{"size":432,"mtime":1711610753139,"results":"556","hashOfConfig":"380"},{"size":278,"mtime":1711610753138,"results":"557","hashOfConfig":"380"},{"size":230,"mtime":1711610753136,"results":"558","hashOfConfig":"380"},{"size":223,"mtime":1711610753135,"results":"559","hashOfConfig":"380"},{"size":8981,"mtime":1729266168590,"results":"560","hashOfConfig":"380"},{"size":946,"mtime":1727676747894,"results":"561","hashOfConfig":"380"},{"size":6576,"mtime":1711610753327,"results":"562","hashOfConfig":"380"},{"size":2803,"mtime":1711610753095,"results":"563","hashOfConfig":"380"},{"size":1161,"mtime":1712051072995,"results":"564","hashOfConfig":"380"},{"size":6966,"mtime":1711610753107,"results":"565","hashOfConfig":"380"},{"size":1621,"mtime":1711610753109,"results":"566","hashOfConfig":"380"},{"size":5402,"mtime":1711610753171,"results":"567","hashOfConfig":"380"},{"size":722,"mtime":1711610753172,"results":"568","hashOfConfig":"380"},{"size":2078,"mtime":1727676747864,"results":"569","hashOfConfig":"380"},{"size":187,"mtime":1711610753135,"results":"570","hashOfConfig":"380"},{"size":9121,"mtime":1728534795532,"results":"571","hashOfConfig":"380"},{"size":772,"mtime":1711610753464,"results":"572","hashOfConfig":"380"},{"size":1994,"mtime":1729266168553,"results":"573","hashOfConfig":"380"},{"size":922,"mtime":1711610753179,"results":"574","hashOfConfig":"380"},{"size":311,"mtime":1727676747865,"results":"575","hashOfConfig":"380"},{"size":937,"mtime":1712051073000,"results":"576","hashOfConfig":"380"},{"size":1182,"mtime":1711610753130,"results":"577","hashOfConfig":"380"},{"size":6223,"mtime":1727676747961,"results":"578","hashOfConfig":"380"},{"size":223,"mtime":1711610753118,"results":"579","hashOfConfig":"380"},{"size":8462,"mtime":1711610753325,"results":"580","hashOfConfig":"380"},{"size":3273,"mtime":1727676747838,"results":"581","hashOfConfig":"380"},{"size":2527,"mtime":1727676747866,"results":"582","hashOfConfig":"380"},{"size":1344,"mtime":1711610753132,"results":"583","hashOfConfig":"380"},{"size":5758,"mtime":1711610753595,"results":"584","hashOfConfig":"380"},{"size":3566,"mtime":1711610753596,"results":"585","hashOfConfig":"380"},{"size":529,"mtime":1711610753128,"results":"586","hashOfConfig":"380"},{"size":5766,"mtime":1711610753596,"results":"587","hashOfConfig":"380"},{"size":2014,"mtime":1711610753643,"results":"588","hashOfConfig":"380"},{"size":1751,"mtime":1711610753320,"results":"589","hashOfConfig":"380"},{"size":998,"mtime":1711610753461,"results":"590","hashOfConfig":"380"},{"size":11454,"mtime":1729266168574,"results":"591","hashOfConfig":"380"},{"size":1581,"mtime":1712133230009,"results":"592","hashOfConfig":"380"},{"size":2230,"mtime":1711610753471,"results":"593","hashOfConfig":"380"},{"size":1996,"mtime":1711610753471,"results":"594","hashOfConfig":"380"},{"size":1873,"mtime":1711610753580,"results":"595","hashOfConfig":"380"},{"size":6128,"mtime":1727676747898,"results":"596","hashOfConfig":"380"},{"size":1868,"mtime":1727676747970,"results":"597","hashOfConfig":"380"},{"size":1843,"mtime":1711610753474,"results":"598","hashOfConfig":"380"},{"size":10099,"mtime":1727676747969,"results":"599","hashOfConfig":"380"},{"size":1052,"mtime":1727676747867,"results":"600","hashOfConfig":"380"},{"size":11725,"mtime":1727676747968,"results":"601","hashOfConfig":"380"},{"size":24016,"mtime":1729266168547,"results":"602","hashOfConfig":"380"},{"size":595,"mtime":1711610753180,"results":"603","hashOfConfig":"380"},{"size":4132,"mtime":1728375450987,"results":"604","hashOfConfig":"380"},{"size":11694,"mtime":1711610753168,"results":"605","hashOfConfig":"380"},{"size":6642,"mtime":1711610753167,"results":"606","hashOfConfig":"380"},{"size":728,"mtime":1711610753178,"results":"607","hashOfConfig":"380"},{"size":2687,"mtime":1727676747952,"results":"608","hashOfConfig":"380"},{"size":4525,"mtime":1711610753313,"results":"609","hashOfConfig":"380"},{"size":539,"mtime":1711610753181,"results":"610","hashOfConfig":"380"},{"size":5466,"mtime":1711610753319,"results":"611","hashOfConfig":"380"},{"size":1479,"mtime":1727676748036,"results":"612","hashOfConfig":"380"},{"size":2247,"mtime":1711610753180,"results":"613","hashOfConfig":"380"},{"size":224,"mtime":1727676747853,"results":"614","hashOfConfig":"380"},{"size":3037,"mtime":1711610753405,"results":"615","hashOfConfig":"380"},{"size":2782,"mtime":1711610753398,"results":"616","hashOfConfig":"380"},{"size":1305,"mtime":1711610753405,"results":"617","hashOfConfig":"380"},{"size":1374,"mtime":1711610753404,"results":"618","hashOfConfig":"380"},{"size":1568,"mtime":1711610753403,"results":"619","hashOfConfig":"380"},{"size":2421,"mtime":1711610753402,"results":"620","hashOfConfig":"380"},{"size":5202,"mtime":1711610753400,"results":"621","hashOfConfig":"380"},{"size":531,"mtime":1711610753177,"results":"622","hashOfConfig":"380"},{"size":1893,"mtime":1711610753400,"results":"623","hashOfConfig":"380"},{"size":7711,"mtime":1711610753559,"results":"624","hashOfConfig":"380"},{"size":1335,"mtime":1711610753637,"results":"625","hashOfConfig":"380"},{"size":824,"mtime":1711610753562,"results":"626","hashOfConfig":"380"},{"size":5140,"mtime":1711610753560,"results":"627","hashOfConfig":"380"},{"size":5516,"mtime":1727676748016,"results":"628","hashOfConfig":"380"},{"size":1340,"mtime":1727676747976,"results":"629","hashOfConfig":"380"},{"size":506,"mtime":1711610753587,"results":"630","hashOfConfig":"380"},{"size":7724,"mtime":1727676747978,"results":"631","hashOfConfig":"380"},{"size":793,"mtime":1727676747980,"results":"632","hashOfConfig":"380"},{"size":4421,"mtime":1727676747979,"results":"633","hashOfConfig":"380"},{"size":1233,"mtime":1711610753590,"results":"634","hashOfConfig":"380"},{"size":3479,"mtime":1727676747900,"results":"635","hashOfConfig":"380"},{"size":5254,"mtime":1727676748009,"results":"636","hashOfConfig":"380"},{"size":758,"mtime":1711610753535,"results":"637","hashOfConfig":"380"},{"size":3187,"mtime":1711610753536,"results":"638","hashOfConfig":"380"},{"size":931,"mtime":1711610753119,"results":"639","hashOfConfig":"380"},{"size":1872,"mtime":1727676747986,"results":"640","hashOfConfig":"380"},{"size":1473,"mtime":1727676747984,"results":"641","hashOfConfig":"380"},{"size":555,"mtime":1711610753147,"results":"642","hashOfConfig":"380"},{"size":5826,"mtime":1727676747985,"results":"643","hashOfConfig":"380"},{"size":845,"mtime":1727676747985,"results":"644","hashOfConfig":"380"},{"size":5517,"mtime":1729265540174,"results":"645","hashOfConfig":"380"},{"size":2267,"mtime":1711610753434,"results":"646","hashOfConfig":"380"},{"size":3597,"mtime":1727676747936,"results":"647","hashOfConfig":"380"},{"size":3550,"mtime":1727676747927,"results":"648","hashOfConfig":"380"},{"size":1374,"mtime":1711610753433,"results":"649","hashOfConfig":"380"},{"size":1612,"mtime":1727676747936,"results":"650","hashOfConfig":"380"},{"size":2908,"mtime":1711610753431,"results":"651","hashOfConfig":"380"},{"size":11525,"mtime":1729266168560,"results":"652","hashOfConfig":"380"},{"size":4092,"mtime":1727676747935,"results":"653","hashOfConfig":"380"},{"size":4433,"mtime":1727676747931,"results":"654","hashOfConfig":"380"},{"size":3984,"mtime":1727676747930,"results":"655","hashOfConfig":"380"},{"size":2864,"mtime":1729266168587,"results":"656","hashOfConfig":"380"},{"size":4694,"mtime":1727676748006,"results":"657","hashOfConfig":"380"},{"size":5169,"mtime":1727676748004,"results":"658","hashOfConfig":"380"},{"size":5984,"mtime":1727676747995,"results":"659","hashOfConfig":"380"},{"size":2187,"mtime":1711610753321,"results":"660","hashOfConfig":"380"},{"size":10311,"mtime":1727676748002,"results":"661","hashOfConfig":"380"},{"size":14305,"mtime":1727676748000,"results":"662","hashOfConfig":"380"},{"size":1423,"mtime":1727676747972,"results":"663","hashOfConfig":"380"},{"size":6844,"mtime":1727676747996,"results":"664","hashOfConfig":"380"},{"size":998,"mtime":1711610753541,"results":"665","hashOfConfig":"380"},{"size":1831,"mtime":1727676748034,"results":"666","hashOfConfig":"380"},{"size":1367,"mtime":1711610753300,"results":"667","hashOfConfig":"380"},{"size":1927,"mtime":1711610753629,"results":"668","hashOfConfig":"380"},{"size":10054,"mtime":1711610753541,"results":"669","hashOfConfig":"380"},{"size":2230,"mtime":1711610753548,"results":"670","hashOfConfig":"380"},{"size":2460,"mtime":1711610753305,"results":"671","hashOfConfig":"380"},{"size":1996,"mtime":1711610753547,"results":"672","hashOfConfig":"380"},{"size":1869,"mtime":1711610753549,"results":"673","hashOfConfig":"380"},{"size":1843,"mtime":1711610753551,"results":"674","hashOfConfig":"380"},{"size":8500,"mtime":1711610753547,"results":"675","hashOfConfig":"380"},{"size":10025,"mtime":1711610753546,"results":"676","hashOfConfig":"380"},{"size":1183,"mtime":1711610753298,"results":"677","hashOfConfig":"380"},{"size":6835,"mtime":1711610753368,"results":"678","hashOfConfig":"380"},{"size":5936,"mtime":1711610753370,"results":"679","hashOfConfig":"380"},{"size":1337,"mtime":1711610753558,"results":"680","hashOfConfig":"380"},{"size":8262,"mtime":1711610753370,"results":"681","hashOfConfig":"380"},{"size":6901,"mtime":1711610753366,"results":"682","hashOfConfig":"380"},{"size":5260,"mtime":1711610753369,"results":"683","hashOfConfig":"380"},{"size":5330,"mtime":1711610753367,"results":"684","hashOfConfig":"380"},{"size":2842,"mtime":1711610753368,"results":"685","hashOfConfig":"380"},{"size":1755,"mtime":1711610753591,"results":"686","hashOfConfig":"380"},{"size":1300,"mtime":1727676747867,"results":"687","hashOfConfig":"380"},{"size":2335,"mtime":1711610753518,"results":"688","hashOfConfig":"380"},{"size":3013,"mtime":1727676747912,"results":"689","hashOfConfig":"380"},{"size":6553,"mtime":1727676747911,"results":"690","hashOfConfig":"380"},{"size":2695,"mtime":1727676747910,"results":"691","hashOfConfig":"380"},{"size":2143,"mtime":1711610753383,"results":"692","hashOfConfig":"380"},{"size":726,"mtime":1711610753382,"results":"693","hashOfConfig":"380"},{"size":12662,"mtime":1711610753380,"results":"694","hashOfConfig":"380"},{"size":938,"mtime":1711610753396,"results":"695","hashOfConfig":"380"},{"size":5202,"mtime":1727676747910,"results":"696","hashOfConfig":"380"},{"size":989,"mtime":1711610753382,"results":"697","hashOfConfig":"380"},{"size":2878,"mtime":1711610753395,"results":"698","hashOfConfig":"380"},{"size":2393,"mtime":1711610753378,"results":"699","hashOfConfig":"380"},{"size":4056,"mtime":1711610753377,"results":"700","hashOfConfig":"380"},{"size":4611,"mtime":1711610753377,"results":"701","hashOfConfig":"380"},{"size":1208,"mtime":1727676747893,"results":"702","hashOfConfig":"380"},{"size":2455,"mtime":1727676747872,"results":"703","hashOfConfig":"380"},{"size":1293,"mtime":1711610753505,"results":"704","hashOfConfig":"380"},{"size":2061,"mtime":1711610753504,"results":"705","hashOfConfig":"380"},{"size":839,"mtime":1711610753390,"results":"706","hashOfConfig":"380"},{"size":6778,"mtime":1727676747883,"results":"707","hashOfConfig":"380"},{"size":2719,"mtime":1711610753387,"results":"708","hashOfConfig":"380"},{"size":6246,"mtime":1727676748013,"results":"709","hashOfConfig":"380"},{"size":1851,"mtime":1727676747891,"results":"710","hashOfConfig":"380"},{"size":4243,"mtime":1727676747884,"results":"711","hashOfConfig":"380"},{"size":567,"mtime":1711610753305,"results":"712","hashOfConfig":"380"},{"size":4046,"mtime":1711610753317,"results":"713","hashOfConfig":"380"},{"size":7266,"mtime":1711610753330,"results":"714","hashOfConfig":"380"},{"size":865,"mtime":1711610753571,"results":"715","hashOfConfig":"380"},{"size":1597,"mtime":1711610753570,"results":"716","hashOfConfig":"380"},{"size":2020,"mtime":1711610753516,"results":"717","hashOfConfig":"380"},{"size":3108,"mtime":1711610753514,"results":"718","hashOfConfig":"380"},{"size":5043,"mtime":1711610753512,"results":"719","hashOfConfig":"380"},{"size":743,"mtime":1711610753313,"results":"720","hashOfConfig":"380"},{"size":7690,"mtime":1711610753556,"results":"721","hashOfConfig":"380"},{"size":4898,"mtime":1711610753556,"results":"722","hashOfConfig":"380"},{"size":760,"mtime":1711610753555,"results":"723","hashOfConfig":"380"},{"size":760,"mtime":1711610753513,"results":"724","hashOfConfig":"380"},{"size":4725,"mtime":1711610753554,"results":"725","hashOfConfig":"380"},{"size":874,"mtime":1711610753373,"results":"726","hashOfConfig":"380"},{"size":1286,"mtime":1711610753174,"results":"727","hashOfConfig":"380"},{"size":1739,"mtime":1711610753176,"results":"728","hashOfConfig":"380"},{"size":2063,"mtime":1711610753176,"results":"729","hashOfConfig":"380"},{"size":1287,"mtime":1711610753174,"results":"730","hashOfConfig":"380"},{"size":348,"mtime":1711610753175,"results":"731","hashOfConfig":"380"},{"size":2289,"mtime":1711610753589,"results":"732","hashOfConfig":"380"},{"size":4038,"mtime":1711610753372,"results":"733","hashOfConfig":"380"},{"size":1644,"mtime":1711610753568,"results":"734","hashOfConfig":"380"},{"size":1201,"mtime":1711610753565,"results":"735","hashOfConfig":"380"},{"size":5376,"mtime":1711610753566,"results":"736","hashOfConfig":"380"},{"size":748,"mtime":1711610753567,"results":"737","hashOfConfig":"380"},{"size":4085,"mtime":1711610753569,"results":"738","hashOfConfig":"380"},{"size":5061,"mtime":1711610753316,"results":"739","hashOfConfig":"380"},{"size":1034,"mtime":1711610753528,"results":"740","hashOfConfig":"380"},{"size":2796,"mtime":1711610753530,"results":"741","hashOfConfig":"380"},{"size":3852,"mtime":1711610753529,"results":"742","hashOfConfig":"380"},{"size":856,"mtime":1711610753529,"results":"743","hashOfConfig":"380"},{"size":4386,"mtime":1711610753532,"results":"744","hashOfConfig":"380"},{"size":1617,"mtime":1711610753509,"results":"745","hashOfConfig":"380"},{"size":831,"mtime":1711610753575,"results":"746","hashOfConfig":"380"},{"size":5185,"mtime":1711610753575,"results":"747","hashOfConfig":"380"},{"size":8945,"mtime":1727676747833,"results":"748","hashOfConfig":"380"},{"size":15113,"mtime":1729266168549,"results":"749","hashOfConfig":"380"},{"size":8456,"mtime":1729266168556,"results":"750","hashOfConfig":"380"},{"size":2078,"mtime":1727676747858,"results":"751","hashOfConfig":"380"},{"size":187,"mtime":1711610753118,"results":"752","hashOfConfig":"380"},{"size":1127,"mtime":1711610753303,"results":"753","hashOfConfig":"380"},{"size":2701,"mtime":1711610753103,"results":"754","hashOfConfig":"380"},{"size":2002,"mtime":1727676748018,"results":"755","hashOfConfig":"380"},{"size":11726,"mtime":1729266168555,"results":"756","hashOfConfig":"380"},{"size":6674,"mtime":1727676747874,"results":"757","hashOfConfig":"380"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},"1mp6p6z",{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"760"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"760"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"760"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"760"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"760"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"760"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"760"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"880"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"760"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"760"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"880"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"760"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"760"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"760"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"760"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"906","usedDeprecatedRules":"760"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"760"},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"760"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"760"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"760"},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"760"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"760"},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"760"},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"760"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935","usedDeprecatedRules":"760"},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"760"},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"760"},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"760"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"760"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"760"},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"760"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"760"},{"filePath":"957","messages":"958","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"760"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"760"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"760"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"760"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"760"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"760"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"760"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"988","usedDeprecatedRules":"760"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"760"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"760"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1003","usedDeprecatedRules":"760"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"760"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"760"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"760"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"760"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"760"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"760"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026","usedDeprecatedRules":"760"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"760"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1036","usedDeprecatedRules":"760"},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041","usedDeprecatedRules":"760"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"760"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057","usedDeprecatedRules":"760"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"760"},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"760"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"760"},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"760"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"760"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"760"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1128","messages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"760"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"760"},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1160","usedDeprecatedRules":"760"},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1163","usedDeprecatedRules":"760"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"760"},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"760"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"760"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199","usedDeprecatedRules":"760"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"760"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1205","usedDeprecatedRules":"760"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"760"},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"760"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1228","usedDeprecatedRules":"760"},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1231","usedDeprecatedRules":"760"},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"760"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"760"},{"filePath":"1240","messages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"760"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"760"},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"760"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"760"},{"filePath":"1256","messages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"760"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"760"},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"760"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"760"},{"filePath":"1272","messages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"760"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277","usedDeprecatedRules":"760"},{"filePath":"1278","messages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280","usedDeprecatedRules":"760"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"760"},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"760"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291","usedDeprecatedRules":"760"},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"760"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"760"},{"filePath":"1310","messages":"1311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1312","messages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1314","messages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1316","usedDeprecatedRules":"760"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325","usedDeprecatedRules":"760"},{"filePath":"1326","messages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"760"},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1331","usedDeprecatedRules":"760"},{"filePath":"1332","messages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"760"},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"760"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1342","messages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1344","usedDeprecatedRules":"760"},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"760"},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1352","usedDeprecatedRules":"760"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"760"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1360","usedDeprecatedRules":"760"},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1365","messages":"1366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367","usedDeprecatedRules":"760"},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372","usedDeprecatedRules":"760"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"760"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"760"},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1387","messages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"760"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"760"},{"filePath":"1393","messages":"1394","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"760"},{"filePath":"1396","messages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"760"},{"filePath":"1399","messages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1403","messages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405","usedDeprecatedRules":"760"},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1408","usedDeprecatedRules":"760"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1411","usedDeprecatedRules":"760"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"760"},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1416","usedDeprecatedRules":"760"},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419","usedDeprecatedRules":"760"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"760"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1429","messages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433","usedDeprecatedRules":"760"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"760"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"760"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1444","usedDeprecatedRules":"760"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1447","usedDeprecatedRules":"760"},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"760"},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1453","usedDeprecatedRules":"760"},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"760"},{"filePath":"1456","messages":"1457","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"760"},{"filePath":"1459","messages":"1460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"760"},{"filePath":"1462","messages":"1463","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1464","usedDeprecatedRules":"760"},{"filePath":"1465","messages":"1466","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1467","usedDeprecatedRules":"760"},{"filePath":"1468","messages":"1469","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"760"},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"760"},{"filePath":"1473","messages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"760"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477","usedDeprecatedRules":"760"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1480","messages":"1481","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1482","usedDeprecatedRules":"760"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"760"},{"filePath":"1486","messages":"1487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1488","messages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1490","usedDeprecatedRules":"760"},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"760"},{"filePath":"1494","messages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498","usedDeprecatedRules":"760"},{"filePath":"1499","messages":"1500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1501","usedDeprecatedRules":"760"},{"filePath":"1502","messages":"1503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1504","usedDeprecatedRules":"760"},{"filePath":"1505","messages":"1506","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1507","usedDeprecatedRules":"760"},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"760"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1513","messages":"1514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"760"},{"filePath":"1516","messages":"1517","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"760"},{"filePath":"1519","messages":"1520","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"760"},{"filePath":"1522","messages":"1523","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"760"},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527","usedDeprecatedRules":"760"},{"filePath":"1528","messages":"1529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1530","messages":"1531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1532","messages":"1533","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1534","usedDeprecatedRules":"760"},{"filePath":"1535","messages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1537","messages":"1538","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"760"},{"filePath":"1540","messages":"1541","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"760"},{"filePath":"1543","messages":"1544","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1545","usedDeprecatedRules":"760"},{"filePath":"1546","messages":"1547","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1548","usedDeprecatedRules":"760"},{"filePath":"1549","messages":"1550","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551","usedDeprecatedRules":"760"},{"filePath":"1552","messages":"1553","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1554","usedDeprecatedRules":"760"},{"filePath":"1555","messages":"1556","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1557","usedDeprecatedRules":"760"},{"filePath":"1558","messages":"1559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1560","messages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1566","usedDeprecatedRules":"760"},{"filePath":"1567","messages":"1568","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569","usedDeprecatedRules":"760"},{"filePath":"1570","messages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1574","messages":"1575","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576","usedDeprecatedRules":"760"},{"filePath":"1577","messages":"1578","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1579","usedDeprecatedRules":"760"},{"filePath":"1580","messages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1582","usedDeprecatedRules":"760"},{"filePath":"1583","messages":"1584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1585","messages":"1586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589","usedDeprecatedRules":"760"},{"filePath":"1590","messages":"1591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1592","messages":"1593","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1594","usedDeprecatedRules":"760"},{"filePath":"1595","messages":"1596","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597","usedDeprecatedRules":"760"},{"filePath":"1598","messages":"1599","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1600","usedDeprecatedRules":"760"},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1603","messages":"1604","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605","usedDeprecatedRules":"760"},{"filePath":"1606","messages":"1607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1608","messages":"1609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"760"},{"filePath":"1615","messages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1617","messages":"1618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1619","messages":"1620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1621","messages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1623","messages":"1624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1625","messages":"1626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1627","messages":"1628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1629","messages":"1630","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"760"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"760"},{"filePath":"1635","messages":"1636","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"760"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"760"},{"filePath":"1641","messages":"1642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1643","messages":"1644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1645","messages":"1646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1647","messages":"1648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1649","messages":"1650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1651","messages":"1652","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1653","usedDeprecatedRules":"760"},{"filePath":"1654","messages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1656","messages":"1657","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1658","usedDeprecatedRules":"760"},{"filePath":"1659","messages":"1660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1661","messages":"1662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1663","usedDeprecatedRules":"760"},{"filePath":"1664","messages":"1665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1666","messages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"760"},{"filePath":"1669","messages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1671","messages":"1672","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"760"},{"filePath":"1675","messages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1677","messages":"1678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},{"filePath":"1679","messages":"1680","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"760"},{"filePath":"1682","messages":"1683","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"760"},{"filePath":"1685","messages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1687","messages":"1688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"760"},"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\index.js",[],["1689","1690"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\App.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\store.js",["1691"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n  changeStatusUserReducer,\r\n  createNewUserReducer,\r\n  deleteUserReducer,\r\n  getUserByTokenReducer,\r\n  getUserListReducer,\r\n  userLoginReducer,\r\n  changePasswordUserReducer,\r\n  changeAdminUserReducer,\r\n  addMessageUserReducer,\r\n  addNotesUserReducer,\r\n  logOutUserReducer,\r\n  myProfileDetailsReducer,\r\n  updatePasswordUserReducer,\r\n  getAppointmentConersionRateReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n  changeAppMenuSettingReducer,\r\n  changeStatusSalonReducer,\r\n  createNewSalonReducer,\r\n  deleteSalonReducer,\r\n  getAllEnabledSalonsReducer,\r\n  getSalonListReducer,\r\n} from './reducers/salonReducers';\r\n\r\nimport {\r\n  addStylistSettingsReducer,\r\n  changeStatustylistReducer,\r\n  createNewStylistReducer,\r\n  deleteStylistReducer,\r\n  getEnableStylistListReducer,\r\n  getStylistListReducer,\r\n  getStylistSettingsReducer,\r\n} from './reducers/stylistReducers';\r\n\r\nimport {\r\n  checkInOutReducer,\r\n  getAttendanceListReducer,\r\n  deleteCheckinReducer,\r\n  getStylistSessionsReducer,\r\n  addStylistSessionReducer,\r\n  totalStylistSessionReducer,\r\n} from './reducers/attendanceReducers';\r\n\r\nimport {\r\n  getAllVideoCategoriesReducer,\r\n  createVideoCategoryReducer,\r\n  videoCategoryStatusReducer,\r\n  deleteVideoCategoryReducer,\r\n  getAllVideosReducer,\r\n  getOneVideoReducer,\r\n  createVideoReducer,\r\n  changeVideoStatusReducer,\r\n  deleteVideoReducer,\r\n} from './reducers/videoReducers';\r\n\r\nimport {\r\n  addAPaymentReducer,\r\n  addAppOrderReducer,\r\n  addOrderReducer,\r\n  addProductStockReducer,\r\n  cartProductReducer,\r\n  changeOrderStatusReducer,\r\n  changeProductStatusReducer,\r\n  checkOutReducer,\r\n  createProductCategoryReducer,\r\n  createProductReducer,\r\n  deleteProductCategoryReducer,\r\n  deleteProductReducer,\r\n  getAllProductCategoriesReducer,\r\n  getAllProductsReducer,\r\n  getCategoryReducer,\r\n  getEnabledCategoryReducer,\r\n  getOneProductReducer,\r\n  getOrderByIdReducer,\r\n  getOrderHistoryReducer,\r\n  getProductOrderHistoryReducer,\r\n  getSimilarProductReducer,\r\n  productCategoryStatusReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { changeStatusSalonStaffReducer, createNewSalonStaffReducer, deleteSalonStaffReducer, getSalonStaffListReducer } from './reducers/salonStaffReducers';\r\n\r\nimport { changeCompanyStatusReducer, createCompanyReducer, deleteCompanyReducer, getAllCompanyReducer, getAllEnableCompanyReducer } from './reducers/companyReducers';\r\n\r\nimport { createFormByIndependentAgreementReducer, getFormByIndependentAgreementReducer, getFormByWaierLiabilityReducer } from './reducers/formReducers';\r\n\r\nimport { changeAppVersionStatusReducer, createAppVersionReducer, deleteAppVersionReducer, getAllAppVersionReducer } from './reducers/appVersionReducers';\r\n\r\nimport {\r\n  getDahboardCountReducers,\r\n  getCurrentYeartReducers,\r\n  getCurrentAppointmentReducers,\r\n  getRecentAppointmentReducers,\r\n  getUpcomingAppointmentReducers,\r\n  getAdminDashboardReportReducers,\r\n  getSalonAppointmentReportReducers,\r\n  getSalonSubscriptionReportReducers,\r\n} from './reducers/reportReducers';\r\nimport { allNotificationsReducer, sendNotificationReducer } from './reducers/notificationReducers';\r\n\r\nimport {\r\n  changeServiceStatusReducer,\r\n  createServiceReducer,\r\n  deleteServiceReducer,\r\n  getAllServiceReducer,\r\n  getAllEnableServiceReducer,\r\n  getAllServiceCategoriesReducer,\r\n  getAllEnableSubServiceReducer,\r\n  updateRankServiceReducer,\r\n} from './reducers/serviceReducers';\r\nimport {\r\n  addBulkAvailabilitysReducer,\r\n  addDailyAvailabilitysReducer,\r\n  addDayAvailabilitysReducer,\r\n  delBlockAvailabilitysReducer,\r\n  getDailyAvailabilitysReducer,\r\n  getUnblockAvailabilitysReducer,\r\n} from './reducers/availabilityReducers';\r\nimport {\r\n  addAppointmentReducer,\r\n  addPublicAppointmentReducer,\r\n  appointmentStatusListReducer,\r\n  availabilityAppointmentReducer,\r\n  changeAppointmentReducer,\r\n  confirmAppointmentStatusReducer,\r\n  deleteAppointmentReducer,\r\n  deleteSlotReducer,\r\n  getActivityReducer,\r\n  getBusinessHourReducer,\r\n  getPublicAppointmentReducer,\r\n  getStylistAppointmentReducer,\r\n  updateAppointmentReducer,\r\n} from './reducers/appointmentReducers';\r\nimport { addWebsiteContactUsReducer, getWebsiteDataReducer, getWebsiteServiceReducer, websiteDataReducer } from './reducers/websiteSettingReducers';\r\nimport {\r\n  activateCouponReducer,\r\n  addCouponReducer,\r\n  deleteCouponReducer,\r\n  getAdminCouponsReducer,\r\n  getAllCouponsReducer,\r\n  verifyCouponsReducer,\r\n} from './reducers/couponReducers';\r\nimport {\r\n  addSubscriptionReducer,\r\n  changeStatusSubscriptionReducer,\r\n  deleteSubscriptionReducer,\r\n  getCancelSubscriptionReducer,\r\n  getEnableSubscriptionReducer,\r\n  getSubscriptionDetailsReducer,\r\n  getSubscriptionReducer,\r\n  getTotalPriceReducer,\r\n} from './reducers/subscriptionReducers';\r\nimport { activatePromoCodesReducer, addPromCodesReducer } from './reducers/promoCodesReducers';\r\nimport {\r\n  activateCouponBookBReducer,\r\n  addCouponBookBReducer,\r\n  deleteCouponBookBReducer,\r\n  getActiveCouponsBookBReducer,\r\n  getAllCouponsBookBReducer,\r\n  verifyCouponsBookBReducer,\r\n} from './reducers/couponBookBReducers';\r\nimport { createNewOnBoardUserReducer, onBoardCompleteReducer, paymentOnBoardReducer } from './reducers/onboardingReducers';\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userList: getUserListReducer,\r\n  createUser: createNewUserReducer,\r\n  deleteUser: deleteUserReducer,\r\n  changeStatusUser: changeStatusUserReducer,\r\n  getUserInfo: getUserByTokenReducer,\r\n  changePasswordUser: changePasswordUserReducer,\r\n  updatePasswordUser: updatePasswordUserReducer,\r\n  changeAdmin: changeAdminUserReducer,\r\n  changeAppMenuSetting: changeAppMenuSettingReducer,\r\n  sendMessageUser: addMessageUserReducer,\r\n  addNotesUser: addNotesUserReducer,\r\n  myProfileDetails: myProfileDetailsReducer,\r\n\tAppointmentConersionRate : getAppointmentConersionRateReducer,\r\n  salonList: getSalonListReducer,\r\n  salonEnabledList: getAllEnabledSalonsReducer,\r\n  createSalon: createNewSalonReducer,\r\n  deleteSalon: deleteSalonReducer,\r\n  changeStatusSalon: changeStatusSalonReducer,\r\n\r\n  stylistList: getStylistListReducer,\r\n  enableStylistList: getEnableStylistListReducer,\r\n  createStylist: createNewStylistReducer,\r\n  changeStatustylist: changeStatustylistReducer,\r\n  deleteStylist: deleteStylistReducer,\r\n  getStylistSettings: getStylistSettingsReducer,\r\n  addStylistSettings: addStylistSettingsReducer,\r\n\r\n  attendanceList: getAttendanceListReducer,\r\n  checkInOut: checkInOutReducer,\r\n  deleteCheckin: deleteCheckinReducer,\r\n  getStylistSessions: getStylistSessionsReducer,\r\n  addStylistSession: addStylistSessionReducer,\r\n  totalStylistSession: totalStylistSessionReducer,\r\n\r\n  // Video reducers\r\n  getAllVideoCategories: getAllVideoCategoriesReducer,\r\n  createVideoCategory: createVideoCategoryReducer,\r\n  videoCategoryStatus: videoCategoryStatusReducer,\r\n  deleteVideoCategory: deleteVideoCategoryReducer,\r\n  getAllVideos: getAllVideosReducer,\r\n  getOneVideo: getOneVideoReducer,\r\n  createVideo: createVideoReducer,\r\n  changeVideoStatus: changeVideoStatusReducer,\r\n  deleteVideo: deleteVideoReducer,\r\n\r\n  // Product reducers\r\n  getAllProductCategories: getAllProductCategoriesReducer,\r\n  createProductCategory: createProductCategoryReducer,\r\n  productCategoryStatus: productCategoryStatusReducer,\r\n  deleteProductCategory: deleteProductCategoryReducer,\r\n  getAllProducts: getAllProductsReducer,\r\n  getOneProduct: getOneProductReducer,\r\n  createProduct: createProductReducer,\r\n  changeProductStatus: changeProductStatusReducer,\r\n  deleteProduct: deleteProductReducer,\r\n  addProductStock: addProductStockReducer,\r\n  orderList: getProductOrderHistoryReducer,\r\n  changeOrderStatus: changeOrderStatusReducer,\r\n\r\n  cartProducts: cartProductReducer,\r\n  getSimilarProducts: getSimilarProductReducer,\r\n  getEnabledCategory: getEnabledCategoryReducer,\r\n  getCategory: getCategoryReducer,\r\n  addOrder: addOrderReducer,\r\n  checkout: checkOutReducer,\r\n  getOrderHistory: getOrderHistoryReducer,\r\n  getOrderById: getOrderByIdReducer,\r\n  addAPayment: addAPaymentReducer,\r\n\r\n  //Salon staff reducers\r\n  salonStaffList: getSalonStaffListReducer,\r\n  createSalonStaff: createNewSalonStaffReducer,\r\n  deleteSalonStaff: deleteSalonStaffReducer,\r\n  changeStatusSalonStaff: changeStatusSalonStaffReducer,\r\n\r\n  //Company reducers\r\n  companyList: getAllCompanyReducer,\r\n  enableComanyList: getAllEnableCompanyReducer,\r\n  createCompany: createCompanyReducer,\r\n  changeCompanyStatus: changeCompanyStatusReducer,\r\n  deleteCompany: deleteCompanyReducer,\r\n\r\n  //agreement forms\r\n  getFormByWaierLiability: getFormByWaierLiabilityReducer,\r\n  createFormByIndependentAgreement: createFormByIndependentAgreementReducer,\r\n  getFormByIndependentAgreement: getFormByIndependentAgreementReducer,\r\n\r\n  //App versions\r\n  appVersionList: getAllAppVersionReducer,\r\n  createAppVersion: createAppVersionReducer,\r\n  changeAppVersionStatus: changeAppVersionStatusReducer,\r\n  deleteAppVersion: deleteAppVersionReducer,\r\n\r\n  //Reports Get Session Report by month\r\n  getDahboardCount: getDahboardCountReducers,\r\n  allNotifications: allNotificationsReducer,\r\n  sendNotification: sendNotificationReducer,\r\n  getCurrentYear: getCurrentYeartReducers,\r\n  getCurrentAppointment: getCurrentAppointmentReducers,\r\n  getRecentAppointment: getRecentAppointmentReducers,\r\n  getUpcomingAppointment: getUpcomingAppointmentReducers,\r\n  getAdminDashboardReport: getAdminDashboardReportReducers,\r\n  getSalonAppointmentReport: getSalonAppointmentReportReducers,\r\n  getSalonSubscriptionReport: getSalonSubscriptionReportReducers,\r\n\r\n  //Service reducers\r\n  serviceList: getAllServiceReducer,\r\n  enableServiceList: getAllEnableServiceReducer,\r\n  createService: createServiceReducer,\r\n  changeServiceStatus: changeServiceStatusReducer,\r\n  deleteService: deleteServiceReducer,\r\n  getAllServiceCategories: getAllServiceCategoriesReducer,\r\n  enableSubServiceList: getAllEnableSubServiceReducer,\r\n  updateRankService: updateRankServiceReducer,\r\n\r\n  //BookB Coupons\r\n  getAllCouponsBookB: getAllCouponsBookBReducer,\r\n  getActiveCoupons: getActiveCouponsBookBReducer,\r\n  addCouponBookB: addCouponBookBReducer,\r\n  activateCouponBookB: activateCouponBookBReducer,\r\n  deleteCouponBookB: deleteCouponBookBReducer,\r\n  verfifyCouponBookB: verifyCouponsBookBReducer,\r\n\r\n  //Coupons\r\n  getAllCoupons: getAllCouponsReducer,\r\n  addCoupon: addCouponReducer,\r\n  activateCoupon: activateCouponReducer,\r\n  deleteCoupon: deleteCouponReducer,\r\n  verfifyCoupon: verifyCouponsReducer,\r\n\r\n  // Availabilities reducers\r\n  getDailyAvailabilitys: getDailyAvailabilitysReducer,\r\n  addDailyAvailabilitys: addDailyAvailabilitysReducer,\r\n  addBulkAvailabilitys: addBulkAvailabilitysReducer,\r\n  addDayAvailabilitys: addDayAvailabilitysReducer,\r\n  getUnblockAvailabilitys: getUnblockAvailabilitysReducer,\r\n  delBlockAvailabilitys: delBlockAvailabilitysReducer,\r\n\r\n  //Appointment reducers\r\n  addAppointment: addAppointmentReducer,\r\n  getPublicAppointment: getPublicAppointmentReducer,\r\n  updateAppointment: updateAppointmentReducer,\r\n  deleteAppointment: deleteAppointmentReducer,\r\n  deleteSlot: deleteSlotReducer,\r\n  confirmAppointment: confirmAppointmentStatusReducer,\r\n  publicAddAppointment: addPublicAppointmentReducer,\r\n  getBusinessHour: getBusinessHourReducer,\r\n  getActivity: getActivityReducer,\r\n\r\n  //waitlist\r\n  appointmentStatusList: appointmentStatusListReducer,\r\n  availabilityAppointment: availabilityAppointmentReducer,\r\n  changeAppointmentStatus: changeAppointmentReducer,\r\n\r\n  //website\r\n  publicWebsite: websiteDataReducer,\r\n  getPublicWebsite: getWebsiteDataReducer,\r\n  getWebsiteService: getWebsiteServiceReducer,\r\n\r\n  //subscription\r\n  addSubscription: addSubscriptionReducer,\r\n  getSubscription: getSubscriptionReducer,\r\n  changeStatusSubscription: changeStatusSubscriptionReducer,\r\n  deleteSubscription: deleteSubscriptionReducer,\r\n  getEnableSubscription: getEnableSubscriptionReducer,\r\n  getTotalPrice: getTotalPriceReducer,\r\n  getAdminCoupon: getAdminCouponsReducer,\r\n  getStylistAppointment: getStylistAppointmentReducer,\r\n  addWebsiteContactUs: addWebsiteContactUsReducer,\r\n  addAppOrder: addAppOrderReducer,\r\n  cancelSubscription: getCancelSubscriptionReducer,\r\n  getSubscriptionDetail: getSubscriptionDetailsReducer,\r\n\r\n  //promoCodes\r\n  activatePromoCodes: activatePromoCodesReducer,\r\n  addPromCodes: addPromCodesReducer,\r\n\r\n  // onBoard\r\n  onBoardRegister: createNewOnBoardUserReducer,\r\n  onBoardPayment: paymentOnBoardReducer,\r\n  onBoardComplete: createNewOnBoardUserReducer,\r\n\r\n  logOutUser: logOutUserReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst websiteInfoFromStorage = localStorage.getItem('websiteInfo') ? JSON.parse(localStorage.getItem('websiteInfo')) : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  getPublicWebsite: { websiteInfo: websiteInfoFromStorage },\r\n  cartProducts: {\r\n    products: localStorage.getItem('products') ? JSON.parse(localStorage.getItem('products')) : [],\r\n    cart: localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [],\r\n  },\r\n  checkout: { cart: localStorage.getItem('checkout') ? JSON.parse(localStorage.getItem('checkout')) : [] },\r\n};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\userActions.js",["1692","1693","1694","1695","1696"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\salonActions.js",["1697","1698","1699","1700","1701"],"import axios from 'axios';\r\nimport {\r\n\tSALON_REQUEST,\r\n\tSALON_SUCCESS,\r\n\tSALON_FAIL,\r\n\r\n\tDELETE_SALON_SUCCESS,\r\n\tDELETE_SALON_REQUEST,\r\n\tDELETE_SALON_FAIL,\r\n\r\n\tCREATE_NEW_SALON_REQUEST,\r\n\tCREATE_NEW_SALON_SUCCESS,\r\n\tCREATE_NEW_SALON_FAIL,\r\n\r\n\tUPDATE_SALON_REQUEST,\r\n\tUPDATE_SALON_RESET,\r\n\tUPDATE_SALON_FAIL,\r\n\tUPDATE_SALON_SUCCESS,\r\n\tCHANGE_STATUS_SALON_REQUEST,\r\n\tCHANGE_STATUS_SALON_SUCCESS,\r\n\tCHANGE_STATUS_SALON_FAIL,\r\n\r\n\r\n\tGET_ALL_ENABLE_SALON_REQUEST,\r\n\tGET_ALL_ENABLE_SALON_SUCCESS,\r\n\tGET_ALL_ENABLE_SALON_FAIL,\r\n\tGET_ALL_ENABLE_SALON_RESET,\r\n\tCHANGE_MENU_SETTINGS_REQUEST,\r\n\tCHANGE_MENU_SETTINGS_SUCCESS,\r\n\tCHANGE_MENU_SETTINGS_FAIL,\r\n} from '../constants/salonConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\n\r\nexport const getSalonListAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: SALON_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/salon/get-salon?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const deleteSalonAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SALON_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/salon/delete-salon?salonID=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const createNewSalonAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_NEW_SALON_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/salon/create-salon`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const changeStatusSalonAction = (id, formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_STATUS_SALON_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/salon/enable-disable-salon?userID=${id}`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const getAllEnabledSalonListAction = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_ENABLE_SALON_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/salon/get-enable-salon`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SALON_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SALON_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const changeMenuSettingsAction = (id, formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_MENU_SETTINGS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/salon/change-menu-setting?userID=${id}`, { 'appMenu': formData }, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_MENU_SETTINGS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_MENU_SETTINGS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\ip.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\userReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ConragatulationModal\\CongratulationModal.js",["1702","1703","1704"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\salonReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\videoReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\stylistReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\attendanceReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\salonStaffReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\productReducers.js",["1705","1706"],"import {\r\n\tGET_ALL_PRODUCT_CATEGORY_REQUEST,\r\n\tGET_ALL_PRODUCT_CATEGORY_SUCCESS,\r\n\tGET_ALL_PRODUCT_CATEGORY_FAIL,\r\n\tGET_ALL_PRODUCT_CATEGORY_RESET,\r\n\tADD_PRODUCT_CATEGORY_REQUEST,\r\n\tADD_PRODUCT_CATEGORY_SUCCESS,\r\n\tADD_PRODUCT_CATEGORY_FAIL,\r\n\tADD_PRODUCT_CATEGORY_RESET,\r\n\tPRODUCT_CATEGORY_STATUS_REQUEST,\r\n\tPRODUCT_CATEGORY_STATUS_SUCCESS,\r\n\tPRODUCT_CATEGORY_STATUS_FAIL,\r\n\tPRODUCT_CATEGORY_STATUS_RESET,\r\n\tDELETE_PRODUCT_CATEGORY_REQUEST,\r\n\tDELETE_PRODUCT_CATEGORY_SUCCESS,\r\n\tDELETE_PRODUCT_CATEGORY_FAIL,\r\n\tDELETE_PRODUCT_CATEGORY_RESET,\r\n\tGET_ALL_PRODUCTS_REQUEST,\r\n\tGET_ALL_PRODUCTS_SUCCESS,\r\n\tGET_ALL_PRODUCTS_FAIL,\r\n\tGET_ALL_PRODUCTS_RESET,\r\n\tGET_ONE_PRODUCT_REQUEST,\r\n\tGET_ONE_PRODUCT_SUCCESS,\r\n\tGET_ONE_PRODUCT_FAIL,\r\n\tGET_ONE_PRODUCT_RESET,\r\n\tCREATE_PRODUCT_REQUEST,\r\n\tCREATE_PRODUCT_SUCCESS,\r\n\tCREATE_PRODUCT_FAIL,\r\n\tCREATE_PRODUCT_RESET,\r\n\tCHANGE_PRODUCT_STATUS_REQUEST,\r\n\tCHANGE_PRODUCT_STATUS_SUCCESS,\r\n\tCHANGE_PRODUCT_STATUS_FAIL,\r\n\tCHANGE_PRODUCT_STATUS_RESET,\r\n\tDELETE_PRODUCT_REQUEST,\r\n\tDELETE_PRODUCT_SUCCESS,\r\n\tDELETE_PRODUCT_FAIL,\r\n\tDELETE_PRODUCT_RESET,\r\n\r\n\tADD_PRODUCT_STOCK_REQUEST,\r\n\tADD_PRODUCT_STOCK_SUCCESS,\r\n\tADD_PRODUCT_STOCK_FAIL,\r\n\tADD_PRODUCT_STOCK_RESET,\r\n\r\n\tGET_PRODUCT_ORDER_REQUEST,\r\n\tGET_PRODUCT_ORDER_RESET,\r\n\tGET_PRODUCT_ORDER_FAIL,\r\n\tGET_PRODUCT_ORDER_SUCCESS,\r\n\r\n\tCHANGE_ORDER_STATUS_REQUEST,\r\n\tCHANGE_ORDER_STATUS_SUCCESS,\r\n\tCHANGE_ORDER_STATUS_RESET,\r\n\tCHANGE_ORDER_STATUS_FAIL,\r\n\tADD_PRODUCTS_TO_CART,\r\n\tREMOVE_PRODUCTS_TO_CART,\r\n\tGET_SIMILAR_PRODUCT_REQUEST,\r\n\tGET_SIMILAR_PRODUCT_SUCCESS,\r\n\tGET_SIMILAR_PRODUCT_FAIL,\r\n\tGET_SIMILAR_PRODUCT_RESET,\r\n\tGET_ENABLED_CATEGORY_REQUEST,\r\n\tGET_ENABLED_CATEGORY_SUCCESS,\r\n\tGET_ENABLED_CATEGORY_FAIL,\r\n\tGET_ENABLED_CATEGORY_RESET,\r\n\tGET_CATEGORY_REQUEST,\r\n\tGET_CATEGORY_SUCCESS,\r\n\tGET_CATEGORY_FAIL,\r\n\tGET_CATEGORY_RESET,\r\n\tADD_ORDER_REQUEST,\r\n\tADD_ORDER_SUCCESS,\r\n\tADD_ORDER_FAIL,\r\n\tADD_ORDER_RESET,\r\n\tADD_ITEM_IN_CART,\r\n\tADJUST_ITEM_IN_CART,\r\n\tDELETE_ITEM_IN_CART,\r\n\tLOAD_ITEM_IN_CART,\r\n\tGET_PROD_LIST_CART,\r\n\tCHECKOUT,\r\n\tCHECKOUT_RESET,\r\n\tCART_RESET,\r\n\tDELETE_ALL_ITEM_IN_CART,\r\n\tGET_ORDER_BY_USER_REQUEST,\r\n\tGET_ORDER_BY_USER_SUCCESS,\r\n\tGET_ORDER_BY_USER_FAIL,\r\n\tGET_ORDER_BY_USER_RESET,\r\n\tADD_APP_ORDER_REQUEST,\r\n\tADD_APP_ORDER_SUCCESS,\r\n\tADD_APP_ORDER_FAIL,\r\n\tADD_APP_ORDER_RESET,\r\n\tGET_ORDER_BY_ID_REQUEST,\r\n\tGET_ORDER_BY_ID_SUCCESS,\r\n\tGET_ORDER_BY_ID_FAIL,\r\n\tGET_ORDER_BY_ID_RESET,\r\n\tADD_PAYMENT_REQUEST,\r\n\tADD_PAYMENT_SUCCESS,\r\n\tADD_PAYMENT_FAIL,\r\n\tADD_PAYMENT_RESET,\r\n} from '../constants/productConstants';\r\n\r\nexport const getAllProductCategoriesReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ALL_PRODUCT_CATEGORY_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ALL_PRODUCT_CATEGORY_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_ALL_PRODUCT_CATEGORY_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ALL_PRODUCT_CATEGORY_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const createProductCategoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_PRODUCT_CATEGORY_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase ADD_PRODUCT_CATEGORY_SUCCESS:\r\n\t\t\treturn { category: action.payload, loading: false };\r\n\r\n\t\tcase ADD_PRODUCT_CATEGORY_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase ADD_PRODUCT_CATEGORY_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productCategoryStatusReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_CATEGORY_STATUS_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase PRODUCT_CATEGORY_STATUS_SUCCESS:\r\n\t\t\treturn { category: action.payload, loading: false };\r\n\r\n\t\tcase PRODUCT_CATEGORY_STATUS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase PRODUCT_CATEGORY_STATUS_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const deleteProductCategoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase DELETE_PRODUCT_CATEGORY_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase DELETE_PRODUCT_CATEGORY_SUCCESS:\r\n\t\t\treturn { category: action.payload, loading: false };\r\n\r\n\t\tcase DELETE_PRODUCT_CATEGORY_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase DELETE_PRODUCT_CATEGORY_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const getAllProductsReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ALL_PRODUCTS_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ALL_PRODUCTS_SUCCESS:\r\n\t\t\treturn { products: action.payload, loading: false };\r\n\r\n\t\tcase GET_ALL_PRODUCTS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ALL_PRODUCTS_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const getOneProductReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ONE_PRODUCT_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ONE_PRODUCT_SUCCESS:\r\n\t\t\treturn { product: action.payload, loading: false };\r\n\r\n\t\tcase GET_ONE_PRODUCT_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ONE_PRODUCT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const createProductReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE_PRODUCT_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase CREATE_PRODUCT_SUCCESS:\r\n\t\t\treturn { product: action.payload, loading: false };\r\n\r\n\t\tcase CREATE_PRODUCT_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase CREATE_PRODUCT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const changeProductStatusReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_PRODUCT_STATUS_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase CHANGE_PRODUCT_STATUS_SUCCESS:\r\n\t\t\treturn { product: action.payload, loading: false };\r\n\r\n\t\tcase CHANGE_PRODUCT_STATUS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase CHANGE_PRODUCT_STATUS_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const deleteProductReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase DELETE_PRODUCT_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase DELETE_PRODUCT_SUCCESS:\r\n\t\t\treturn { product: action.payload, loading: false };\r\n\r\n\t\tcase DELETE_PRODUCT_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase DELETE_PRODUCT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const getProductOrderHistoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_PRODUCT_ORDER_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_PRODUCT_ORDER_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_PRODUCT_ORDER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_PRODUCT_ORDER_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addProductStockReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_PRODUCT_STOCK_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase ADD_PRODUCT_STOCK_SUCCESS:\r\n\t\t\treturn { category: action.payload, loading: false };\r\n\r\n\t\tcase ADD_PRODUCT_STOCK_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase ADD_PRODUCT_STOCK_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const changeOrderStatusReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_ORDER_STATUS_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase CHANGE_ORDER_STATUS_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase CHANGE_ORDER_STATUS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase CHANGE_ORDER_STATUS_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const getSimilarProductReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_SIMILAR_PRODUCT_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_SIMILAR_PRODUCT_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_SIMILAR_PRODUCT_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_SIMILAR_PRODUCT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const getEnabledCategoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ENABLED_CATEGORY_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ENABLED_CATEGORY_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_ENABLED_CATEGORY_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ENABLED_CATEGORY_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const getCategoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_CATEGORY_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_CATEGORY_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_CATEGORY_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_CATEGORY_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addOrderReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_ORDER_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase ADD_ORDER_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase ADD_ORDER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase ADD_ORDER_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nconst INITIAL_STATE = {\r\n\tproducts: [],\r\n\tcart: [],\r\n\tcurrentItem: null\r\n}\r\nexport const cartProductReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_PROD_LIST_CART:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproducts: action.payload\r\n\t\t\t}\r\n\r\n\t\tcase ADD_ITEM_IN_CART:\r\n\t\t\tconst item = state.products.find(prod => prod._id === action.payload.id);\r\n\r\n\t\t\tconst inCart = state.cart.find(item => item._id === action.payload.id ? true : false)\r\n\t\t\t//const addedData = inCart? state.cart.map(item=> item._id === action.payload.id ? {...item, quantity: item.quantity + 1 }: item): [...state.cart, {...item, quantity: 1}]\r\n\t\t\tconst addedData = inCart ? state.cart.map(item => item._id === action.payload.id ? { ...item, quantity: item.quantity + 1 } : item) : [...state.cart, { ...item, quantity: 1 }]\r\n\t\t\tlocalStorage.setItem('cart', JSON.stringify(addedData))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: addedData,\r\n\r\n\t\t\t};\r\n\r\n\t\tcase ADJUST_ITEM_IN_CART:\r\n\t\t\tconst adjustedData = state.cart.map(item => item._id === action.payload.id ? { ...item, quantity: +action.payload.quantity } : item);\r\n\t\t\tlocalStorage.setItem('cart', JSON.stringify(adjustedData))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: adjustedData\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_ITEM_IN_CART:\r\n\t\t\tconst deletedData = state.cart.filter(item => item._id !== action.payload.id)\r\n\t\t\tlocalStorage.setItem('cart', JSON.stringify(deletedData))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: deletedData\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_ALL_ITEM_IN_CART:\r\n\t\t\tlocalStorage.removeItem('cart')\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: []\r\n\t\t\t};\r\n\r\n\t\tcase LOAD_ITEM_IN_CART:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentItem: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase CART_RESET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: [],\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const checkOutReducer = (state = {\r\n\tcart: []\r\n}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHECKOUT:\r\n\t\t\tlocalStorage.setItem('checkout', JSON.stringify(action.payload))\r\n\t\t\treturn {\r\n\t\t\t\tcart: action.payload\r\n\t\t\t};\r\n\t\tcase CHECKOUT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const getOrderHistoryReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ORDER_BY_USER_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ORDER_BY_USER_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_ORDER_BY_USER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ORDER_BY_USER_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const addAppOrderReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_APP_ORDER_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase ADD_APP_ORDER_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase ADD_APP_ORDER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase ADD_APP_ORDER_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const getOrderByIdReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ORDER_BY_ID_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase GET_ORDER_BY_ID_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase GET_ORDER_BY_ID_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase GET_ORDER_BY_ID_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addAPaymentReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_PAYMENT_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase ADD_PAYMENT_SUCCESS:\r\n\t\t\treturn { categories: action.payload, loading: false };\r\n\r\n\t\tcase ADD_PAYMENT_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase ADD_PAYMENT_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\companyReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\formReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\couponReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\appVersionReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\serviceReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\availabilityReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\notificationReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\appointmentReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\reportReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\subscriptionReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\onboardingReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\couponBookBReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\websiteSettingReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\reducers\\promoCodesReducers.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\navigation\\index.js",["1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723"],"import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n// Screens\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport CheckinUserScreen from '../screens/CheckinUserScreen';\r\nimport UsersScreen from '../screens/UsersScreen';\r\nimport SalonScreen from '../screens/SalonScreen';\r\nimport StylistsScreen from '../screens/StylistsScreen';\r\nimport VideosScreen from '../screens/VideosScreen';\r\nimport VideoCategoriesScreen from '../screens/VideoCategoriesScreen';\r\nimport VideoDetailsScreen from '../screens/VideoDetailsScreen';\r\nimport ProductsScreen from '../screens/ProductsScreen';\r\n// import MyProfileScreen from '../screens/MyProfileScreen';\r\nimport ProductCategoriesScreen from '../screens/ProductsCategoriesScreen';\r\nimport ProductDetailsScreen from '../screens/ProductDetailsScreen';\r\nimport SalonStaffScreen from '../screens/SalonStaffScreen';\r\nimport CompanyScreen from '../screens/CompanyScreen';\r\nimport StylistSessionScreen from '../screens/StylistSessionScreen';\r\nimport OrderHistoryScreen from '../screens/OrderHistoryScreen';\r\nimport AppVersionScreen from '../screens/AppVersionScreen';\r\nimport BookAppointment from '../website/BookAppointment';\r\nimport SendNotification from '../screens/SendNotification';\r\nimport ServiceScreen from '../screens/ServiceScreen';\r\nimport ProductsList from '../website/ProductsList';\r\nimport ServiceCategoriesScreen from '../screens/ServiceCategoriesScreen';\r\nimport WaitlistModal from '../screens/Waitlist/index';\r\nimport AppearanceScreen from '../screens/AppearanceScreen';\r\nimport ViewCart from '../website/ViewCart/ViewCart';\r\nimport ProductInfo from '../website/ProductInformation/ProductInfo.js';\r\nimport Checkout from '../website/Checkout';\r\nimport CustomHomeScreen from '../website/CustomHomeScreen';\r\nimport UserSignUp from '../website/UserSignUp';\r\nimport Coupon from '../screens/Coupon/index';\r\nimport SubscriptionScreen from '../screens/SubscriptionScreen';\r\nimport Login from '../website/login';\r\nimport PageNotFoundScreen from '../website/PageNotFound';\r\nimport OrderHistory from '../website/OrderHistory';\r\nimport OrderSummary from '../website/OrderSummary';\r\nimport DiscountsList from '../website/DiscountsList';\r\nimport AppPayment from '../website/AppPayment';\r\nimport PromoCodeScreen from '../screens/PromotionCodeScreen';\r\nimport CouponBookB from '../screens/CouponBookB';\r\nimport OnBoarding from '../screens/Onborading';\r\nimport AppSettingScreen from '../screens/AppSettingScreen';\r\nimport Dashboard from '../screens/DashboardScreen';\r\nimport NewDashBoardScreen from '../screens/NewDashBoardScreen';\r\nimport LoginScreenNew from '../screens/LoginScreenNew/';\r\nimport NewUsersScreen from '../screens/NewUsersScreen';\r\nimport NewNotificationsScreen from '../screens/NewNotificationsScreen';\r\nimport NewSubscriptionScreen from '../screens/NewSubscriptionScreen';\r\nimport NewPromotionCodeScreen from '../screens/NewPromotionCodeScreen';\r\nimport NewAppVersionScreen from '../screens/NewAppVersionScreen';\r\nimport NewSalonScreen from '../screens/NewSalonScreen';\r\nimport MyProfileScreenNew from '../screens/MyProfileScreen_New';\r\nimport NewPorductCategoriesScreen from '../screens/NewProductCategoriesScreen';\r\nimport NewOrderHistoryScreen from '../screens/NewOrderHistoryScreen';\r\nimport NewProductScreen from '../screens/NewProductScreeen';\r\nimport NewStylistScreen from '../screens/NewStylistScreen';\r\nimport NewServiceScreen from '../screens/NewServiceScreen';\r\nimport NewStylistSessionScreen from '../screens/NewStylistSessionScreen';\r\nimport RewardScreen from '../screens/RewardScreen/index.js';\r\n\r\nconst Navigation = ({ userLogin, socket }) => {\r\n  return (\r\n    <Router>\r\n      {/* <Route exact path=\"/\" component={Dashboard} /> */}\r\n      <Route exact path='/' component={NewDashBoardScreen} />\r\n      <Route exact path='/user' component={UsersScreen} />\r\n      <Route exact path='/check-in' component={CheckinUserScreen} />\r\n      <Route exact path='/login' component={LoginScreenNew} />\r\n      {/* <Route exact path='/login' component={LoginScreen} /> */}\r\n      <Route exact path='/register' component={OnBoarding} />\r\n      <Route exact path='/users' component={NewUsersScreen} />\r\n      {/* <Route exact path='/users' component={UsersScreen} /> */}\r\n      <Route exact path='/user-signup' component={UserSignUp} />\r\n      <Route exact path='/salon' component={NewSalonScreen} />\r\n      <Route exact path='/promo-codes' component={NewPromotionCodeScreen} />\r\n      <Route exact path='/rewards' component={RewardScreen} />\r\n      <Route exact path='/salon-role-manger' component={SalonStaffScreen} />\r\n      <Route exact path='/stylist' component={NewStylistScreen} />\r\n      <Route exact path='/waitlist/:stylistId/:stylistName' component={WaitlistModal} />\r\n      {/* <Route exact path=\"/stylist-sessions/:stylistId\" component={StylistSessionScreen} /> */}\r\n      <Route exact path='/stylist-sessions/:stylistId'>\r\n        <NewStylistSessionScreen  socket={socket}/>\r\n      </Route>\r\n      <Route exact path='/stylist-sessions/:stylistId/:stylistName'>\r\n        <NewStylistSessionScreen  socket={socket}/>\r\n      </Route>\r\n      <Route exact path='/video-categories' component={VideoCategoriesScreen} />\r\n      <Route exact path='/videos' component={VideosScreen} />\r\n      <Route exact path='/videos/:id' component={VideoDetailsScreen} />\r\n      {/* <Route exact path=\"/product-categories\" component={ProductCategoriesScreen} /> */}\r\n      {/* <Route exact path=\"/product-categories\" component={NewPorductCategoriesScreen} /> */}\r\n      {/* <Route exact path=\"/products\" component={ProductsScreen} /> */}\r\n      {/* <Route exact path=\"/products\" component={NewProductScreen} /> */}\r\n      {/* <Route exact path=\"/order-history\" component={OrderHistoryScreen} /> */}\r\n      {/* <Route exact path=\"/order-history\" component={NewOrderHistoryScreen} />\r\n\t\t\t<Route exact path=\"/products/:id\" component={ProductDetailsScreen} /> */}\r\n      {/* <Route exact path=\"/my-profile\" component={MyProfileScreen} /> */}\r\n      {/* <Route exact path=\"/my-profile\" component={MyProfileScreenNew} /> */}\r\n      <Route exact path='/appversion' component={NewAppVersionScreen} />\r\n      <Route exact path='/product-categories' component={NewPorductCategoriesScreen} />\r\n      <Route exact path='/products' component={NewProductScreen} />\r\n      <Route exact path='/order-history' component={NewOrderHistoryScreen} />\r\n      <Route exact path='/products/:id' component={ProductDetailsScreen} />\r\n      <Route exact path='/my-profile' component={MyProfileScreenNew} />\r\n      {/* <Route exact path=\"/appversion\" component={AppVersionScreen} /> */}\r\n      <Route exact path='/company' component={CompanyScreen} />\r\n      {/* <Route exact path=\"/notification\" component={SendNotification} /> */}\r\n      {/* <Route exact path='/notification' component={NewNotificationsScreen} /> */}\r\n      <Route exact path='/services' component={NewServiceScreen} />\r\n      {/* <Route exact path=\"/services\" component={ServiceScreen} /> */}\r\n      <Route exact path='/website-setting' component={AppearanceScreen} />\r\n      <Route exact path='/coupon' component={Coupon} />\r\n      <Route exact path='/coupon-bookb' component={Coupon} />\r\n      <Route exact path='/subscription' component={NewSubscriptionScreen} />\r\n      <Route exact path='/app-setting' component={AppSettingScreen} />\r\n\r\n      {/* website Routes */}\r\n      <Route exact path='/salon/404' component={PageNotFoundScreen} />\r\n      <Route exact path='/salon/:salonId' component={CustomHomeScreen} />\r\n      <Route exact path='/salon/:salonId/book-appointment' component={BookAppointment} />\r\n      {/* <Route exact path='/salon/:salonId/discounts' component={DiscountsList} /> */}\r\n      <Route exact path='/salon/:salonId/products-list' component={ProductsList} />\r\n      <Route exact path='/salon/:salonId/product-info/:id' component={ProductInfo} />\r\n      <Route exact path='/salon/:salonId/checkout' component={Checkout} />\r\n      <Route exact path='/salon/:salonId/login' component={Login} />\r\n      <Route exact path='/salon/:salonId/view-cart' component={ViewCart} />\r\n      <Route exact path='/salon/:salonId/order-history' component={OrderHistory} />\r\n      <Route exact path='/salon/:salonId/order-summary/:orderId' component={OrderSummary} />\r\n      <Route exact path='/salon/:salonId/transaction/:transactionId' component={AppPayment} />\r\n\r\n      {/* <Route exact path=\"/home-screen\" component={HomeScreen} /> */}\r\n      {/* <Route exact path=\"/book-appointment\" component={BookAppointment} /> */}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\salonConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\userConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\salonStaffConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\videoConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\couponConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\stylistConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\formConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\attendanceConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\availabilityConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\appVersionConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\productConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\companyConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\reportConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\serviceConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\appointmentConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\promoCodesConstant.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\notificationConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\onboardingConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\couponBookBConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\SubscriptionConstants.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\constants\\websiteSettingConstant.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\RewardScreen\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductInformation\\ProductInfo.js",["1724","1725","1726","1727","1728","1729","1730"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\index.js",["1731","1732"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Content from '../../components/Content'\r\nimport './Waitlist.css'\r\nimport WaitlistTable from './WaitlistTable'\r\n\r\nconst Index = ({match}) => {\r\n  const [updateWaitlistModal, setUpdateWaitlistModal] = useState(false)\r\n\r\n  return (\r\n    <Content\r\n    headerTitle= {`${match.params.stylistName}'s Waitlist`}\r\n    >\r\n      <Link to={`/stylist-sessions/${match.params.stylistId}/${match.params.stylistName}`} style={{textDecoration: 'none', color:'var(--dark-grey)'}}>\r\n        <h3>Back to Availabilities</h3>\r\n      </Link>\r\n    <WaitlistTable\r\n    />\r\n    </Content>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Index","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\index.js",["1733","1734","1735","1736","1737","1738","1739","1740","1741","1742"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport Content from '../../components/Content/Content'\r\nimport Pagination from '../../components/Pagination'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { activateCouponAction, addCouponAction, deleteCouponAction, getAllCouponsAction } from '../../redux/actions/couponActions'\r\nimport { ACTIVATE_COUPON_RESET, ADD_COUPON_RESET, DELETE_COUPON_RESET } from '../../redux/constants/couponConstants'\r\nimport NoData from '../../website/components/NoData'\r\nimport './coupon.css'\r\nimport AddCoupon from './Modals/AddCoupon'\r\nimport DeleteCouponModal from './Modals/DeleteCouponModal'\r\n\r\nconst Coupon = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllCoupons = useSelector((state) => state.getAllCoupons);\r\n    const addCoupon = useSelector((state) => state.addCoupon);\r\n    const deleteCoupon = useSelector((state) => state.deleteCoupon);\r\n    const activateCoupon = useSelector((state) => state.activateCoupon);\r\n\r\n    const [showAddCouponModal, setShowAddCouponModal] = useState(false)\r\n    const [showDeleteCouponModal, setShowDeleteCouponModal] = useState(false);\r\n    const [totalPageSize, setTotalPageSize] = useState(1);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const pageLimit = 15;\r\n    const [search, setSearch] = useState('');\r\n\r\n    const [addCouponData, setAddCouponData] = useState({\r\n        id: '',\r\n        title: '',\r\n        discount: '',\r\n        code: '',\r\n        stateDate: '',\r\n        endDate: '',\r\n        description: ''\r\n    })\r\n\r\n    const [addCouponDataError, setAddCouponDataError] = useState({\r\n        title: '',\r\n        discount: '',\r\n        code: '',\r\n        stateDate: '',\r\n        endDate: '',\r\n        description: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n    }, [dispatch, pageNumber])\r\n\r\n\r\n    useEffect(() => {\r\n        if (getAllCoupons && getAllCoupons.data && getAllCoupons.data.status && getAllCoupons.data.data.result.length > 0) {\r\n            setTotalPageSize(getAllCoupons.data.totalPageSize);\r\n        }\r\n    }, [getAllCoupons])\r\n\r\n    useEffect(() => {\r\n        if (addCoupon && addCoupon.data && addCoupon.data.status) {\r\n            setShowAddCouponModal(false);\r\n            toast.success(addCoupon.data.message)\r\n            clearData();\r\n            dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n            dispatch({ type: ADD_COUPON_RESET });\r\n        } else if (addCoupon && addCoupon.data && !addCoupon.data.status) {\r\n            dispatch({ type: ADD_COUPON_RESET });\r\n            toast.error(addCoupon.data.message);\r\n        }\r\n    }, [addCoupon, pageNumber, pageLimit, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (deleteCoupon && deleteCoupon.data && deleteCoupon.data.status) {\r\n            setShowDeleteCouponModal(false)\r\n            toast.success(deleteCoupon.data.message)\r\n            clearData();\r\n            dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n            dispatch({ type: DELETE_COUPON_RESET });\r\n        } else if (deleteCoupon && deleteCoupon.data && !deleteCoupon.data.status) {\r\n            toast.error(deleteCoupon.data.message);\r\n            dispatch({ type: DELETE_COUPON_RESET });\r\n        }\r\n    }, [deleteCoupon, pageNumber, pageLimit, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (activateCoupon && activateCoupon.data && activateCoupon.data.status) {\r\n            toast.success(activateCoupon.data.message)\r\n            clearData();\r\n            dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n            dispatch({ type: ACTIVATE_COUPON_RESET });\r\n        } else if (activateCoupon && activateCoupon.data && !activateCoupon.data.status) {\r\n            toast.error(activateCoupon.data.message);\r\n            dispatch({ type: ACTIVATE_COUPON_RESET });\r\n        }\r\n    }, [activateCoupon, pageNumber, pageLimit, dispatch])\r\n\r\n    const closeAddCouponModal = () => {\r\n        setShowAddCouponModal(false)\r\n        clearData();\r\n    }\r\n\r\n    const closeDeleteCouponModal = () => {\r\n        setShowDeleteCouponModal(false)\r\n        clearData();\r\n    }\r\n\r\n    const handleAddCoupon = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (addCouponData.title === '' || addCouponData.title && addCouponData.title.trim() === '' || addCouponData.title === null) {\r\n            setAddCouponDataError({ ...addCouponDataError, title: 'Please enter coupon title' });\r\n        } else if (addCouponData.title.length > 15) {\r\n            setAddCouponDataError({ ...addCouponDataError, title: 'Coupon title cannot exceed 15 characters' });\r\n        } else if (addCouponData.discount === '' || addCouponData.discount && addCouponData.discount.trim() === '' || addCouponData.discount === null) {\r\n            setAddCouponDataError({ ...addCouponDataError, discount: 'Please enter a discount' });\r\n        } else if (addCouponData.code === '' || addCouponData.code && addCouponData.code.trim() === '' || addCouponData.code === null) {\r\n            setAddCouponDataError({ ...addCouponDataError, code: 'Please enter coupon code' });\r\n        } else if (addCouponData.code.length > 15) {\r\n            setAddCouponDataError({ ...addCouponDataError, code: 'Coupon code cannot exceed 15 characters' });\r\n        } else if (addCouponData.stateDate === '' || addCouponData.stateDate && addCouponData.stateDate.trim() === '' || addCouponData.stateDate === null) {\r\n            setAddCouponDataError({ ...addCouponDataError, stateDate: 'Please enter a start date' });\r\n        } else if (addCouponData.endDate === '' || addCouponData.endDate && addCouponData.endDate.trim() === '' || addCouponData.endDate === null) {\r\n            setAddCouponDataError({ ...addCouponDataError, endDate: 'Please enter an end date' });\r\n        } else {\r\n            if (addCouponData.id !== '') {\r\n                // Edit Coupon\r\n                let formData = {\r\n                    id: addCouponData.id,\r\n                    title: addCouponData.title,\r\n                    code: addCouponData.code,\r\n                    discount: addCouponData.discount,\r\n                    startDate: addCouponData.stateDate,\r\n                    expireDate: addCouponData.endDate,\r\n                    isExpired: false,\r\n                    description: addCouponData.description\r\n                }\r\n                dispatch(addCouponAction(formData))\r\n            } else {\r\n                let formData = {\r\n                    title: addCouponData.title,\r\n                    code: addCouponData.code,\r\n                    discount: addCouponData.discount,\r\n                    startDate: addCouponData.stateDate,\r\n                    expireDate: addCouponData.endDate,\r\n                    isExpired: false,\r\n                    description: addCouponData.description\r\n                }\r\n                dispatch(addCouponAction(formData))\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (id, activation) => {\r\n        let formData = {\r\n            id: id,\r\n            enableDisable: {\r\n                enable: !activation\r\n            }\r\n\r\n        }\r\n        dispatch(activateCouponAction(formData))\r\n    }\r\n\r\n    const handleDeleteCoupon = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteCouponAction(addCouponData.id))\r\n    }\r\n\r\n    const clearData = () => {\r\n        setAddCouponData({\r\n            id: '',\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: ''\r\n        })\r\n        setAddCouponDataError({\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: '',\r\n        })\r\n    }\r\n\r\n\r\n    const handlePageChange = async (currentPage) => {\r\n        const selectedPage = currentPage.selected;\r\n        dispatch(getAllCouponsAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n        setPageNumber(selectedPage + 1);\r\n    };\r\n\r\n    const onSearchHandler = (event) => {\r\n        setSearch(event.target.value);\r\n        if (search.trim !== '' && search.length > 0) {\r\n            setPageNumber(1);\r\n        }\r\n        dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n    };\r\n\r\n    return (\r\n        <Content currentMenu='coupon' headerTitle='Coupons'\r\n            addBtn={true}\r\n            addBtnText='Add Coupon'\r\n            addBtnIcon='plus'\r\n            addBtnClick={() => { setShowAddCouponModal(true) }}\r\n            search={true}\r\n            searchPlaceholder='Search Coupon...'\r\n            searchIcon='search'\r\n            searchvalue={search}\r\n            searchOnChange={onSearchHandler}\r\n\r\n\r\n        >\r\n\r\n            {getAllCoupons.loading ? (\r\n                <Spinner />\r\n            ) : getAllCoupons &&\r\n                getAllCoupons.data &&\r\n                getAllCoupons.data.status &&\r\n                getAllCoupons.data.data.result &&\r\n                getAllCoupons.data.data.result.length > 0 ? (\r\n                <div className='main--card__Container'>\r\n                    {getAllCoupons.data.data.result.map((item, i) => (\r\n                        <div className='single__discountCard' key={i}>\r\n                            <div className='card--coupons'>\r\n                                <h1>{item.title}</h1>\r\n                                <p>Valid Until: &nbsp;\r\n                                    {/* {item.expireDate} */}\r\n                                    {new Date(item.expireDate).toLocaleDateString('en-US', {\r\n                                        year: 'numeric',\r\n                                        month: '2-digit',\r\n                                        day: '2-digit'\r\n                                    })}</p>\r\n                                <h4>Code: <span style={{ fontWeight: 'bold' }}>{item.code}</span></h4>\r\n                            </div>\r\n                            <div className='coupon--card_bottom'>\r\n                                <label className='switch'>\r\n                                    <input\r\n                                        //id={d._id}\r\n                                        checked={item.enable}\r\n                                        onChange={() => { onChangeHandler(item._id, item.enable) }}\r\n                                        type='checkbox'\r\n                                        className='checkbox'\r\n                                        name='active'\r\n                                    />\r\n                                    <span className='slider round' />\r\n                                </label>\r\n                                <div className='coupon--edit_delete'>\r\n                                    <button className='cardCouponIcon__button'\r\n                                        onClick={() => {\r\n                                            setShowAddCouponModal(true)\r\n                                            setAddCouponData({\r\n                                                ...addCouponData,\r\n                                                id: item._id,\r\n                                                title: item.title,\r\n                                                discount: item.discount,\r\n                                                code: item.code,\r\n                                                stateDate: item.startDate,\r\n                                                endDate: item.expireDate\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        <svg className='edit--coupon_icon'>\r\n                                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                        </svg>\r\n                                        <span>Update Coupon</span>\r\n                                    </button>\r\n                                    <button className='cardCouponIcon__button'\r\n                                        onClick={() => {\r\n                                            setShowDeleteCouponModal(true)\r\n                                            setAddCouponData({ ...addCouponData, id: item._id })\r\n                                        }}\r\n                                    >\r\n                                        <svg className='cardCoupon--icon-red'>\r\n                                            <use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n                                        </svg>\r\n                                        <span>Delete Coupon</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    {totalPageSize > 1 && (\r\n                        <div className='tableContainer--paginater'>\r\n                            <Pagination\r\n                                list={getAllCoupons.data}\r\n                                onPageChange={handlePageChange}\r\n                                rowsPerPage={pageLimit}\r\n                                totalPageSize={totalPageSize}\r\n                                pageNumber={pageNumber}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <NoData\r\n                    title='No Data Found!'\r\n                    subTitle='We could not find any coupon data.'\r\n                    height='40vh'\r\n                />\r\n            )}\r\n\r\n            <AddCoupon\r\n                data={{ showAddCouponModal, closeAddCouponModal, addCouponData, setAddCouponData, handleAddCoupon, addCouponDataError, setAddCouponDataError }}\r\n            />\r\n            <DeleteCouponModal\r\n                data={{ showDeleteCouponModal, closeDeleteCouponModal, handleDeleteCoupon }}\r\n            />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default Coupon","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ViewCart\\ViewCart.js",["1743","1744","1745"],"import React, { useState } from 'react'\r\nimport Button from '../../components/formInputs/Button';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport Content from '../components/WebsiteContent/Content';\r\nimport './ViewCart.css'\r\n\r\nconst ViewCart = () => {\r\n    const [count, setCount] = useState(1)\r\n\r\n  return (\r\n    <Content>\r\n        <div style={{marginTop: '8rem'}} className='viewCart--main'>\r\n            <div className='cart--items__container'>\r\n                <div className='cart--items__header'>\r\n                   <h2>View Cart</h2>\r\n                   <h2>2 Items</h2>\r\n                </div>\r\n\r\n                <table className='table'>\r\n                <thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Product Details</th>\r\n\t\t\t\t\t\t<th>Quantity</th>\r\n\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='cart--item--detail'>\r\n                            <img className=\"cart-product_image\" src=\"./assets/instyler.png\" alt=\"product image\" />\r\n                            <div>\r\n                                <span className=\"item-name\">Black Blade Brush</span>\r\n                            </div>\r\n                        </td>\r\n                        <td >\r\n                            <div className=\"cart--item--quantity\">\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count-1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<div>{count}</div>\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count+1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n                        </td>\r\n                        <td>$45</td>\r\n                        <td>$90</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className='cart--item--detail'>\r\n                            <img className=\"cart-product_image\" src=\"./assets/scissor.jpg\" alt=\"product image\" />\r\n                            <div>\r\n                                <span className=\"item-name\">Black Blade Brush</span>\r\n                            </div>\r\n                        </td>\r\n                        <td >\r\n                            <div className=\"cart--item--quantity\">\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count-1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<div>{count}</div>\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count+1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n                        </td>\r\n                        <td>$45</td>\r\n                        <td>$90</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className='cart--item--detail'>\r\n                            <img className=\"cart-product_image\" src=\"./assets/instyler.png\" alt=\"product image\" />\r\n                            <div>\r\n                                <span className=\"item-name\">Black Blade Brush</span>\r\n                            </div>\r\n                        </td>\r\n                        <td >\r\n                            <div className=\"cart--item--quantity\">\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count-1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<div>{count}</div>\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\" onClick={()=>setCount(count+1)}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-plus\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n                        </td>\r\n                        <td>$45</td>\r\n                        <td>$90</td>\r\n                    </tr>\r\n                </tbody>\r\n                </table>\r\n                <div style={{fontWeight: 'bold', marginTop: '2rem'}}>Continue Shopping</div>\r\n            </div>\r\n\r\n            <div className='order--summary__container'>\r\n                <div>\r\n                   <div className='cart--items__header'>\r\n                        <h2>Order Summary</h2>\r\n                        <h2>2 Items</h2>\r\n                    </div>\r\n                    <div className='cart--items__price--summary'>\r\n                        <div className='pincode--container'>\r\n                           <InputBox\r\n                        placeholder='Search Pincode'\r\n                        icon='search'\r\n                        //value={searchvalue}\r\n                        //onChange={searchOnChange}\r\n                        style={{ backgroundColor: 'var(--pure-white)', border: '1px solid #d9d9d9' }}\r\n                        />\r\n                        <Button\r\n                            varient='primary'\r\n                            style={{\r\n                                //width: '100%',\r\n                                height: '4rem',\r\n                                justifyContent: 'center',\r\n                                padding: '0.5rem 1rem',\r\n                            }}\r\n                            label=\"Check Pincode\"\r\n                            //icon=\"arrow_right\"\r\n                            //onClick={toggleMenu_website}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className= 'cart--items__charges'>\r\n                            <div>Total MRP</div>\r\n                            <div>$90</div>\r\n                        </div>\r\n                        <div className= 'cart--items__charges'>\r\n                            <div>Total Discount</div>\r\n                            <div>-$10</div>\r\n                        </div>\r\n                        <div className= 'cart--items__charges'>\r\n                            <div>Shipping Charges</div>\r\n                            <div>Free</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className= 'cart--items__charges'>\r\n                        <div>Final Ammount</div>\r\n                        <div>$80</div>\r\n                    </div>\r\n                    <Button\r\n                    varient='danger'\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '4rem',\r\n                        justifyContent: 'center',\r\n                        padding: '0.5rem 1rem',\r\n                        marginTop: '1rem'\r\n                    }}\r\n                    label=\"Proceed to Checkout\"\r\n                    icon=\"arrow_right\"\r\n                    //onClick={toggleMenu_website}\r\n                    />\r\n                </div>\r\n                <div style={{marginTop: '1rem'}}>\r\n                   <div className='cart--items__header2'>\r\n                        <h3>Apply Coupon</h3>\r\n                    </div>\r\n                    <div className='pincode--container'>\r\n                            <InputBox\r\n                            placeholder='Enter Coupon'\r\n                            //icon='search'\r\n                            //value={searchvalue}\r\n                            //onChange={searchOnChange}\r\n                            style={{ backgroundColor: 'var(--pure-white)', border: '1px solid #d9d9d9' }}\r\n                            />\r\n                            <Button\r\n                            varient='primary'\r\n                            style={{\r\n                                //width: '100%',\r\n                                height: '4rem',\r\n                                justifyContent: 'center',\r\n                                padding: '0.5rem 1rem',\r\n                            }}\r\n                            label=\"Apply Coupon\"\r\n                            //icon=\"arrow_right\"\r\n                            //onClick={toggleMenu_website}\r\n                            />\r\n                        </div>\r\n                    <div className='cart--items__couponContainer'>\r\n                        <div className= 'cart--items__coupons'>\r\n                            <div>\r\n                                <div style={{fontWeight: 'bold'}}>FREEBEE</div>\r\n                                <p>Get a coupon worth $10</p>\r\n                            </div>\r\n\r\n                            <div>Apply</div>\r\n                        </div>\r\n                        <div className= 'cart--items__coupons'>\r\n                            <div>\r\n                                <div style={{fontWeight: 'bold'}}>FIRSTBUY</div>\r\n                                <p>Discount of $10</p>\r\n                            </div>\r\n\r\n                            <div>Apply</div>\r\n                        </div>\r\n                        <div className= 'cart--items__coupons'>\r\n                            <div>\r\n                                <div style={{fontWeight: 'bold'}}>FLAT10</div>\r\n                                <p>10% off on first order</p>\r\n                            </div>\r\n\r\n                            <div>Apply</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </Content>\r\n  )\r\n}\r\n\r\nexport default ViewCart","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\LoginScreenNew\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\RewardScreen\\RewardDescriptionModel.js",[],["1746","1747"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\productActions.js",["1748","1749","1750","1751"],"import axios from 'axios';\r\nimport {\r\n\tGET_ALL_PRODUCT_CATEGORY_REQUEST,\r\n\tGET_ALL_PRODUCT_CATEGORY_SUCCESS,\r\n\tGET_ALL_PRODUCT_CATEGORY_FAIL,\r\n\tADD_PRODUCT_CATEGORY_REQUEST,\r\n\tADD_PRODUCT_CATEGORY_SUCCESS,\r\n\tADD_PRODUCT_CATEGORY_FAIL,\r\n\tPRODUCT_CATEGORY_STATUS_REQUEST,\r\n\tPRODUCT_CATEGORY_STATUS_SUCCESS,\r\n\tPRODUCT_CATEGORY_STATUS_FAIL,\r\n\tDELETE_PRODUCT_CATEGORY_REQUEST,\r\n\tDELETE_PRODUCT_CATEGORY_SUCCESS,\r\n\tDELETE_PRODUCT_CATEGORY_FAIL,\r\n\tGET_ALL_PRODUCTS_REQUEST,\r\n\tGET_ALL_PRODUCTS_SUCCESS,\r\n\tGET_ALL_PRODUCTS_FAIL,\r\n\tGET_ONE_PRODUCT_REQUEST,\r\n\tGET_ONE_PRODUCT_SUCCESS,\r\n\tGET_ONE_PRODUCT_FAIL,\r\n\tCREATE_PRODUCT_REQUEST,\r\n\tCREATE_PRODUCT_SUCCESS,\r\n\tCREATE_PRODUCT_FAIL,\r\n\tCHANGE_PRODUCT_STATUS_REQUEST,\r\n\tCHANGE_PRODUCT_STATUS_SUCCESS,\r\n\tCHANGE_PRODUCT_STATUS_FAIL,\r\n\tDELETE_PRODUCT_REQUEST,\r\n\tDELETE_PRODUCT_SUCCESS,\r\n\tDELETE_PRODUCT_FAIL,\r\n\r\n\tADD_PRODUCT_STOCK_REQUEST,\r\n\tADD_PRODUCT_STOCK_SUCCESS,\r\n\tADD_PRODUCT_STOCK_FAIL,\r\n\tADD_PRODUCT_STOCK_RESET,\r\n\r\n\tGET_PRODUCT_ORDER_REQUEST,\r\n\tGET_PRODUCT_ORDER_SUCCESS,\r\n\tGET_PRODUCT_ORDER_FAIL,\r\n\tGET_PRODUCT_ORDER_RESET,\r\n\tCHANGE_ORDER_STATUS_REQUEST,\r\n\tCHANGE_ORDER_STATUS_SUCCESS,\r\n\tCHANGE_ORDER_STATUS_FAIL,\r\n\tGET_SIMILAR_PRODUCT_REQUEST,\r\n\tGET_SIMILAR_PRODUCT_SUCCESS,\r\n\tGET_SIMILAR_PRODUCT_FAIL,\r\n\tGET_ENABLED_CATEGORY_REQUEST,\r\n\tGET_ENABLED_CATEGORY_SUCCESS,\r\n\tGET_ENABLED_CATEGORY_FAIL,\r\n\tGET_CATEGORY_REQUEST,\r\n\tGET_CATEGORY_SUCCESS,\r\n\tGET_CATEGORY_FAIL,\r\n\tADD_ORDER_REQUEST,\r\n\tADD_ORDER_SUCCESS,\r\n\tADD_ORDER_FAIL,\r\n\tADD_ITEM_IN_CART,\r\n\tDELETE_ITEM_IN_CART,\r\n\tADJUST_ITEM_IN_CART,\r\n\tGET_PROD_LIST_CART,\r\n\tCHECKOUT,\r\n\tDELETE_ALL_ITEM_IN_CART,\r\n\tADD_ORDER_RESET,\r\n\tGET_ORDER_BY_USER_REQUEST,\r\n\tGET_ORDER_BY_USER_SUCCESS,\r\n\tGET_ORDER_BY_USER_FAIL,\r\n\tADD_APP_ORDER_REQUEST,\r\n\tADD_APP_ORDER_SUCCESS,\r\n\tADD_APP_ORDER_FAIL,\r\n\tGET_ORDER_BY_ID_REQUEST,\r\n\tGET_ORDER_BY_ID_SUCCESS,\r\n\tGET_ORDER_BY_ID_FAIL,\r\n\tADD_PAYMENT_REQUEST,\r\n\tADD_PAYMENT_SUCCESS,\r\n\tADD_PAYMENT_FAIL,\r\n} from '../constants/productConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\nexport const getAllProductCategoriesAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_PRODUCT_CATEGORY_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-category?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCT_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCT_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createProductCategoryAction = (id, categoryName) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_PRODUCT_CATEGORY_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst formData = id ? { categoryID: id, categoryName } : { categoryName };\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/create-category`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PRODUCT_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PRODUCT_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const productCategoryStatusAction = (id, enableStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_CATEGORY_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(\r\n\t\t\t`${BASE_URL}/product/enable-disable-category?categoryId=${id}`,\r\n\t\t\t{ enable: enableStatus },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CATEGORY_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CATEGORY_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteProductCategoryAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_PRODUCT_CATEGORY_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/product/delete-category?categoryId=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_PRODUCT_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_PRODUCT_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getAllProductsDashboardAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_PRODUCTS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-product-by-salon?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCTS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCTS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getAllProductsAction = (formData) => async (dispatch) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_PRODUCTS_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tformData.filter = formData.filter.filter(function (v) { return !!v; });\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/get-product-by-salon-for-website`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCTS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_PRODUCTS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getOneProductAction = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ONE_PRODUCT_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-website-product-by-id?productID=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ONE_PRODUCT_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ONE_PRODUCT_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createProductAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_PRODUCT_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/add-product`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_PRODUCT_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_PRODUCT_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const changeProductStatusAction = (id, productStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_PRODUCT_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(\r\n\t\t\t`${BASE_URL}/product/enable-disable-product?productID=${id}`,\r\n\t\t\t{ enable: productStatus },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_PRODUCT_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_PRODUCT_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteProductAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/product/delete-product?productID=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_PRODUCT_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_PRODUCT_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const addProductStockAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_PRODUCT_STOCK_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/add-stock`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PRODUCT_STOCK_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PRODUCT_STOCK_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const changeOrderStatusAction = (id, productStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_ORDER_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(\r\n\t\t\t`${BASE_URL}/product/change-order-status?orderID=${id}`,\r\n\t\t\t{ orderStatus: productStatus },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_ORDER_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_ORDER_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getProductOrderHistoryAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_PRODUCT_ORDER_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-order-by-salon?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PRODUCT_ORDER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PRODUCT_ORDER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getSimilarProductAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_SIMILAR_PRODUCT_REQUEST });\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-similar-website-product?productID=${formData.id}&offset=-330&name=${websiteInfo.data.salon.name}&pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SIMILAR_PRODUCT_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SIMILAR_PRODUCT_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getEnabledCategoryAction = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ENABLED_CATEGORY_REQUEST });\r\n\t\tconst { getPublicWebsite: { websiteInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-enabled-website-category?pageNumber=1&pageSize=1000&name=${websiteInfo.data.salon.name}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ENABLED_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ENABLED_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getCategoryAction = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_CATEGORY_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-category?pageNumber=1&pageSize=1000&filter`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addOrderAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_ORDER_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/add-order`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ORDER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ORDER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addProductsAction = (item) => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: GET_PROD_LIST_CART,\r\n\t\tpayload: item\r\n\t})\r\n}\r\nexport const addToCartAction = (itemID) => async (dispatch) => {\r\n\tdispatch({ type: ADD_ORDER_RESET })\r\n\tdispatch({\r\n\t\ttype: ADD_ITEM_IN_CART,\r\n\t\tpayload: {\r\n\t\t\tid: itemID\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const deleteItemCartAction = (itemID) => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: DELETE_ITEM_IN_CART,\r\n\t\tpayload: {\r\n\t\t\tid: itemID\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport const deleteAllItemCartAction = () => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: DELETE_ALL_ITEM_IN_CART,\r\n\t\tpayload: {}\r\n\t})\r\n}\r\n\r\n\r\nexport const adjustQtyCartAction = (itemID, value) => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: ADJUST_ITEM_IN_CART,\r\n\t\tpayload: {\r\n\t\t\tid: itemID,\r\n\t\t\tquantity: value\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const loadCurrentItemAction = (item) => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: ADJUST_ITEM_IN_CART,\r\n\t\tpayload: item\r\n\t})\r\n}\r\n\r\nexport const checkOutAction = (prices) => async (dispatch) => {\r\n\tdispatch({ type: ADD_ORDER_RESET })\r\n\tdispatch({\r\n\t\ttype: CHECKOUT,\r\n\t\tpayload: prices\r\n\t})\r\n}\r\n\r\n\r\nexport const getOrderHistoryAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ORDER_BY_USER_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-order-by-user?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ORDER_BY_USER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ORDER_BY_USER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addAppOrderAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_APP_ORDER_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/add-order`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_APP_ORDER_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_APP_ORDER_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getOrderByIdAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ORDER_BY_ID_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t// token: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/product/get-order-by-id?orderId=${formData}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ORDER_BY_ID_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ORDER_BY_ID_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const addPaymentAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_PAYMENT_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t// token: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/product/payment`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PAYMENT_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_PAYMENT_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\websiteSettingAction.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Content\\Content.js",["1752","1753","1754"],"import React, { useEffect, useState } from 'react'\r\nimport Styles from './Content.module.css'\r\nimport SideBarNew from '../SideBarNew/SideBarNew'\r\nimport HeaderNew from '../HeaderNew/HeaderNew';\r\nimport AppointmentList from '../AppointmentList';\r\nimport AppointmentSectionNew from '../AppointmentSectionNew/AppointmentSectionNew';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../../redux/actions/userActions';\r\nimport { getActivityListAction } from '../../redux/actions/appointmentAction';\r\nimport LogOut from '../LogoutModal';\r\nimport moment from \"moment\";\r\nimport { getRecentAppointmentReportAction, getUpcomingAppointmentReportAction } from '../../redux/actions/reportActions';\r\nimport SessionTimeoutModal from '../SessionTimeoutModal';\r\n\r\nconst Content = ({\r\n    children,\r\n    headerTitle,\r\n    switchView,\r\n    currentMenu,\r\n    addBtn,\r\n    addBtnText,\r\n    addBtnIcon,\r\n    addBtnClick,\r\n    search,\r\n    searchIcon,\r\n    searchPlaceholder,\r\n    searchvalue,\r\n    searchOnChange,\r\n    showAppointment = false,\r\n    showHeader = true,\r\n    websiteSettings = false,\r\n    stylistId,\r\n    addAppointment,\r\n    updateAppointment,\r\n    deleteAppointment,\r\n    handleAppointmentModal,\r\n    handleAppointmentModalClose,\r\n    appointmentModal,\r\n    handleSubscriptionModal,\r\n    handleSubscriptionModalClose,\r\n    subscriptionModal,\r\n    containerStyle,\r\n    listFilter,\r\n    listType,\r\n    getTypeList,\r\n    onTypeListChange }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [sideBar, setSideBar] = useState(true);\r\n    const [modalLogOutState, setModalLogOutState] = useState(false);\r\n    const [activeToggle, setActiveToggle] = useState(true);\r\n    const [logoutModal, setLogoutModal] = useState();\r\n\r\n    const userData = useSelector((state) => state.getUserInfo);\r\n\r\n    React.useEffect(() => {\r\n     const checkToken = async () => {\r\n           if (userData && userData.error) {\r\n             setLogoutModal(true);\r\n           }\r\n         };\r\n         checkToken();\r\n      }, [dispatch, userData]);\r\n\r\n      React.useEffect(() => {\r\n        const checkToken = async () => {\r\n              if (userData && userData.userInfo && userData.userInfo.status === false) {\r\n                setLogoutModal(true);\r\n              }\r\n            };\r\n            checkToken();\r\n         }, [dispatch, userData]);\r\n\r\n    const toggleMenu = () => {\r\n        // let navigation = document.querySelector(Styles.navigation);\r\n        let navigation = document.querySelector('.navigation');\r\n        let mainContent = document.querySelector('.mainContent');\r\n        let sidebarnav__button = document.querySelector('.sidebarnav__button');\r\n        let logo = document.querySelector('.navigation__logos');\r\n        navigation.classList.toggle('active');\r\n        mainContent.classList.toggle('mainContent__active');\r\n        sidebarnav__button.classList.toggle('sidebarnav__button_active');\r\n        logo.classList.toggle('active_logos');\r\n        setSideBar(!sideBar);\r\n    };\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const getActivity = useSelector((state) => state.getActivity);\r\n    const getUserInfo = useSelector((state) => state.getUserInfo);\r\n    const getRecentAppointment = useSelector((state) => state.getRecentAppointment);\r\n    const getUpcomingAppointment = useSelector((state) => state.getUpcomingAppointment);\r\n    useEffect(() => {\r\n        let timer = '';\r\n        let split = history.location.pathname.split('/');\r\n        if (getUserInfo &&\r\n            getUserInfo.userInfo &&\r\n            getUserInfo.userInfo.data &&\r\n            split[1] === 'stylist-sessions' &&\r\n            (getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'stylist')) {\r\n\r\n            let timer = setInterval(() => {\r\n                dispatch(getActivityListAction({\r\n                    stylistId: stylistId,\r\n                    fromDate: moment().toISOString()\r\n                }))\r\n                dispatch(getUpcomingAppointmentReportAction())\r\n                dispatch(getRecentAppointmentReportAction())\r\n            }, 25000);\r\n\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            clearTimeout(timer);\r\n            clearInterval(timer)\r\n        }\r\n    }, [stylistId, dispatch, history])\r\n\r\n    useEffect(() => {\r\n        dispatch(getActivityListAction({\r\n            stylistId: stylistId,\r\n            fromDate: moment().toISOString()\r\n        }))\r\n        dispatch(getUpcomingAppointmentReportAction())\r\n        dispatch(getRecentAppointmentReportAction())\r\n    }, [addAppointment,\r\n        updateAppointment,\r\n        deleteAppointment])\r\n\r\n    useEffect(\r\n        () => {\r\n            if (userLogin && !userLogin.userInfo) {\r\n                history.push('/login');\r\n            }\r\n        },\r\n        [userLogin, history]\r\n    );\r\n\r\n    const onLogOutModalClose = () => {\r\n        setModalLogOutState(false);\r\n    };\r\n\r\n    const onLogOutHandler = () => {\r\n        setModalLogOutState(false);\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='navigation'>\r\n                <div className='navigation__logos' >\r\n                    {/* <img src='./assets/favicon.png' alt='logo' style={{height:'7rem' , paddingLeft:'1rem' ,paddingTop:'1rem', position:'static' }} /> */}\r\n                </div>\r\n                <SideBarNew current={currentMenu} setModalLogOutState={setModalLogOutState} />\r\n                <button className='sidebarnav__button' onClick={toggleMenu}>\r\n                    <svg className='sidebarnav__icon'>\r\n                        <use xlinkHref={`/assets/sprite.svg#icon-${sideBar ? 'chevron-left' : 'chevron-right'}`} />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"mainContent\" style={{ background: websiteSettings ? 'white' : '#000000', padding: websiteSettings ? '1rem' : 'inherit'}}>\r\n                <div className='contentBox1'>\r\n                    {/* <button className='sidebarnav__button' onClick={toggleMenu}>\r\n                        <svg className='sidebarnav__icon'>\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-${sideBar ? 'chevron-left' : 'chevron-right'}`} />\r\n                        </svg>\r\n                    </button>               */}\r\n                    {showHeader&&<HeaderNew\r\n                    switchView={switchView}\r\n                        title={headerTitle}\r\n                        addBtn={addBtn}\r\n                        addBtnText={addBtnText}\r\n                        addBtnIcon={addBtnIcon}\r\n                        addBtnClick={addBtnClick}\r\n                        search={search}\r\n                        searchIcon={searchIcon}\r\n                        searchPlaceholder={searchPlaceholder}\r\n                        searchvalue={searchvalue}\r\n                        searchOnChange={searchOnChange}\r\n                        listFilter={listFilter}\r\n                        listType={listType}\r\n                        getTypeList={getTypeList}\r\n                        onTypeListChange={onTypeListChange} />}\r\n\r\n                    <div className={showAppointment ? Styles.content_dashboard : Styles.content} style={containerStyle}>\r\n                        <div className={Styles.content_box_dashboard} >\r\n                            {children}\r\n                        </div>\r\n                        {showAppointment && <div className='appointment_main' style={{\r\n                            overflowY: 'auto',\r\n                            overflowX: 'hidden'\r\n                        }}>\r\n                            {currentMenu !== 'dashboard' && <button className={activeToggle ? 'appointment__button' : 'appointment__button1'} onClick={() => setActiveToggle(!activeToggle)}>\r\n                                <svg className='sidebarnav__icon'>\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-${activeToggle ? 'chevron-right' : 'chevron-left'}`} />\r\n                                </svg>\r\n                            </button>}\r\n                            <div className={Styles.appointmentBox}>\r\n                                <AppointmentSectionNew\r\n                                    getUpcomingAppointment={getUpcomingAppointment}\r\n                                    getRecentAppointment={getRecentAppointment}\r\n                                    handleAppointmentModal={handleAppointmentModal}\r\n                                    handleSubscriptionModal={handleSubscriptionModal}\r\n                                    activeToggle={activeToggle}\r\n                                    getActivity={getActivity}\r\n                                /> :\r\n                                {/* <AppointmentList activeToggle={activeToggle} getActivity={getActivity} /> */}\r\n                            </div>\r\n                        </div>}\r\n                        <LogOut data={{ modalLogOutState, onLogOutModalClose, onLogOutHandler }} />\r\n                        <SessionTimeoutModal data={{logoutModal, onLogOutHandler}}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Content\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\RewardContent\\Content.js",["1755","1756","1757"],"import React, { useEffect, useState } from 'react'\r\nimport Styles from './RewardContent.module.css'\r\nimport SideBarNew from '../SideBarNew/SideBarNew'\r\nimport HeaderNew from '../HeaderNew/HeaderNew';\r\nimport AppointmentList from '../AppointmentList';\r\nimport AppointmentSectionNew from '../AppointmentSectionNew/AppointmentSectionNew';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../../redux/actions/userActions';\r\nimport { getActivityListAction } from '../../redux/actions/appointmentAction';\r\nimport LogOut from '../LogoutModal';\r\nimport moment from \"moment\";\r\nimport { getRecentAppointmentReportAction, getUpcomingAppointmentReportAction } from '../../redux/actions/reportActions';\r\nimport SessionTimeoutModal from '../SessionTimeoutModal';\r\n\r\nconst RewardContent = ({\r\n    children,\r\n    headerTitle,\r\n    switchView,\r\n    currentMenu,\r\n    addBtn,\r\n    addBtnText,\r\n    addBtnIcon,\r\n    addBtnClick,\r\n    search,\r\n    searchIcon,\r\n    searchPlaceholder,\r\n    searchvalue,\r\n    searchOnChange,\r\n    showAppointment = false,\r\n    showHeader = true,\r\n    websiteSettings = false,\r\n    stylistId,\r\n    addAppointment,\r\n    updateAppointment,\r\n    deleteAppointment,\r\n    handleAppointmentModal,\r\n    handleAppointmentModalClose,\r\n    appointmentModal,\r\n    handleSubscriptionModal,\r\n    handleSubscriptionModalClose,\r\n    subscriptionModal,\r\n    containerStyle,\r\n    listFilter,\r\n    listType,\r\n    getTypeList,\r\n    onTypeListChange }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [sideBar, setSideBar] = useState(true);\r\n    const [modalLogOutState, setModalLogOutState] = useState(false);\r\n    const [activeToggle, setActiveToggle] = useState(true);\r\n    const [logoutModal, setLogoutModal] = useState();\r\n\r\n    const userData = useSelector((state) => state.getUserInfo);\r\n\r\n    React.useEffect(() => {\r\n     const checkToken = async () => {\r\n           if (userData && userData.error) {\r\n             setLogoutModal(true);\r\n           }\r\n         };\r\n         checkToken();\r\n      }, [dispatch, userData]);\r\n\r\n      React.useEffect(() => {\r\n        const checkToken = async () => {\r\n              if (userData && userData.userInfo && userData.userInfo.status === false) {\r\n                setLogoutModal(true);\r\n              }\r\n            };\r\n            checkToken();\r\n         }, [dispatch, userData]);\r\n\r\n    const toggleMenu = () => {\r\n        // let navigation = document.querySelector(Styles.navigation);\r\n        let navigation = document.querySelector('.navigation');\r\n        let mainContent = document.querySelector('.mainContent');\r\n        let sidebarnav__button = document.querySelector('.sidebarnav__button');\r\n        let logo = document.querySelector('.navigation__logos');\r\n        navigation.classList.toggle('active');\r\n        mainContent.classList.toggle('mainContent__active');\r\n        sidebarnav__button.classList.toggle('sidebarnav__button_active');\r\n        logo.classList.toggle('active_logos');\r\n        setSideBar(!sideBar);\r\n    };\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const getActivity = useSelector((state) => state.getActivity);\r\n    const getUserInfo = useSelector((state) => state.getUserInfo);\r\n    const getRecentAppointment = useSelector((state) => state.getRecentAppointment);\r\n    const getUpcomingAppointment = useSelector((state) => state.getUpcomingAppointment);\r\n    useEffect(() => {\r\n        let timer = '';\r\n        let split = history.location.pathname.split('/');\r\n        if (getUserInfo &&\r\n            getUserInfo.userInfo &&\r\n            getUserInfo.userInfo.data &&\r\n            split[1] === 'stylist-sessions' &&\r\n            (getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'stylist')) {\r\n\r\n            let timer = setInterval(() => {\r\n                dispatch(getActivityListAction({\r\n                    stylistId: stylistId,\r\n                    fromDate: moment().toISOString()\r\n                }))\r\n                dispatch(getUpcomingAppointmentReportAction())\r\n                dispatch(getRecentAppointmentReportAction())\r\n            }, 25000);\r\n\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            clearTimeout(timer);\r\n            clearInterval(timer)\r\n        }\r\n    }, [stylistId, dispatch, history])\r\n\r\n    useEffect(() => {\r\n        dispatch(getActivityListAction({\r\n            stylistId: stylistId,\r\n            fromDate: moment().toISOString()\r\n        }))\r\n        dispatch(getUpcomingAppointmentReportAction())\r\n        dispatch(getRecentAppointmentReportAction())\r\n    }, [addAppointment,\r\n        updateAppointment,\r\n        deleteAppointment])\r\n\r\n    useEffect(\r\n        () => {\r\n            if (userLogin && !userLogin.userInfo) {\r\n                history.push('/login');\r\n            }\r\n        },\r\n        [userLogin, history]\r\n    );\r\n\r\n    const onLogOutModalClose = () => {\r\n        setModalLogOutState(false);\r\n    };\r\n\r\n    const onLogOutHandler = () => {\r\n        setModalLogOutState(false);\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='navigation'>\r\n                <div className='navigation__logos' >\r\n                    {/* <img src='./assets/favicon.png' alt='logo' style={{height:'7rem' , paddingLeft:'1rem' ,paddingTop:'1rem', position:'static' }} /> */}\r\n                </div>\r\n                <SideBarNew current={currentMenu} setModalLogOutState={setModalLogOutState} />\r\n                <button className='sidebarnav__button' onClick={toggleMenu}>\r\n                    <svg className='sidebarnav__icon'>\r\n                        <use xlinkHref={`/assets/sprite.svg#icon-${sideBar ? 'chevron-left' : 'chevron-right'}`} />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div className={Styles.mainContent} >\r\n                <div className='contentBox1'>\r\n                    {/* <button className='sidebarnav__button' onClick={toggleMenu}>\r\n                        <svg className='sidebarnav__icon'>\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-${sideBar ? 'chevron-left' : 'chevron-right'}`} />\r\n                        </svg>\r\n                    </button>               */}\r\n                    {showHeader && <HeaderNew\r\n                    switchView={switchView}\r\n                        title={headerTitle}\r\n                        addBtn={addBtn}\r\n                        addBtnText={addBtnText}\r\n                        addBtnIcon={addBtnIcon}\r\n                        addBtnClick={addBtnClick}\r\n                        search={search}\r\n                        searchIcon={searchIcon}\r\n                        searchPlaceholder={searchPlaceholder}\r\n                        searchvalue={searchvalue}\r\n                        searchOnChange={searchOnChange}\r\n                        listFilter={listFilter}\r\n                        listType={listType}\r\n                        getTypeList={getTypeList}\r\n                        onTypeListChange={onTypeListChange} />}\r\n\r\n                    <div className={showAppointment ? Styles.content_dashboard : Styles.content} style={containerStyle}>\r\n                        <div className={Styles.content_box_dashboard} >\r\n                            {children}\r\n                        </div>\r\n                        {showAppointment && <div className='appointment_main' style={{\r\n                            overflowY: 'auto',\r\n                            overflowX: 'hidden'\r\n                        }}>\r\n                            {currentMenu !== 'dashboard' && <button className={activeToggle ? 'appointment__button' : 'appointment__button1'} onClick={() => setActiveToggle(!activeToggle)}>\r\n                                <svg className='sidebarnav__icon'>\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-${activeToggle ? 'chevron-right' : 'chevron-left'}`} />\r\n                                </svg>\r\n                            </button>}\r\n                            <div className={Styles.appointmentBox}>\r\n                                <AppointmentSectionNew\r\n                                    getUpcomingAppointment={getUpcomingAppointment}\r\n                                    getRecentAppointment={getRecentAppointment}\r\n                                    handleAppointmentModal={handleAppointmentModal}\r\n                                    handleSubscriptionModal={handleSubscriptionModal}\r\n                                    activeToggle={activeToggle}\r\n                                    getActivity={getActivity}\r\n                                /> :\r\n                                {/* <AppointmentList activeToggle={activeToggle} getActivity={getActivity} /> */}\r\n                            </div>\r\n                        </div>}\r\n                        <LogOut data={{ modalLogOutState, onLogOutModalClose, onLogOutHandler }} />\r\n                        <SessionTimeoutModal data={{logoutModal, onLogOutHandler}}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RewardContent\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\index.js",["1758","1759","1760","1761","1762"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport VideosStyle from './Videos.module.css';\r\nimport {\r\n\tchangeVideoStatusAction,\r\n\tcreateVideoAction,\r\n\tdeleteVideoAction,\r\n\tgetAllVideosAction\r\n} from '../../redux/actions/videoActions';\r\nimport CreateVideo from './CreateVideo';\r\nimport {\r\n\tCHANGE_VIDEO_STATUS_RESET,\r\n\tCREATE_VIDEO_RESET,\r\n\tDELETE_VIDEO_RESET,\r\n\tGET_ALL_VIDEOS_RESET\r\n} from '../../redux/constants/videoConstants';\r\nimport DeleteVideo from './DeleteVideo';\r\nimport Pagination from '../../components/Pagination';\r\n\r\nconst VideosScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst [videoTitle, setVideoTitle] = useState({ value: '', error: '' });\r\n\tconst [videoDesc, setVideoDesc] = useState({ value: '', error: '' });\r\n\tconst [videoCategory, setVideoCategory] = useState({ value: '', error: '' });\r\n\tconst [videoStylist, setVideoStylist] = useState('');\r\n\tconst [videoStylistError, setVideoStylistError] = useState('');\r\n\r\n\t// const [videoPoster, setVideoPoster] = useState({ image: '', error: '' });\r\n\tconst [videoFile, setVideoFile] = useState({ video: '', error: '' });\r\n\tconst [videoId, setVideoId] = useState({ video: '', error: '' });\r\n\r\n\tconst getAllVideos = useSelector((state) => state.getAllVideos);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst createVideo = useSelector((state) => state.createVideo);\r\n\tconst changeVideoStatus = useSelector((state) => state.changeVideoStatus);\r\n\tconst deleteVideo = useSelector((state) => state.deleteVideo);\r\n\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (getUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'stylist' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')) {\r\n\t\t\t\tdispatch(getAllVideosAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tif (getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.role === \"stylist\") {\r\n\t\t\t\t\tsetVideoStylist(getUserInfo.userInfo.data._id);\r\n\t\t\t\t}\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_ALL_VIDEOS_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createVideo && createVideo.video && createVideo.video.status) {\r\n\t\t\t\ttoast.success(createVideo.video.message);\r\n\t\t\t\tdispatch(getAllVideosAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\thandleAddModalClose();\r\n\t\t\t\tdispatch({ type: CREATE_VIDEO_RESET });\r\n\t\t\t} else if (createVideo && createVideo.video && !createVideo.video.status) {\r\n\t\t\t\ttoast.error(createVideo.video.message);\r\n\t\t\t\tdispatch({ type: CREATE_VIDEO_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createVideo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeVideoStatus && changeVideoStatus.video && changeVideoStatus.video.status) {\r\n\t\t\t\ttoast.success(changeVideoStatus.video.message);\r\n\t\t\t\tdispatch(getAllVideosAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch({ type: CHANGE_VIDEO_STATUS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeVideoStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteVideo && deleteVideo.video && deleteVideo.video.status) {\r\n\t\t\t\ttoast.success(deleteVideo.video.message);\r\n\t\t\t\tdispatch(getAllVideosAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch({ type: DELETE_VIDEO_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteVideo, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetAddModalActive(false);\r\n\t\tsetVideoTitle({ value: '', error: '' });\r\n\t\tsetVideoDesc({ value: '', error: '' });\r\n\t\tsetVideoCategory({ value: '', error: '' });\r\n\t\tsetVideoStylist({ value: '', error: '' });\r\n\t\tsetVideoFile({ video: '', error: '' });\r\n\t};\r\n\r\n\tconst handleUploadVideo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!videoTitle.value || (videoTitle.value === '' && videoTitle.value.trim() === '')) {\r\n\t\t\tsetVideoTitle({ ...videoTitle, error: 'Please enter video title' });\r\n\t\t} else if (!videoDesc.value || (videoDesc.value === '' && videoDesc.value.trim() === '')) {\r\n\t\t\tsetVideoDesc({ ...videoDesc, error: 'Please enter video description' });\r\n\t\t} else if (!videoCategory.value || (videoCategory.value === '' && videoCategory.value.trim() === '')) {\r\n\t\t\tsetVideoCategory({ ...videoCategory, error: 'Please enter video description' });\r\n\t\t} else if (videoStylist === '' && videoStylist.trim() === '') {\r\n\t\t\tsetVideoStylistError('Please select video stylist');\r\n\t\t} else if (!videoFile.video || videoFile.video === '') {\r\n\t\t\tsetVideoFile({ ...videoFile, error: 'Please select a video' });\r\n\t\t} else if (!videoFile.video && !videoFile.video.type.startsWith('video/')) {\r\n\t\t\tsetVideoFile({ ...videoFile, error: 'Please select a valid video file' });\r\n\t\t} else {\r\n\t\t\tconst uploadedBy = getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.role;\r\n\t\t\tconst salon = getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data._id;\r\n\t\t\tlet data = new FormData();\r\n\t\t\tdata.append('videoTitle', videoTitle.value);\r\n\t\t\tdata.append('videoDescription', videoDesc.value);\r\n\t\t\tdata.append('videoCategory', videoCategory.value);\r\n\t\t\tdata.append('uploadedBy', uploadedBy);\r\n\t\t\tdata.append('salon', salon);\r\n\t\t\tdata.append('stylist', videoStylist);\r\n\t\t\tdata.append('video', videoFile.video);\r\n\t\t\tdispatch(createVideoAction(data));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableVideo = (id, enableStatus) => {\r\n\t\tdispatch(changeVideoStatusAction(id, enableStatus));\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteVideoAction(videoId));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllVideosAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllVideosAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='videos'\r\n\t\t\theaderTitle='List of all video contents'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'stylist'\r\n\t\t\t\t\t) ? true : false\r\n\t\t\t}\r\n\t\t\taddBtnText='Upload Video'\r\n\t\t\taddBtnIcon='upload'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Videos...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}\r\n\t\t>\r\n\t\t\t<div className={VideosStyle.videoCards}>\r\n\t\t\t\t{getAllVideos && getAllVideos.loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) :\r\n\t\t\t\t\tgetAllVideos &&\r\n\t\t\t\t\t\tgetAllVideos.videos &&\r\n\t\t\t\t\t\tgetAllVideos.videos.data &&\r\n\t\t\t\t\t\tgetAllVideos.videos.data.result &&\r\n\t\t\t\t\t\tgetAllVideos.videos.data.result.length > 0 ? (\r\n\t\t\t\t\t\tgetAllVideos.videos.data.result.map((res) => (\r\n\t\t\t\t\t\t\t<div className={VideosStyle.videoCard} key={res._id}>\r\n\t\t\t\t\t\t\t\t<Link to={`videos/${res._id}`} className={VideosStyle.videoCard__iImageIcon}>\r\n\t\t\t\t\t\t\t\t\t<img src='/assets/login-bg.jpg' alt='video thumb' className={VideosStyle.videoCard__iImageIcon_image} />\r\n\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCard__iImageIcon_icon_container}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCard__iImageIcon_icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-play_arrow`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<Link to={`videos/${res._id}`} className={VideosStyle.videoCard__title}>\r\n\t\t\t\t\t\t\t\t\t{res.videoTitle}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<h4 className={VideosStyle.videoCard__subTitle}>\r\n\t\t\t\t\t\t\t\t\t{res.videoDescription.length > 0 && res.videoDescription}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\r\n\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStats}>\r\n\t\t\t\t\t\t\t\t\t<p className={VideosStyle.videoCardCategory}>Shampoo </p>\r\n\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStatsCount}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardStatIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-favorite`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{res.likeCount}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardStatIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-visibility`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{res.viewCount}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardActions}>\r\n\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleEnableVideo(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardActionBtn}>\r\n\t\t\t\t\t\t\t\t\t\t{/* <button className={VideosStyle.videoCardAction} >\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardActionIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t</button> \r\n\t\t\t\t\t\t\t\t\t\t<button className={VideosStyle.videoCardAction} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetVideoId(res._id)\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardActionIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t</button>*/}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--delete' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetVideoId(res._id)\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Delete Video</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<div className='not_data_found'>\r\n\t\t\t\t\t\t\t\t<h1>No data found !</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t{totalPageSize > 1 &&\r\n\t\t\t\t\t<div className=\"tableContainer--paginater\">\r\n\t\t\t\t\t\t<Pagination list={getAllVideos.videos} onPageChange={handlePageChange} rowsPerPage={pageLimit} totalPageSize={totalPageSize} pageNumber={pageNumber} />\r\n\t\t\t\t\t</div>}\r\n\t\t\t</div>\r\n\r\n\t\t\t<CreateVideo\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\tvideoTitle,\r\n\t\t\t\t\tsetVideoTitle,\r\n\t\t\t\t\tvideoDesc,\r\n\t\t\t\t\tsetVideoDesc,\r\n\t\t\t\t\tvideoCategory,\r\n\t\t\t\t\tsetVideoCategory,\r\n\t\t\t\t\tvideoStylist,\r\n\t\t\t\t\tsetVideoStylist,\r\n\t\t\t\t\tvideoStylistError,\r\n\t\t\t\t\tsetVideoStylistError,\r\n\t\t\t\t\t// videoPoster,\r\n\t\t\t\t\t// setVideoPoster,\r\n\t\t\t\t\tvideoFile,\r\n\t\t\t\t\tsetVideoFile,\r\n\t\t\t\t\thandleSubmit: handleUploadVideo\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteVideo data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default VideosScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsCategoriesScreen\\index.js",["1763","1764","1765","1766","1767","1768"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tcreateProductCategoryAction,\r\n\tdeleteProductCategoryAction,\r\n\tgetAllProductCategoriesAction,\r\n\tproductCategoryStatusAction\r\n} from '../../redux/actions/productActions';\r\nimport {\r\n\tADD_PRODUCT_CATEGORY_RESET,\r\n\tDELETE_PRODUCT_CATEGORY_RESET,\r\n\tGET_ALL_PRODUCT_CATEGORY_RESET,\r\n\tPRODUCT_CATEGORY_STATUS_RESET\r\n} from '../../redux/constants/productConstants';\r\nimport ProductsCategories from './ProductsCategories';\r\n\r\nimport ProductCategoriesStyle from './ProductsCategories.module.css';\r\nimport Pagination from '../../components/Pagination';\r\nimport DeleteModal from '../../components/Modal/DeleteModal';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst ProductCategoriesScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst [categoryName, setCategoryName] = useState({ value: '', error: '' });\r\n\tconst [selectedCategory, setSelectedCategory] = useState({});\r\n\r\n\tconst getAllProductCategories = useSelector((state) => state.getAllProductCategories);\r\n\tconst createProductCategory = useSelector((state) => state.createProductCategory);\r\n\tconst deleteProductCategory = useSelector((state) => state.deleteProductCategory);\r\n\tconst productCategoryStatus = useSelector((state) => state.productCategoryStatus);\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ALL_PRODUCT_CATEGORY_RESET });\r\n\t\t\t};\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createProductCategory && createProductCategory.category && createProductCategory.category.status) {\r\n\t\t\t\ttoast.success(createProductCategory.category.message);\r\n\t\t\t\tdispatch({ type: ADD_PRODUCT_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\thandleAddModalClose();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createProductCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (productCategoryStatus && productCategoryStatus.category && productCategoryStatus.category.status) {\r\n\t\t\t\ttoast.success(productCategoryStatus.category.message);\r\n\t\t\t\tdispatch({ type: PRODUCT_CATEGORY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[productCategoryStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteProductCategory && deleteProductCategory.category && deleteProductCategory.category.status) {\r\n\t\t\t\ttoast.success(deleteProductCategory.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_PRODUCT_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteProductCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectedCategory && selectedCategory._id) {\r\n\t\t\t\tsetCategoryName({ value: selectedCategory.categoryName });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedCategory]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetCategoryName({ value: '', error: '' });\r\n\t\tsetSelectedCategory({});\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleEditButton = (categoryData) => {\r\n\t\tsetSelectedCategory(categoryData);\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (categoryName.value === '' && categoryName.value.trim() === '') {\r\n\t\t\tsetCategoryName({ ...categoryName, error: 'Please enter category name' });\r\n\t\t} else {\r\n\t\t\tif (selectedCategory && selectedCategory._id)\r\n\t\t\t\tdispatch(createProductCategoryAction(selectedCategory._id, categoryName.value));\r\n\t\t\telse dispatch(createProductCategoryAction(null, categoryName.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(productCategoryStatusAction(id, enableStatus));\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteProductCategoryAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllProductCategoriesAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(\r\n\t\t\tgetAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value })\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='products'\r\n\t\t\theaderTitle='Product Categories'\r\n\t\t\taddBtn={true}\r\n\t\t\taddBtnText='Add Category'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Categories...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{getAllProductCategories.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{getAllProductCategories &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data.result &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='tableContainer' style={{ height: '65vh' }}>\r\n\t\t\t\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Category Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Created At</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Active Status </th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th >Action</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{getAllProductCategories && getAllProductCategories.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.categoryName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{new Date(res.createdAt).toLocaleDateString()}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(res)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit Category Details</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Category</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\t\tlist={getAllProductCategories.categories}\r\n\t\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubTitle='We could not find any product category data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<ProductsCategories\r\n\t\t\t\tdata={{ addModalActive, handleAddModalClose, categoryName, setCategoryName, selectedCategory, handleSubmit }}\r\n\t\t\t/>\r\n\t\t\t<DeleteModal data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ProductCategoriesScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\index.js",["1769","1770","1771","1772","1773","1774","1775","1776","1777"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { changeStatusSalonAction, createNewSalonAction, deleteSalonAction, getSalonListAction } from '../../redux/actions/salonActions';\r\nimport DeleteSalon from './DeleteSalon';\r\nimport SalonData from './SalonData';\r\nimport CreateEditSalon from './CreateEditSalon';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport SalonsStyle from './Salon.module.css';\r\nimport { CHANGE_MENU_SETTINGS_RESET, CHANGE_STATUS_SALON_RESET, CREATE_NEW_SALON_RESET, DELETE_SALON_RESET, SALON_RESET } from '../../redux/constants/salonConstants';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validateOnlyNumber, validatePassword, validatePhone } from '../../utils/validators';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport { changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport MenuSettingUser from './MenuSettingUser';\r\nimport { changeMenuSettingsAction } from '../../redux/actions/salonActions';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../website/components/NoData';\r\nimport { cancelSubscriptionAction } from '../../redux/actions/subscriptionAction';\r\nimport CancelSubscription from './CancelSubscription';\r\nimport { GET_CANCEL_SUBSCRIPTION_RESET } from '../../redux/constants/SubscriptionConstants';\r\n\r\n\r\n\r\nconst SalonScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst createSalon = useSelector((state) => state.createSalon);\r\n\tconst changeStatusSalon = useSelector((state) => state.changeStatusSalon);\r\n\tconst deleteSalon = useSelector((state) => state.deleteSalon);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst changeAppMenuSetting = useSelector((state) => state.changeAppMenuSetting);\r\n\tconst cancelSubscription = useSelector((state) => state.cancelSubscription);\r\n\r\n\tconst salonList = useSelector((state) => state.salonList);\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [uploadFileData, setUploadFileData] = useState('');\r\n\tconst [uploadFileDataError, setUploadFileDataError] = useState('');\r\n\tconst [id, setSalonId] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [imageSrcError, setImageSrcError] = useState('');\r\n\tconst [modalSettingState, setModalSettingState] = useState(false);\r\n\tconst [appMenu, setAppMenu] = useState({});\r\n\tconst [modalCancelSubscription, setModalCancelSubscription] = useState(false);\r\n\r\n\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (getUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'admin')) {\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: SALON_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (salonList &&\r\n\t\t\t\tsalonList.userInfo &&\r\n\t\t\t\tsalonList.userInfo.status &&\r\n\t\t\t\tsalonList.userInfo.data.result.length > 0) {\r\n\t\t\t\tsetTotalPageSize(salonList.userInfo.data.totalPageSize)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salonList]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createSalon && createSalon.userInfo && createSalon.userInfo.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\ttoast.success(createSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createSalon && createSalon.userInfo && !createSalon.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_RESET });\r\n\t\t\t\ttoast.error(createSalon.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteSalon && deleteSalon.userInfo && deleteSalon.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteSalon && deleteSalon.userInfo && !deleteSalon.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatusSalon && changeStatusSalon.userInfo && changeStatusSalon.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatusSalon.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatusSalon && changeStatusSalon.userInfo && !changeStatusSalon.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatusSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t[changeStatusSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeAppMenuSetting && changeAppMenuSetting.userInfo && changeAppMenuSetting.userInfo.status) {\r\n\t\t\t\ttoast.success(changeAppMenuSetting.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_MENU_SETTINGS_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeAppMenuSetting && changeAppMenuSetting.userInfo && !changeAppMenuSetting.userInfo.status) {\r\n\t\t\t\ttoast.error(changeAppMenuSetting.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_MENU_SETTINGS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeAppMenuSetting, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cancelSubscription && cancelSubscription.data && cancelSubscription.data.status) {\r\n\t\t\t\ttoast.success(cancelSubscription.data.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tsetModalCancelSubscription(false);\r\n\t\t\t\tdispatch({ type: GET_CANCEL_SUBSCRIPTION_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (cancelSubscription && cancelSubscription.data && !cancelSubscription.data.status) {\r\n\t\t\t\ttoast.error(cancelSubscription.data.message);\r\n\t\t\t\tdispatch({ type: GET_CANCEL_SUBSCRIPTION_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cancelSubscription, dispatch]\r\n\t);\r\n\r\n\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSalonId('');\r\n\t\tsetEmail('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPassword('');\r\n\t\tsetPasswordError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetImageSrc('');\r\n\t\tsetImageSrcError('');\r\n\t\tsetSelectUpdateModel({})\r\n\t}\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileDataError('Please select files to upload');\r\n\t\t} else if (id === '' && !validatePassword(password)) {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet fileData = new FormData();\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tfileData.append('id', id);\r\n\t\t\t} else {\r\n\t\t\t\tfileData.append('password', password);\r\n\t\t\t}\r\n\r\n\t\t\tfileData.append('name', name);\r\n\t\t\tfileData.append('email', email);\r\n\t\t\tfileData.append('address', address);\r\n\t\t\tfileData.append('phone', unMasking(phone));\r\n\r\n\t\t\tfor (let i = 0; i < uploadFileData.length; i++) {\r\n\t\t\t\tfileData.append('image', uploadFileData[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(createNewSalonAction(fileData));\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteSalonAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getSalonListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(changeStatusSalonAction(d._id, {\r\n\t\t\t\"enable\": d.active ? true : false,\r\n\t\t}));\r\n\t};\r\n\r\n\r\n\tconst onCancelSubscriptionHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tdispatch(cancelSubscriptionAction(d._id));\r\n\t};\r\n\r\n\tconst onCancelSubscriptionModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalCancelSubscription(false);\r\n\t};\r\n\r\n\tconst handleEditModalSalon = (d) => {\r\n\t\tsetSalonId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetImageSrc(d.photo);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ 'id': d._id, type, 'email': d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onSettingHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tonSettingModalClose(false);\r\n\t\tdispatch(changeMenuSettingsAction(d._id, appMenu));\r\n\t};\r\n\r\n\r\n\tconst onSettingModalClose = () => {\r\n\t\tsetModalSettingState(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='salon'\r\n\t\t\theaderTitle='Salon'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'admin') ? true : false\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Salon'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search salon...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tsalonList.loading ?\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tsalonList &&\r\n\t\t\t\t\t\tsalonList.userInfo &&\r\n\t\t\t\t\t\tsalonList.userInfo.status &&\r\n\t\t\t\t\t\tsalonList.userInfo.data.result &&\r\n\t\t\t\t\t\tsalonList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<SalonData\r\n\t\t\t\t\t\t\t\tdata={salonList.userInfo.data.result}\r\n\t\t\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\thandleEditModalSalon={handleEditModalSalon}\r\n\t\t\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t\t\t\tsetModalSettingState={setModalSettingState}\r\n\t\t\t\t\t\t\t\tsetAppMenu={setAppMenu}\r\n\t\t\t\t\t\t\t\tsetModalCancelSubscription={setModalCancelSubscription}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{totalPageSize > 1 &&\r\n\t\t\t\t\t\t\t\t<div className=\"tableContainer--paginater\">\r\n\t\t\t\t\t\t\t\t\t<Pagination list={salonList.userInfo} onPageChange={handlePageChange} rowsPerPage={pageLimit} totalPageSize={totalPageSize} pageNumber={pageNumber} />\r\n\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\t\tsubTitle='We could not find any salon data.'\r\n\t\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\t<CreateEditSalon data={{\r\n\t\t\t\tshowAddModal,\r\n\t\t\t\thandleAddModalClose,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\taddress,\r\n\t\t\t\tphone,\r\n\t\t\t\tsetName,\r\n\t\t\t\tsetEmail,\r\n\t\t\t\tsetPhone,\r\n\t\t\t\tsetAddress,\r\n\t\t\t\tnameError,\r\n\t\t\t\taddressError,\r\n\t\t\t\tphoneError,\r\n\t\t\t\temailError,\r\n\r\n\t\t\t\tsetNameError,\r\n\t\t\t\tsetAddressError,\r\n\t\t\t\tsetPhoneError,\r\n\t\t\t\tsetEmailError,\r\n\t\t\t\tselectUpdateModel,\r\n\t\t\t\tsetSelectUpdateModel,\r\n\r\n\t\t\t\tpassword,\r\n\t\t\t\tsetPassword,\r\n\t\t\t\tpasswordError,\r\n\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\timageSrc,\r\n\t\t\t\tsetImageSrc,\r\n\t\t\t\timageSrcError,\r\n\t\t\t\tsetImageSrcError,\r\n\t\t\t\tsetUploadFileData,\r\n\t\t\t\tuploadFileDataError,\r\n\t\t\t\tsetUploadFileDataError,\r\n\t\t\t}} />\r\n\r\n\t\t\t<DeleteSalon data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t<MenuSettingUser data={{ appMenu, setAppMenu, modalSettingState, onSettingModalClose, onSettingHandler }} />\r\n\r\n\t\t\t<CancelSubscription data={{ modalCancelSubscription, onCancelSubscriptionModalClose, onCancelSubscriptionHandler }} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default SalonScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CheckinUserScreen\\index.js",["1778"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select, { components } from 'react-select';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Content from '../../components/Content';\r\nimport Button from '../../components/formInputs/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { checkIAction } from '../../redux/actions/attendanceActions';\r\nimport { getUserListAction } from '../../redux/actions/userActions';\r\nimport { CHECKINOUT_RESET } from '../../redux/constants/attendanceConstants';\r\n\r\nimport CheckinStyles from './CheckinUserScreen.module.css';\r\n\r\nconst CheckinUserScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [ data, setData ] = useState([]);\r\n\tconst [ userName, setUserName ] = useState(null);\r\n\tconst [ userId, setUserId ] = useState(null);\r\n\tconst [ stylistId, setStylistId ] = useState(null);\r\n\r\n\tconst { userInfo } = useSelector((state) => state.userLogin);\r\n\tconst userList = useSelector((state) => state.userList);\r\n\tconst checkInOut = useSelector((state) => state.checkInOut);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\t!data.length &&\r\n\t\t\t\tuserList &&\r\n\t\t\t\tuserList.userInfo &&\r\n\t\t\t\tuserList.userInfo.data &&\r\n\t\t\t\tuserList.userInfo.data.result &&\r\n\t\t\t\tuserList.userInfo.data.result.length > 0\r\n\t\t\t) {\r\n\t\t\t\tconst newList = userList.userInfo.data.result.map((item) => {\r\n\t\t\t\t\tconst phone = item.phone && '(phone: xxxx-xxx-' + item.phone.substring(item.phone.length - 4) + ')';\r\n\t\t\t\t\treturn { value: item._id, label: item.name + ' ' + phone, stylistId: item.stylist._id };\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newList);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ userList, data ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo && userInfo.data && userInfo.data.token) {\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: 1, pageSize: 50, filter: '' }));\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ userInfo, history, dispatch ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (checkInOut && !checkInOut.loading && checkInOut.userInfo && checkInOut.userInfo.status) {\r\n\t\t\t\ttoast.success(checkInOut.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHECKINOUT_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ checkInOut ]\r\n\t);\r\n\r\n\tconst onCheckInOutHandler = (userData) => {\r\n\t\tdispatch(checkIAction(userData));\r\n\t\tsetUserName('');\r\n\t\tsetUserId('');\r\n\t\tsetStylistId('');\r\n\t};\r\n\r\n\tconst handleChange = (user) => {\r\n\t\tsetUserName(user);\r\n\t\tsetUserId(user.value);\r\n\t\tsetStylistId(user.stylistId);\r\n\t};\r\n\r\n\tconst colourStyles = {\r\n\t\tmenuList: (styles) => ({\r\n\t\t\t...styles,\r\n\t\t\tbackgroundColor: 'hsl(210deg 25 % 6 %)'\r\n\t\t}),\r\n\t\toption: (styles, { isFocused, isSelected }) => ({\r\n\t\t\t...styles,\r\n\t\t\tcolor: isSelected ? '#fff' : '#000',\r\n\t\t\tbackgroundColor: isSelected ? '#ff9000' : '#fff',\r\n\t\t\tzIndex: 1\r\n\t\t}),\r\n\t\tmenu: (base) => ({\r\n\t\t\t...base,\r\n\t\t\tzIndex: 999,\r\n\t\t\tbackgroundColor: 'var(--dark-grey)',\r\n\t\t\tboxShadow: 'var(--box-shadow1)'\r\n\t\t})\r\n\t};\r\n\r\n\tconst NoOptionsMessage = (props) => {\r\n\t\treturn (\r\n\t\t\t<components.NoOptionsMessage {...props}>\r\n\t\t\t\t<span>No users found with name</span>\r\n\t\t\t</components.NoOptionsMessage>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content currentMenu='check-in'>\r\n\t\t\t<div className={CheckinStyles.contentSection}>\r\n\t\t\t\t{checkInOut && checkInOut.loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='check-in-header' style={{ flexDirection: 'column' }}>\r\n\t\t\t\t\t\t{getUserInfo &&\r\n\t\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\t\tgetUserInfo.userInfo.status &&\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data && (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={getUserInfo.userInfo.data.photo}\r\n\t\t\t\t\t\t\t\talt={getUserInfo.userInfo.data.name}\r\n\t\t\t\t\t\t\t\tclassName={CheckinStyles.logo}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tclassNamePrefix='select'\r\n\t\t\t\t\t\t\tstyles={colourStyles}\r\n\t\t\t\t\t\t\tcomponents={{ NoOptionsMessage }}\r\n\t\t\t\t\t\t\tplaceholder='Search and select your name'\r\n\t\t\t\t\t\t\tvalue={userName} // set selected value\r\n\t\t\t\t\t\t\toptions={data} // set list of the data\r\n\t\t\t\t\t\t\tonChange={handleChange} // assign onChange function\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel='Check-in'\r\n\t\t\t\t\t\t\ticon='checkin'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonCheckInOutHandler({ user: userId, stylist: stylistId });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default CheckinUserScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\LoginScreen\\index.js",["1779","1780","1781","1782"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../components/formInputs/Button';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { getAllEnabledSalonListAction } from '../../redux/actions/salonActions';\r\nimport { getUserByTokenAction, login, logout } from '../../redux/actions/userActions';\r\nimport './LoginScreen.css';\r\nimport LoginSkeleton from '../../components/Skeletons/LoginSkeleton';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo, loading, error } = userLogin;\r\n\r\n\tconst userData = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst [email, setEmail] = useState({ value: '', error: '' });\r\n\tconst [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserByTokenAction());\r\n\t\t\tdispatch(getAllEnabledSalonListAction());\r\n\t\t\tif (userInfo && userInfo.status) {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t} else if (userInfo && !userInfo.status) {\r\n\t\t\t\tsetPassword({ ...password, error: userInfo.message });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userInfo, error, dispatch]\r\n\t);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (email.value === '' && email.value.trim() === '') {\r\n\t\t\tsetEmail({ ...email, error: 'Please enter email address' });\r\n\t\t} else if (password.value === '' && password.value.trim() === '') {\r\n\t\t\tsetPassword({ ...password, error: 'Please enter your password' });\r\n\t\t} else if (password.value.length < 7) {\r\n\t\t\tsetPassword({ ...password, error: 'Password must be at least 8 characters' });\r\n\t\t} else {\r\n\t\t\tsetEmail({ ...email, error: '' });\r\n\t\t\tsetPassword({ ...password, error: '' });\r\n\t\t\tdispatch(login(email.value, password.value));\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div\r\n\t\t\t\tclassName='login_container'\r\n\t\t\t>\r\n\t\t\t\t<div className='login_container_side_image' style={{ backgroundImage: \"url('./assets/39084.png')\" }}>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className='login_container__form' >\r\n\t\t\t\t\t<img src='./assets/logo.png' alt='BookB Logo' className='login_container__logo' />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1 className='login_container__heading'>Sign in</h1>\r\n\t\t\t\t\t\t<h3 className='login_container__subheading'>Enter your credentials to log into your account.</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<LoginSkeleton />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tstyle={{ width: '25rem' }}\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\terrorMessage={email.error}\r\n\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tplaceholder='•••••••••••••'\r\n\t\t\t\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\terrorMessage={password.error}\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{loading && <Spinner />}\r\n\t\t\t\t\t\t\t<Button style={{\r\n\t\t\t\t\t\t\t\twidth: '25rem',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}} onClick={handleSubmit} label='Login' icon='arrow_right' />\r\n\r\n\t\t\t\t\t\t\t<div className='login__register'>\r\n\t\t\t\t\t\t\t\t<p className='login__copyright-text'>Don't have an account? </p>\r\n\t\t\t\t\t\t\t\t<Link to='register' className='login-register'>Register</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='login__copyright'>\r\n\t\t\t\t\t\t\t\t<p className='login__copyright-text'>&copy; {new Date(Date.now()).getFullYear()} BookB</p>\r\n\t\t\t\t\t\t\t\t<p className='login__copyright-text'>\r\n\t\t\t\t\t\t\t\t\tProudly Powered By{' '}\r\n\t\t\t\t\t\t\t\t\t<a href='https://www.the-algo.com/' target='_blank'>\r\n\t\t\t\t\t\t\t\t\t\tThe Algorithm\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\index.js",["1783","1784","1785","1786","1787","1788","1789"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Content from '../../components/Content';\r\nimport UsersData from './UsersData';\r\nimport DeleteUser from './DeleteUser';\r\nimport CreateUser from './CreateUser';\r\nimport {\r\n\tactiveUserAction,\r\n\taddMessageAction,\r\n\taddNotesAction,\r\n\tcreateNewUserAction,\r\n\tdeleteUserAction,\r\n\tgetUserListAction,\r\n\tlogout,\r\n\tlogOutUserAction\r\n} from '../../redux/actions/userActions';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { getStylistListAction } from '../../redux/actions/stylistActions';\r\nimport { STYLER_RESET } from '../../redux/constants/stylistConstants';\r\nimport {\r\n\tADD_MESSAGE_RESET,\r\n\tADD_NOTES_RESET,\r\n\tCHANGE_PASSWORD_USER_RESET,\r\n\tCHANGE_STATUS_USER_RESET,\r\n\tCREATE_NEW_USER_RESET,\r\n\tDELETE_USER_RESET,\r\n\tLOGOUT_USER_RESET\r\n} from '../../redux/constants/userConstants';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validateOnlyNumber, validatePhone } from '../../utils/validators';\r\nimport Pagination from '../../components/Pagination';\r\nimport AddNotes from './AddNotes';\r\nimport SendMessage from './SendMessage';\r\nimport NoData from '../../website/components/NoData';\r\nimport LogOutUser from '../../components/Modal/LogOutUser';\r\n\r\nconst UsersScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst userRole = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst userList = useSelector((state) => state.userList);\r\n\tconst stylistList = useSelector((state) => state.stylistList);\r\n\r\n\tconst createUser = useSelector((state) => state.createUser);\r\n\tconst deleteUser = useSelector((state) => state.deleteUser);\r\n\tconst changeStatusUser = useSelector((state) => state.changeStatusUser);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst sendMessageUser = useSelector((state) => state.sendMessageUser);\r\n\tconst addNotesUser = useSelector((state) => state.addNotesUser);\r\n\tconst logOutUser = useSelector((state) => state.logOutUser);\r\n\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalDoumentState, setModalDoumentState] = useState(false);\r\n\tconst [selectUpdateModelUser, setSelectUpdateModelUser] = useState({});\r\n\tconst [addNotesModal, setAddNotesModal] = useState(false);\r\n\tconst [sendMessageModal, setSendMessageModal] = useState(false)\r\n\tconst [modalLogOutUserState, setModalLogOutUserState] = useState(false);\r\n\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [_id, setUserId] = useState('');\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 15;\r\n\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\tconst [gender, setGender] = useState('');\r\n\tconst [genderError, setGenderError] = useState('');\r\n\tconst [notes, setNotes] = useState('');\r\n\tconst [notesError, setNotesError] = useState('');\r\n\tconst [messageTitle, setMessageTitle] = useState('');\r\n\tconst [messageTitleError, setMessageTitleError] = useState('');\r\n\tconst [messageHead, setMessageHead] = useState('');\r\n\tconst [messageError, setMessageError] = useState('')\r\n\tconst [stylist, setStylist] = useState('');\r\n\tconst [stylistIdError, setStylistError] = useState('');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userRole && userRole.userInfo && !userRole.userInfo.status && userRole.userInfo.code === \"invalid_token\") {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t\ttoast.error(userRole.userInfo.message);\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t} else if (userRole && userRole.userInfo && !userRole.userInfo.status && userRole.userInfo.message === \"jwt malformed\") {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t\ttoast.error(userRole.userInfo.message);\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t} else if (userRole && userRole.userInfo && userRole.userInfo.data && userRole.userInfo.data.role === 'user') {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, userRole, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userList && userList.userInfo && userList.userInfo.status && userList.userInfo.data.result.length > 0) {\r\n\t\t\t\tsetTotalPageSize(userList.userInfo.data.totalPageSize);\r\n\t\t\t} else if (userList && userList.userInfo && !userList.userInfo.status && userList.userInfo.code === \"invalid_token\") {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t\ttoast.error(userList.userInfo.message);\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userList]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo && userInfo.data && userInfo.data.token) {\r\n\t\t\t\tdispatch({ type: STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\t} else dispatch(getStylistListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t},\r\n\t\t[userInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createUser && createUser.userInfo && createUser.userInfo.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\ttoast.success(createUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_USER_RESET });\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createUser && createUser.userInfo && !createUser.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_USER_RESET });\r\n\t\t\t\ttoast.error(createUser.userInfo.message);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createUser, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (sendMessageUser && sendMessageUser.userInfo && sendMessageUser.userInfo.status) {\r\n\t\t\t\ttoast.success(sendMessageUser.userInfo.message)\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tdispatch({ type: ADD_MESSAGE_RESET });\r\n\t\t\t\thandleMessageClose();\r\n\t\t\t} else if (sendMessageUser && sendMessageUser.userInfo && !sendMessageUser.userInfo.status) {\r\n\t\t\t\ttoast.error(sendMessageUser.userInfo.message)\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tdispatch({ type: ADD_MESSAGE_RESET });\r\n\t\t\t\thandleMessageClose();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[sendMessageUser, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteUser && deleteUser.userInfo && deleteUser.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModelUser({});\r\n\t\t\t\tdispatch({ type: DELETE_USER_RESET });\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteUser && deleteUser.userInfo && !deleteUser.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_USER_RESET });\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteUser, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatusUser && changeStatusUser.userInfo && changeStatusUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatusUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModelUser({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_USER_RESET });\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatusUser && changeStatusUser.userInfo && !changeStatusUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatusUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_USER_RESET });\r\n\t\t\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeStatusUser, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModelUser({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changePasswordUser, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (sendMessageUser && sendMessageUser.userInfo && sendMessageUser.userInfo.status) {\r\n\t\t\t\ttoast.success(sendMessageUser.userInfo.message);\r\n\t\t\t\thandleMessageClose();\r\n\t\t\t\tdispatch({ type: ADD_MESSAGE_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(sendMessageUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: ADD_MESSAGE_RESET });\r\n\t\t\t\thandleMessageClose();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[sendMessageUser, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addNotesUser && addNotesUser.userInfo && addNotesUser.userInfo.status) {\r\n\t\t\t\ttoast.success(addNotesUser.userInfo.message);\r\n\t\t\t\thandleAddNotesModalClose();\r\n\t\t\t\tdispatch({ type: ADD_NOTES_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(addNotesUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: ADD_NOTES_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addNotesUser, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (logOutUser && logOutUser.userInfo && logOutUser.userInfo.status) {\r\n\t\t\t\ttoast.success(logOutUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModelUser({})\r\n\t\t\t\tdispatch({ type: LOGOUT_USER_RESET });\r\n\t\t\t} else if (logOutUser && logOutUser.userInfo && !logOutUser.userInfo.status) {\r\n\t\t\t\ttoast.error(logOutUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: LOGOUT_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[logOutUser, dispatch]\r\n\t);\r\n\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\tconst handleAddNotesModalClose = () => {\r\n\t\tsetAddNotesModal(false)\r\n\t}\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSelectUpdateModelUser({});\r\n\t\tsetEmail('');\r\n\t\tsetPhone('');\r\n\t\tsetStylist('');\r\n\t\tsetName('');\r\n\t\tsetStylist('');\r\n\t\tsetGender('');\r\n\t\tsetEmailError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetStylistError('');\r\n\t\tsetNameError('');\r\n\t\tsetNotes('');\r\n\t\tsetNotesError('')\r\n\t\t// setAge('');\r\n\t\t// setAgeError('');\r\n\t\t// setDOB('');\r\n\t\t// setDOBError('');\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (gender === '' && gender.trim() === '') {\r\n\t\t\tsetGenderError('Please select gender.');\r\n\t\t} else if (stylist === '' && stylist.trim() === '') {\r\n\t\t\tsetStylistError('Please select stylist');\r\n\t\t} else if (notes === '' && notes.trim() === '') {\r\n\t\t\tsetNotesError('Please add Notes');\r\n\t\t} else {\r\n\t\t\tif (_id !== '') {\r\n\t\t\t\tdispatch(createNewUserAction({ _id, name, email, gender, phone: unMasking(phone), stylist, clientNote: notes }));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(createNewUserAction({ name, email, gender, phone: unMasking(phone), stylist, clientNote: notes }));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t//Add Notes Handler\r\n\tconst handleNoteModal = (d) => {\r\n\t\tsetAddNotesModal(true)\r\n\t}\r\n\tconst handleNotesSubmit = () => {\r\n\t\tif (notes === '') {\r\n\t\t\tsetNotesError(\"Please add notes\")\r\n\t\t} else {\r\n\t\t\tdispatch(addNotesAction(notes))\r\n\t\t}\r\n\t}\r\n\r\n\t//Add Message Handler\r\n\tconst handleMessageClose = () => {\r\n\t\tsetSendMessageModal(false);\r\n\t\tsetMessageHead('');\r\n\t\tsetMessageTitle('')\r\n\t\tsetMessageError('');\r\n\t\tsetMessageTitleError('')\r\n\t\tsetUserId('');\r\n\t}\r\n\r\n\tconst handleMessageModal = (d) => {\r\n\t\tsetUserId(d._id)\r\n\t\tsetSendMessageModal(true)\r\n\t}\r\n\r\n\tconst handleMessageSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (messageHead === '') {\r\n\t\t\tsetMessageError('Please Enter Message')\r\n\t\t} else {\r\n\t\t\tlet data = {\r\n\t\t\t\tuserId: _id,\r\n\t\t\t\tmessage: messageHead\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(addMessageAction(data))\r\n\t\t}\r\n\t}\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteUserAction(selectUpdateModelUser._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onFormHandler = () => {\r\n\t\tsetModalDoumentState(false);\r\n\t};\r\n\r\n\tconst onFormModalClose = () => {\r\n\t\tsetModalDoumentState(false);\r\n\t\tsetSelectUpdateModelUser({});\r\n\t};\r\n\r\n\t// const onChangePwdUserHandler = () => {\r\n\t// \tlet d = selectUpdateModelUser;\r\n\t// \tlet type = 'byAdmin';\r\n\t// \tdispatch(changePasswordUserAction({ 'id': d._id, type, 'email': d.email }));\r\n\t// \tonChangePwdModalClose();\r\n\t// };\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getUserListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst handleEditModalUser = (d) => {\r\n\t\tsetUserId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetStylist(d.stylist._id);\r\n\t\tsetGender(d.gender);\r\n\t\tsetSelectUpdateModelUser(d);\r\n\t\tsetNotes(d.clientNote)\r\n\t\t// setAge(d.age);\r\n\t\t// setDOB(d.dob);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tactiveUserAction(d._id, {\r\n\t\t\t\tenable: d.active ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getUserListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\r\n\tconst onLogOutUserClose = () => {\r\n\t\tsetModalLogOutUserState(false);\r\n\t};\r\n\r\n\tconst onLogOutUserHandler = () => {\r\n\t\tlet d = selectUpdateModelUser;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(logOutUserAction({ id: d._id, type, email: d.email }));\r\n\t\tonLogOutUserClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='users'\r\n\t\t\theaderTitle='Users'\r\n\t\t\taddBtn={true}\r\n\t\t\taddBtnText='Add New User'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Users...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{userList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : userList &&\r\n\t\t\t\tuserList.userInfo &&\r\n\t\t\t\tuserList.userInfo.status &&\r\n\t\t\t\tuserList.userInfo.data.result &&\r\n\t\t\t\tuserList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<UsersData\r\n\t\t\t\t\t\tdata={userList.userInfo.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\tsetSelectUpdateModelUser={setSelectUpdateModelUser}\r\n\t\t\t\t\t\thandleEditModalUser={handleEditModalUser}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetModalDoumentState={setModalDoumentState}\r\n\t\t\t\t\t\taddNotesModal={addNotesModal}\r\n\t\t\t\t\t\tsetAddNotesModal={setAddNotesModal}\r\n\t\t\t\t\t\tsendMessageModal={sendMessageModal}\r\n\t\t\t\t\t\tsetSendMessageModal={setSendMessageModal}\r\n\t\t\t\t\t\thandleNoteModal={handleNoteModal}\r\n\t\t\t\t\t\thandleMessageModal={handleMessageModal}\r\n\t\t\t\t\t\tsetModalLogOutUserState={setModalLogOutUserState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={userList.userInfo}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any user data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateUser\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tphone,\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\temailError,\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetEmailError,\r\n\t\t\t\t\tgender,\r\n\t\t\t\t\tsetGender,\r\n\t\t\t\t\tsetGenderError,\r\n\t\t\t\t\tgenderError,\r\n\t\t\t\t\t// dob,\r\n\t\t\t\t\t// dobError,\r\n\t\t\t\t\t// setDOB,\r\n\t\t\t\t\t// setDOBError,\r\n\t\t\t\t\t// age,\r\n\t\t\t\t\t// setAge,\r\n\t\t\t\t\t// setAgeError,\r\n\t\t\t\t\t// ageError,\r\n\t\t\t\t\tstylist,\r\n\t\t\t\t\tsetStylist,\r\n\t\t\t\t\tsetStylistError,\r\n\t\t\t\t\tstylistIdError,\r\n\t\t\t\t\tstylistList,\r\n\t\t\t\t\tselectUpdateModelUser,\r\n\t\t\t\t\tsetSelectUpdateModelUser,\r\n\t\t\t\t\tnotes,\r\n\t\t\t\t\tsetNotes,\r\n\t\t\t\t\tnotesError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DeleteUser data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t\t<LogOutUser data={{ modalLogOutUserState, onLogOutUserClose, onLogOutUserHandler }} />\r\n\r\n\t\t\t<AddNotes data={{ addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit }} />\r\n\t\t\t<SendMessage data={{ messageHead, setMessageHead, messageTitle, setMessageTitle, messageError, messageTitleError, handleMessageClose, handleMessageSubmit, sendMessageModal, setSendMessageModal }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default UsersScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\index.js",["1790","1791","1792","1793","1794","1795","1796"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport AppversionStyle from './Appversion.module.css';\r\nimport AddAppVersion from './AddAppVersion';\r\nimport {\r\n\tchangeAppVersionStatusAction,\r\n\tcreateAppVersionAction,\r\n\tdeleteAppVersionAction,\r\n\tgetAllAppVersionAction\r\n} from '../../redux/actions/appVersionActions';\r\nimport {\r\n\tADD_APP_VERSION_RESET,\r\n\tCHANGE_APP_VERSION_STATUS_RESET,\r\n\tDELETE_APP_VERSION_RESET\r\n} from '../../redux/constants/appVersionConstants';\r\nimport DeleteAppVersion from './DeleteAppVersion';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../components/NoData';\r\nimport { getAllEnabledSalonListAction } from '../../redux/actions/salonActions';\r\n\r\nconst AppVersionScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\r\n\tconst appVersionList = useSelector((state) => state.appVersionList);\r\n\tconst createAppVersion = useSelector((state) => state.createAppVersion);\r\n\tconst changeAppVersionStatus = useSelector((state) => state.changeAppVersionStatus);\r\n\tconst deleteAppVersion = useSelector((state) => state.deleteAppVersion);\r\n\tconst salonEnabledList = useSelector((state) => state.salonEnabledList);\r\n\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [salonList, setSalonList] = useState([]);\r\n\r\n\tconst [versionTitleAndroid, setVersionTitleAndroid] = useState('');\r\n\tconst [versionTitleAndroidError, setVersionTitleAndroidError] = useState('');\r\n\r\n\tconst [androidStoreURL, setAndroidStoreURL] = useState('');\r\n\tconst [androidStoreURLError, setAndroidStoreURLError] = useState('');\r\n\r\n\tconst [versionTitleIOS, setVersionTitleIOS] = useState('');\r\n\tconst [versionTitleIOSError, setVersionTitleIOSError] = useState('');\r\n\r\n\tconst [iosStoreURL, setIOSStoreURL] = useState('');\r\n\tconst [iosStoreURLError, setIOSStoreURLError] = useState('');\r\n\r\n\tconst [versionDescription, setVersionDescription] = useState('');\r\n\tconst [versionDescriptionError, setVersionDescriptionError] = useState('');\r\n\tconst [isCompulsory, setIsCompulsory] = useState(false);\r\n\tconst [isCompulsoryError, setIsCompulsoryError] = useState('');\r\n\r\n\tconst [salon, setSalonId] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\tgetUserInfo.userInfo.data.role === 'admin'\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllEnabledSalonListAction());\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tsalonEnabledList &&\r\n\t\t\t\tsalonEnabledList.userInfo &&\r\n\t\t\t\tsalonEnabledList.userInfo.data &&\r\n\t\t\t\tsalonEnabledList.userInfo.data.result &&\r\n\t\t\t\tsalonEnabledList.userInfo.data.result.length > 0\r\n\t\t\t) {\r\n\t\t\t\tlet tmparr = salonEnabledList.userInfo.data.result.map((item) => ({ ...item, label: item.name, value: item._id }));\r\n\t\t\t\tsetSalonList(tmparr);\r\n\t\t\t\tif (salonList && salonList.length > 0) {\r\n\t\t\t\t\tsetSalonId(salonList[0]._id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salonEnabledList, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (salon && salon.trim() !== '') {\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salon, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createAppVersion && createAppVersion.category && createAppVersion.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(createAppVersion.category.message);\r\n\t\t\t\tdispatch({ type: ADD_APP_VERSION_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createAppVersion && createAppVersion.category && !createAppVersion.category.status) {\r\n\t\t\t\tdispatch({ type: ADD_APP_VERSION_RESET });\r\n\t\t\t\ttoast.error(createAppVersion.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createAppVersion, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeAppVersionStatus && changeAppVersionStatus.category && changeAppVersionStatus.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(changeAppVersionStatus.category.message);\r\n\t\t\t\tdispatch({ type: CHANGE_APP_VERSION_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeAppVersionStatus && changeAppVersionStatus.category && !changeAppVersionStatus.category.status) {\r\n\t\t\t\tdispatch({ type: CHANGE_APP_VERSION_STATUS_RESET });\r\n\t\t\t\ttoast.error(changeAppVersionStatus.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeAppVersionStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => { \r\n\t\t\tif (deleteAppVersion && deleteAppVersion.category && deleteAppVersion.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(deleteAppVersion.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_APP_VERSION_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteAppVersion && deleteAppVersion.category && !deleteAppVersion.category.status) {\r\n\t\t\t\tdispatch({ type: DELETE_APP_VERSION_RESET });\r\n\t\t\t\ttoast.error(deleteAppVersion.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteAppVersion, dispatch]\r\n\t);\r\n\r\n\tconst clearData = () => {\r\n\t\tsetVersionTitleAndroid('');\r\n\t\tsetVersionTitleAndroidError('');\r\n\t\tsetVersionTitleIOS('');\r\n\t\tsetVersionTitleIOSError('');\r\n\t\tsetVersionDescription('');\r\n\t\tsetVersionDescriptionError('');\r\n\t\tsetIsCompulsory(false);\r\n\t\tsetIsCompulsoryError('');\r\n\t\tsetSelectUpdateModel({});\r\n\r\n\t\tsetAndroidStoreURL('');\r\n\t\tsetAndroidStoreURLError('');\r\n\t\tsetIOSStoreURL('');\r\n\t\tsetIOSStoreURLError('');\r\n\t};\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (versionTitleAndroid === '' && versionTitleAndroid.trim() === '') {\r\n\t\t\tsetVersionTitleAndroidError('Please enter android version number');\r\n\t\t} else if (versionTitleIOS === '' && versionTitleIOS.trim() === '') {\r\n\t\t\tsetVersionTitleIOSError('Please enter ios version number');\r\n\t\t} else if (androidStoreURL === '' && androidStoreURL.trim() === '') {\r\n\t\t\tsetAndroidStoreURLError('Please enter package name');\r\n\t\t} else if (iosStoreURL === '' && iosStoreURL.trim() === '') {\r\n\t\t\tsetIOSStoreURLError('Please enter bundle ID');\r\n\t\t} else {\r\n\t\t\tdispatch(createAppVersionAction({\r\n\t\t\t\tsalon,\r\n\t\t\t\tversionTitleIOS,\r\n\t\t\t\tversionTitleAndroid,\r\n\t\t\t\tpackageName: androidStoreURL,\r\n\t\t\t\tbundleID: iosStoreURL,\r\n\t\t\t\tversionDescription,\r\n\t\t\t\tisCompulsory\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeAppVersionStatusAction(d._id, {\r\n\t\t\t\tsalon: salon,\r\n\t\t\t\tenable: d.enable ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteAppVersionAction(selectUpdateModel._id, salon));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSalonChange = async (item) => {\r\n\t\tsetSalonId(item);\r\n\t\t// var salon = salonList.find(item => item._id === item);\r\n\t\t// setAndroidStoreURL(salon.androidStoreURL);\r\n\t\t// setIOSStoreURL(salon.iosStoreURL);\r\n\t\t// dispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='appversion'\r\n\t\t\theaderTitle='App Version'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'admin' ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add App Version'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={false}\r\n\t\t\tsearchPlaceholder=''\r\n\t\t\tsearchIcon='search'\r\n\t\t\tlistFilter={true}\r\n\t\t\tlistType={salon}\r\n\t\t\tgetTypeList={salonList}\r\n\t\t\tonTypeListChange={(e) => { onSalonChange(e) }}\r\n\t\t>\r\n\t\t\t<div className='tableContainer' style={{ height: '65vh' }}>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tVersion( Android &nbsp;\r\n\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-android`} />\r\n\t\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tVersion( iOS &nbsp;\r\n\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-apple`} />\r\n\t\t\t\t\t\t\t\t</svg>)\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t\t<th>Compulsory</th>\r\n\t\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{appVersionList && appVersionList.loading ? (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colSpan='7' style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t) : appVersionList &&\r\n\t\t\t\t\t\t\tappVersionList.categories &&\r\n\t\t\t\t\t\t\tappVersionList.categories.data &&\r\n\t\t\t\t\t\t\tappVersionList.categories.data.length > 0 ? (\r\n\t\t\t\t\t\t\tappVersionList.categories.data.map((res, index) => (\r\n\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.versionTitleAndroid}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.versionTitleIOS}</td>\r\n\t\t\t\t\t\t\t\t\t<td className='text_wrap_desc'>{res.versionDescription}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.isCompulsory ? 'Yes' : 'No'}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={res._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{!res.enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Version</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colSpan='7' style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\t\t\t\tsubTitle='We could not find any app version. Please add one'\r\n\t\t\t\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\r\n\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\tlist={appVersionList.categories}\r\n\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddAppVersion\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\r\n\t\t\t\t\tversionTitleAndroid,\r\n\t\t\t\t\tsetVersionTitleAndroid,\r\n\t\t\t\t\tversionTitleAndroidError,\r\n\t\t\t\t\tsetVersionTitleAndroidError,\r\n\t\t\t\t\tversionTitleIOS,\r\n\t\t\t\t\tsetVersionTitleIOS,\r\n\t\t\t\t\tversionTitleIOSError,\r\n\t\t\t\t\tsetVersionTitleIOSError,\r\n\t\t\t\t\tversionDescription,\r\n\t\t\t\t\tsetVersionDescription,\r\n\t\t\t\t\tversionDescriptionError,\r\n\t\t\t\t\tsetVersionDescriptionError,\r\n\t\t\t\t\tisCompulsory,\r\n\t\t\t\t\tsetIsCompulsory,\r\n\t\t\t\t\tisCompulsoryError,\r\n\t\t\t\t\tsetIsCompulsoryError,\r\n\r\n\t\t\t\t\tandroidStoreURL,\r\n\t\t\t\t\tsetAndroidStoreURL,\r\n\t\t\t\t\tiosStoreURL,\r\n\t\t\t\t\tsetIOSStoreURL,\r\n\t\t\t\t\tandroidStoreURLError,\r\n\t\t\t\t\tsetAndroidStoreURLError,\r\n\t\t\t\t\tiosStoreURLError,\r\n\t\t\t\t\tsetIOSStoreURLError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteAppVersion data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default AppVersionScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\index.js",["1797","1798","1799"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tchangeStatusStylistAction,\r\n\tcreateNewStylistAction,\r\n\tcreateStylistSettingsAction,\r\n\tdeleteStylistAction,\r\n\tgetStylistListAction,\r\n\tgetStylistSettingsAction\r\n} from '../../redux/actions/stylistActions';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport { changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport {\r\n\tSTYLER_RESET,\r\n\tCHANGE_STATUS_STYLER_RESET,\r\n\tCREATE_NEW_STYLER_RESET,\r\n\tDELETE_STYLER_RESET,\r\n\tCREATE_STYLIST_SETTINGS_RESET\r\n} from '../../redux/constants/stylistConstants';\r\nimport CreateStylist from './CreateStylist';\r\nimport DeleteStylist from './DeleteStylist';\r\nimport StylistData from './StylistData';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport Pagination from '../../components/Pagination';\r\nimport StylistSettings from './StylistSettings';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst StylistsScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst stylistList = useSelector((state) => state.stylistList);\r\n\tconst createStylist = useSelector((state) => state.createStylist);\r\n\tconst changeStatustylist = useSelector((state) => state.changeStatustylist);\r\n\tconst deleteStylist = useSelector((state) => state.deleteStylist);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst addStylistSettings = useSelector((state) => state.addStylistSettings);\r\n\tconst getStylistSettings = useSelector((state) => state.getStylistSettings);\r\n\r\n\tconst [uploadFileData, setUploadFileData] = useState('');\r\n\tconst [uploadFileDataError, setUploadFileDataError] = useState('');\r\n\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [stylistSettingsModal, setStylistSettingsModal] = useState(false);\r\n\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tconst [id, setUserId] = useState('');\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [imageSrcError, setImageSrcError] = useState('');\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\t//stylist settings\r\n\tconst [serviceArray, setServiceArray] = useState({ value: '', error: '' });\r\n\tconst [recurringType, setRecurringType] = useState({ value: 'month', error: '' });\r\n\tconst [startTime, setStartTime] = useState({ value: '', error: '' });\r\n\tconst [endTime, setEndTime] = useState({ value: '', error: '' });\r\n\tconst [intervalTime, setIntervalTime] = useState({ value: '', error: '' });\r\n\tconst [isCompulsory, setIsCompulsory] = useState(false);\r\n\tconst [isCompulsoryError, setIsCompulsoryError] = useState('');\r\n\t// const [endTimeError, setEndTimeError] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'admin' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: STYLER_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createStylist && createStylist.userInfo && createStylist.userInfo.status) {\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.success(createStylist.userInfo.message);\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createStylist && createStylist.userInfo && !createStylist.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.error(createStylist.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[createStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addStylistSettings && addStylistSettings.userInfo && addStylistSettings.userInfo.status) {\r\n\t\t\t\tclearDataSettings();\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.success(addStylistSettings.userInfo.message);\r\n\t\t\t} else if (addStylistSettings && addStylistSettings.userInfo && !addStylistSettings.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.error(addStylistSettings.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[addStylistSettings, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteStylist && deleteStylist.userInfo && deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteStylist && deleteStylist.userInfo && !deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[deleteStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatustylist && changeStatustylist.userInfo && changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatustylist.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatustylist && changeStatustylist.userInfo && !changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatustylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeStatustylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (id === '' && password === '') {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileDataError('Please select files to upload');\r\n\t\t} else {\r\n\t\t\tlet fileData = new FormData();\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tfileData.append('id', id);\r\n\t\t\t} else {\r\n\t\t\t\tfileData.append('password', password);\r\n\t\t\t}\r\n\r\n\t\t\tfileData.append('name', name);\r\n\t\t\tfileData.append('email', email);\r\n\t\t\tfileData.append('address', address);\r\n\t\t\tfileData.append('phone', unMasking(phone));\r\n\t\t\tfor (let i = 0; i < uploadFileData.length; i++) {\r\n\t\t\t\tfileData.append('image', uploadFileData[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(createNewStylistAction(fileData));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tclearDataSettings();\r\n\t};\r\n\r\n\tconst clearDataSettings = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetStartTime({ value: '', error: '' })\r\n\t\tsetEndTime({ value: '', error: '' })\r\n\t\tsetRecurringType({ value: '', error: '' })\r\n\t\tsetServiceArray({ value: '', error: '' })\r\n\t\tsetIntervalTime({ value: '', error: '' })\r\n\t\tsetIsCompulsory('');\r\n\t\tsetIsCompulsoryError('');\r\n\t\tsetStylistSettingsModal(false);\r\n\t}\r\n\r\n\tconst settingsSubmitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet services = serviceArray.value;\r\n\t\tif (startTime.value === '' && startTime.value === '') {\r\n\t\t\tsetStartTime({ value: '', error: 'Please enter start time' });\r\n\t\t} else if (endTime.value === '' && endTime.value.trim() === '') {\r\n\t\t\tsetEndTime({ value: '', error: 'Please enter end time' });\r\n\t\t} else if (recurringType.value === '' && recurringType.value.trim() === '') {\r\n\t\t\tsetRecurringType({ ...recurringType, error: 'Please select recurring type' });\r\n\t\t} else if (intervalTime.value === '' && intervalTime.value.trim() === '') {\r\n\t\t\tsetIntervalTime({ value: '', error: 'Please enter interval time' });\r\n\t\t} else if (services === '' && !services.length) {\r\n\t\t\tsetServiceArray('Please select services');\r\n\t\t} else {\r\n\t\t\tlet serviceArrayTmp = [];\r\n\t\t\tfor (let i = 0; i < services.length; i++) {\r\n\t\t\t\tserviceArrayTmp.push(services[i]._id);\r\n\t\t\t}\r\n\t\t\t// makePublic: makePublic.value,\r\n\t\t\tdispatch(createStylistSettingsAction({\r\n\t\t\t\tid: selectUpdateModel._id,\r\n\t\t\t\trecurringType: recurringType.value,\r\n\t\t\t\tintervalTime: intervalTime.value,\r\n\t\t\t\tstartTime: startTime.value,\r\n\t\t\t\tendTime: endTime.value,\r\n\t\t\t\tservices: serviceArrayTmp.toString(),\r\n\t\t\t\tisBreakTimeCompulsory: isCompulsory\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = (d) => {\r\n\t\tdispatch(deleteStylistAction(selectUpdateModel._id));\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getStylistListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeStatusStylistAction(d._id, {\r\n\t\t\t\tenable: d.active ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetUserId('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPasswordError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetImageSrc('');\r\n\t\tsetImageSrcError('');\r\n\t\t// setCompany('');\r\n\t\t// setCompanyError('');\r\n\t};\r\n\r\n\tconst handleEditModalStylist = (d) => {\r\n\t\tsetUserId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetImageSrc(d.photo);\r\n\t\t// setCompany(d.company);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ id: d._id, type, email: d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='stylist'\r\n\t\t\theaderTitle='Stylist'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Stylist'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Stylists...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{stylistList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : stylistList &&\r\n\t\t\t\tstylistList.userInfo &&\r\n\t\t\t\tstylistList.userInfo.status &&\r\n\t\t\t\tstylistList.userInfo.data.result &&\r\n\t\t\t\tstylistList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<StylistData\r\n\t\t\t\t\t\tdata={stylistList.userInfo.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\thandleEditModalStylist={handleEditModalStylist}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t\tsetStylistSettingsModal={setStylistSettingsModal}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={stylistList.userInfo}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any stylist data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateStylist\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\taddress,\r\n\t\t\t\t\tphone,\r\n\r\n\t\t\t\t\tsetUserId,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetAddress,\r\n\t\t\t\t\tsetPassword,\r\n\r\n\t\t\t\t\temailError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\tpasswordError,\r\n\t\t\t\t\taddressError,\r\n\r\n\t\t\t\t\tsetEmailError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetAddressError,\r\n\t\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\t\t// companyList,\r\n\t\t\t\t\t// company,\r\n\t\t\t\t\t// setCompany,\r\n\t\t\t\t\t// companyError,\r\n\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\r\n\t\t\t\t\timageSrc,\r\n\t\t\t\t\tsetImageSrc,\r\n\t\t\t\t\timageSrcError,\r\n\t\t\t\t\tsetImageSrcError,\r\n\t\t\t\t\tsetUploadFileData,\r\n\t\t\t\t\tuploadFileDataError,\r\n\t\t\t\t\tsetUploadFileDataError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DeleteStylist data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t<StylistSettings\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tstartTime, setStartTime,\r\n\t\t\t\t\tendTime, setEndTime,\r\n\t\t\t\t\trecurringType, setRecurringType,\r\n\t\t\t\t\tintervalTime, setIntervalTime,\r\n\t\t\t\t\tserviceArray, setServiceArray,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\tgetStylistSettings,\r\n\t\t\t\t\tstylistSettingsModal,\r\n\t\t\t\t\thandleSettingsModalClose,\r\n\t\t\t\t\tsettingsSubmitHandler,\r\n\t\t\t\t\tisCompulsory,\r\n\t\t\t\t\tsetIsCompulsory,\r\n\t\t\t\t\tisCompulsoryError,\r\n\t\t\t\t\tsetIsCompulsoryError\r\n\t\t\t\t}} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default StylistsScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductDetailsScreen\\index.js",["1800","1801","1802","1803","1804"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ProductDetailStyle from './ProductDetails.module.css';\r\nimport ProductsStyle from '../ProductsScreen/Products.module.css';\r\nimport { getOneProductAction } from '../../redux/actions/productActions';\r\n\r\nconst ProductDetailsScreen = ({ match }) => {\r\n\tconst productId = match.params.id;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst getOneProduct = useSelector((state) => state.getOneProduct);\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tdispatch(getOneProductAction(productId));\r\n\r\n\t// \t\t// return () => {\r\n\t// \t\t// \tdispatch({ type: GET_ONE_PRODUCT_RESET });\r\n\t// \t\t// };\r\n\t// \t},\r\n\t// \t[productId, dispatch]\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<Content currentMenu='products' headerTitle='Product Details'>\r\n\t\t\t{getOneProduct && getOneProduct.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\tgetOneProduct &&\r\n\t\t\t\tgetOneProduct.product &&\r\n\t\t\t\tgetOneProduct.product.data &&\r\n\t\t\t\tgetOneProduct.product.data.result && (\r\n\t\t\t\t\t<div className={ProductDetailStyle.productDetails}>\r\n\t\t\t\t\t\t<div className={ProductDetailStyle.productDetails}>\r\n\t\t\t\t\t\t\t<div className={ProductDetailStyle.product_detail_screen_main_right}>\r\n\t\t\t\t\t\t\t\t<img src={getOneProduct.product.data.result.productImageURL} className={ProductDetailStyle.product_detail_screen_main_image} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={ProductDetailStyle.product_detail_screen_main_left}>\r\n\t\t\t\t\t\t\t\t<h1 style={{ fontWeight: 'bold', fontSize: '3rem' }} className={ProductsStyle.productCardStat}>{getOneProduct.product.data.result.productName}</h1>\r\n\r\n\t\t\t\t\t\t\t\t<h1 style={{ fontWeight: 'bold', fontSize: '3rem', marginBottom: '2rem', color: '#fff' }}>   <span>&#8226;</span> <span>&#8226;</span> <span>&#8226;</span> <span>&#8226;</span> </h1>\r\n\r\n\t\t\t\t\t\t\t\t<div className={ProductsStyle.productCardStat} style={{ marginBottom: '2rem' }}>\r\n\t\t\t\t\t\t\t\t\t<h3> $ {getOneProduct.product.data.result.productPrice}</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t<p>({getOneProduct.product.data.result.quantity} / {getOneProduct.product.data.result.stock})</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{ marginBottom: '2rem', fontSize: '1.5rem' }}>\t{getOneProduct.product.data.result.productDescription}</p>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ marginBottom: '2rem' }} className={ProductsStyle.productCardStatsCount}>\r\n\t\t\t\t\t\t\t\t\t<div className={ProductsStyle.productCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={ProductsStyle.productCardStatIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-archive`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<p>{getOneProduct.product.data.result.category.categoryName}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <Button label='Edit Product' icon='edit' /> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ProductDetailsScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\index.js",["1805","1806","1807","1808","1809","1810"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport ProductsStyle from './Products.module.css';\r\nimport {\r\n\taddProductStockAction,\r\n\tchangeProductStatusAction,\r\n\tcreateProductAction,\r\n\tdeleteProductAction,\r\n\tgetAllProductsDashboardAction\r\n} from '../../redux/actions/productActions';\r\nimport CreateProduct from './CreateEditProduct';\r\nimport {\r\n\tADD_PRODUCT_STOCK_RESET,\r\n\tCHANGE_PRODUCT_STATUS_RESET,\r\n\tCREATE_PRODUCT_RESET,\r\n\tDELETE_PRODUCT_RESET,\r\n\tGET_ALL_PRODUCTS_RESET\r\n} from '../../redux/constants/productConstants';\r\nimport ReadMore from '../../components/Readmore';\r\nimport DeleteProduct from './DeleteProduct';\r\nimport ProductDetailModal from './ProductDetailModal';\r\nimport AddStockProduct from './addStockProduct';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst ProductsScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalProductDetailState, setModalProductDetailState] = useState(false);\r\n\tconst [addStockModalActive, setAddStockModalActive] = useState(false);\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [productId, setProductId] = useState('');\r\n\tconst [productName, setProductName] = useState({ value: '', error: '' });\r\n\tconst [productDesc, setProductDesc] = useState({ value: '', error: '' });\r\n\tconst [productCategory, setProductCategory] = useState({ value: '', error: '' });\r\n\tconst [productPrice, setProductPrice] = useState({ value: '', error: '' });\r\n\tconst [actualPrice, setActualPrice] = useState({ value: '', error: '' });\r\n\tconst [rating, setRating] = useState({ value: '', error: '' });\r\n\tconst [productPoster, setProductPoster] = useState({ image: '', error: '' });\r\n\r\n\tconst [quantity, setQuantity] = useState({ value: '', error: '' });\r\n\tconst [type, setStockType] = useState({ value: 'credit', error: '' });\r\n\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\r\n\tconst getAllProducts = useSelector((state) => state.getAllProducts);\r\n\tconst createProduct = useSelector((state) => state.createProduct);\r\n\tconst changeProductStatus = useSelector((state) => state.changeProductStatus);\r\n\tconst deleteProduct = useSelector((state) => state.deleteProduct);\r\n\tconst addProductStock = useSelector((state) => state.addProductStock);\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_ALL_PRODUCTS_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createProduct && createProduct.product && createProduct.product.status) {\r\n\t\t\t\thandleAddModalClose();\r\n\t\t\t\ttoast.success(createProduct.product.message);\r\n\t\t\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch({ type: CREATE_PRODUCT_RESET });\r\n\t\t\t} else if (createProduct && createProduct.product && !createProduct.product.status) {\r\n\t\t\t\ttoast.success(createProduct.product.message);\r\n\t\t\t\tdispatch({ type: CREATE_PRODUCT_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createProduct, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeProductStatus && changeProductStatus.product && changeProductStatus.product.status) {\r\n\t\t\t\ttoast.success(changeProductStatus.product.message);\r\n\t\t\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch({ type: CHANGE_PRODUCT_STATUS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeProductStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteProduct && deleteProduct.product && deleteProduct.product.status) {\r\n\t\t\t\ttoast.success(deleteProduct.product.message);\r\n\t\t\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch({ type: DELETE_PRODUCT_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteProduct, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addProductStock && addProductStock.category && addProductStock.category.status) {\r\n\t\t\t\ttoast.success(addProductStock.category.message);\r\n\t\t\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\thandleAddStockModalClose();\r\n\t\t\t\tdispatch({ type: ADD_PRODUCT_STOCK_RESET });\r\n\t\t\t} else if (addProductStock && addProductStock.category && !addProductStock.category.status) {\r\n\t\t\t\ttoast.error(addProductStock.category.message);\r\n\t\t\t\tdispatch({ type: ADD_PRODUCT_STOCK_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addProductStock, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetAddModalActive(false);\r\n\t\tsetProductId();\r\n\t\tsetProductName({ value: '', error: '' });\r\n\t\tsetProductDesc({ value: '', error: '' });\r\n\t\tsetProductCategory({ value: '', error: '' });\r\n\t\tsetProductPoster({ value: '', error: '' });\r\n\t\tsetProductPrice({ value: '', error: '' });\r\n\t\tsetActualPrice({ value: '', error: '' });\r\n\t\tsetRating({ value: '', error: '' })\r\n\t\tsetImageSrc('');\r\n\t\tsetSearch('');\r\n\t};\r\n\r\n\tconst handleUploadProduct = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (productName.value === '' && productName.value.trim() === '') {\r\n\t\t\tsetProductName({ ...productName, error: 'Please enter product title' });\r\n\t\t} else if (productDesc.value === '' && productDesc.value.trim() === '') {\r\n\t\t\tsetProductDesc({ ...productDesc, error: 'Please enter product description' });\r\n\t\t} else if (productCategory.value === '' && productCategory.value.trim() === '') {\r\n\t\t\tsetProductCategory({ ...productCategory, error: 'Please enter product description' });\r\n\t\t} else if (productPrice.value === '' && productPrice.value.trim() === '') {\r\n\t\t\tsetProductPrice({ ...productPrice, error: 'Please enter product price' });\r\n\t\t} else if (actualPrice.value === '' && actualPrice.value.trim() === '') {\r\n\t\t\tsetActualPrice({ ...actualPrice, error: 'Please enter Actual Price' });\r\n\t\t} else if (rating.value === '' && rating.value.trim() === '') {\r\n\t\t\tsetRating({ ...rating, error: 'Please select rating' });\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetProductPoster({ ...productPoster, error: 'Please select product image' });\r\n\t\t} else {\r\n\t\t\tlet data = new FormData();\r\n\t\t\tif (productId !== '' && productId !== undefined) {\r\n\t\t\t\tdata.append('_id', productId);\r\n\t\t\t}\r\n\t\t\tdata.append('productName', productName.value);\r\n\t\t\tdata.append('productDescription', productDesc.value);\r\n\t\t\tdata.append('category', productCategory.value);\r\n\t\t\tdata.append('productPrice', productPrice.value);\r\n\t\t\tdata.append('actualPrice', actualPrice.value);\r\n\t\t\tdata.append('rating', rating.value)\r\n\t\t\tif (productPoster.value !== '') {\r\n\t\t\t\tdata.append('image', productPoster.value);\r\n\t\t\t}\r\n\t\t\tdispatch(createProductAction(data));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableProduct = (id, enableStatus) => {\r\n\t\tdispatch(changeProductStatusAction(id, enableStatus));\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetProductId('');\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteProductAction(productId));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onProductDetailModalClose = (d) => {\r\n\t\tsetProductId('');\r\n\t\tsetModalProductDetailState(false);\r\n\t};\r\n\r\n\tconst handleEditModalProduct = (d) => {\r\n\t\tsetProductId(d._id);\r\n\t\tsetProductName({ value: d.productName, error: '' });\r\n\t\tsetProductDesc({ value: d.productDescription, error: '' });\r\n\t\tsetProductCategory({ value: d.category._id, error: '' });\r\n\t\tsetImageSrc(d.productImageURL);\r\n\t\tsetProductPrice({ value: d.productPrice, error: '' });\r\n\t\tsetActualPrice({ value: (d && d.actualPrice), error: '' })\r\n\t\tsetRating({ value: (d && d.rating), error: '' })\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst addProductStockHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!quantity.value || quantity.value.trim() === '') {\r\n\t\t\tsetQuantity({ ...quantity, error: 'Please enter product quantity' });\r\n\t\t} else if (!type.value || type.value.trim() === '') {\r\n\t\t\tsetStockType({ ...type, error: 'Please enter product stock type' });\r\n\t\t} else {\r\n\t\t\tdispatch(\r\n\t\t\t\taddProductStockAction({\r\n\t\t\t\t\tquantity: quantity.value,\r\n\t\t\t\t\tproductID: productId,\r\n\t\t\t\t\ttype: type.value\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddStockModalClose = () => {\r\n\t\tsetAddStockModalActive(false);\r\n\t\tsetStockType('credit');\r\n\t\tsetQuantity('');\r\n\t\tsetProductId('');\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllProductsDashboardAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllProductsDashboardAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='products'\r\n\t\t\theaderTitle='List of all product contents'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Product'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Products...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\r\n\t\t\t<div className={ProductsStyle.productCards}>\r\n\t\t\t\t{getAllProducts && getAllProducts.loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : getAllProducts &&\r\n\t\t\t\t\tgetAllProducts.products &&\r\n\t\t\t\t\tgetAllProducts.products.data &&\r\n\t\t\t\t\tgetAllProducts.products.data.result &&\r\n\t\t\t\t\tgetAllProducts.products.data.result.length > 0 ? (\r\n\t\t\t\t\tgetAllProducts.products.data.result.map((res) => (\r\n\t\t\t\t\t\t<div className={ProductsStyle.productCard} key={res._id}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCard__iImageIcon}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetProductId(res._id);\r\n\t\t\t\t\t\t\t\t\tsetModalProductDetailState(true);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={res.productImageURL}\r\n\t\t\t\t\t\t\t\t\talt='product thumb'\r\n\t\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCard__iImageIcon_image}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetProductId(res._id);\r\n\t\t\t\t\t\t\t\t\tsetModalProductDetailState(true);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCard__title}>\r\n\t\t\t\t\t\t\t\t{res.productName.length > 10 ? res.productName.slice(0, 20) + '...' : res.productName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h4 className={ProductsStyle.productCard__subTitle}>\r\n\t\t\t\t\t\t\t\t<ReadMore>{res.productDescription.length > 0 && res.productDescription}</ReadMore>\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className={ProductsStyle.productCardStats}>\r\n\t\t\t\t\t\t\t\t<p className={ProductsStyle.productCardCategory}>{res.category.categoryName}</p>\r\n\t\t\t\t\t\t\t\t<div className={ProductsStyle.productCardStatsCount}>\r\n\t\t\t\t\t\t\t\t\t<div className={ProductsStyle.productCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t<h1 style={{ fontSize: '1.5rem', marginRight: '0.2rem' }}>$ {res.productPrice}</h1>{' '}\r\n\t\t\t\t\t\t\t\t\t\t<p style={{ fontSize: '1rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{res.quantity}/{res.stock}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={ProductsStyle.productCardActions}>\r\n\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleEnableProduct(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<div className={ProductsStyle.productCardActionBtn}>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCardAction}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetAddStockModalActive(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductId(res._id);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={ProductsStyle.productCardActionIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCardAction}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetAddModalActive(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductId(res._id);\r\n\t\t\t\t\t\t\t\t\t\t\thandleEditModalProduct(res);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={ProductsStyle.productCardActionIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={ProductsStyle.productCardAction}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductId(res._id);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={ProductsStyle.productCardActionIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NoData\r\n\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\tsubTitle='We could not find any product data.'\r\n\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\tlist={getAllProducts.products}\r\n\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<CreateProduct\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tproductId,\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\tproductName,\r\n\t\t\t\t\tsetProductName,\r\n\t\t\t\t\tproductDesc,\r\n\t\t\t\t\tsetProductDesc,\r\n\t\t\t\t\tproductCategory,\r\n\t\t\t\t\tsetProductCategory,\r\n\t\t\t\t\tproductPoster,\r\n\t\t\t\t\tsetProductPoster,\r\n\t\t\t\t\tproductPrice,\r\n\t\t\t\t\tsetProductPrice,\r\n\t\t\t\t\timageSrc,\r\n\t\t\t\t\tsetImageSrc,\r\n\t\t\t\t\tactualPrice,\r\n\t\t\t\t\tsetActualPrice,\r\n\t\t\t\t\trating,\r\n\t\t\t\t\tsetRating,\r\n\t\t\t\t\thandleSubmit: handleUploadProduct\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<ProductDetailModal data={{ productId, modalProductDetailState, onProductDetailModalClose, onDeleteHandler }} />\r\n\t\t\t<DeleteProduct data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\r\n\t\t\t<AddStockProduct\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tproductId,\r\n\r\n\t\t\t\t\tquantity,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tsetQuantity,\r\n\t\t\t\t\tsetStockType,\r\n\r\n\t\t\t\t\thandleSubmit: addProductStockHandler,\r\n\r\n\t\t\t\t\taddStockModalActive,\r\n\t\t\t\t\thandleAddStockModalClose\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ProductsScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SendNotification\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\index.js",["1811","1812","1813","1814","1815","1816"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tcreateVideoCategoryAction,\r\n\tdeleteVideoCategoryAction,\r\n\tgetAllVideoCategoriesAction,\r\n\tvideoCategoryStatusAction\r\n} from '../../redux/actions/videoActions';\r\nimport {\r\n\tADD_VIDEO_CATEGORY_RESET,\r\n\tDELETE_VIDEO_CATEGORY_RESET,\r\n\tGET_ALL_VIDEO_CATEGORY_RESET,\r\n\tVIDEO_CATEGORY_STATUS_RESET\r\n} from '../../redux/constants/videoConstants';\r\nimport CreateCategory from './CreateCategory';\r\n\r\nimport VideoCategoriesStyle from './VideoCategories.module.css';\r\nimport Pagination from '../../components/Pagination';\r\nimport DeleteVideoCategory from './DeleteVideoCategory';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst VideoCategoriesScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst [categoryName, setCategoryName] = useState({ value: '', error: '' });\r\n\tconst [selectedCategory, setSelectedCategory] = useState({});\r\n\r\n\tconst getAllVideoCategories = useSelector((state) => state.getAllVideoCategories);\r\n\tconst createVideoCategory = useSelector((state) => state.createVideoCategory);\r\n\tconst deleteVideoCategory = useSelector((state) => state.deleteVideoCategory);\r\n\tconst videoCategoryStatus = useSelector((state) => state.videoCategoryStatus);\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_ALL_VIDEO_CATEGORY_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createVideoCategory && createVideoCategory.category && createVideoCategory.category.status) {\r\n\t\t\t\ttoast.success(createVideoCategory.category.message);\r\n\t\t\t\tdispatch({ type: ADD_VIDEO_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\thandleAddModalClose();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createVideoCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (videoCategoryStatus && videoCategoryStatus.category && videoCategoryStatus.category.status) {\r\n\t\t\t\ttoast.success(videoCategoryStatus.category.message);\r\n\t\t\t\tdispatch({ type: VIDEO_CATEGORY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[videoCategoryStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteVideoCategory && deleteVideoCategory.category && deleteVideoCategory.category.status) {\r\n\t\t\t\ttoast.success(deleteVideoCategory.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_VIDEO_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteVideoCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectedCategory && selectedCategory._id) {\r\n\t\t\t\tsetCategoryName({ value: selectedCategory.categoryName });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedCategory]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetCategoryName({ value: '', error: '' });\r\n\t\tsetSelectedCategory({});\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleEditButton = (categoryData) => {\r\n\t\tsetSelectedCategory(categoryData);\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (categoryName.value === '' && categoryName.value.trim() === '') {\r\n\t\t\tsetCategoryName({ ...categoryName, error: 'Please enter category name' });\r\n\t\t} else {\r\n\t\t\tif (selectedCategory && selectedCategory._id)\r\n\t\t\t\tdispatch(createVideoCategoryAction(selectedCategory._id, categoryName.value));\r\n\t\t\telse dispatch(createVideoCategoryAction(null, categoryName.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(videoCategoryStatusAction(id, enableStatus));\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetCategoryName({ value: '', error: '' });\r\n\t\tsetSelectedCategory({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteVideoCategoryAction(selectedCategory._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllVideoCategoriesAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='videos'\r\n\t\t\theaderTitle='Video Categories'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add Category'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Categories...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{getAllVideoCategories.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{getAllVideoCategories &&\r\n\t\t\t\t\t\tgetAllVideoCategories.categories &&\r\n\t\t\t\t\t\tgetAllVideoCategories.categories.data &&\r\n\t\t\t\t\t\tgetAllVideoCategories.categories.data.result &&\r\n\t\t\t\t\t\tgetAllVideoCategories.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='tableContainer' style={{ height: '65vh' }}>\r\n\t\t\t\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Category Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <th>Created At</th> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Active Status</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{getAllVideoCategories && getAllVideoCategories.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllVideoCategories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllVideoCategories.categories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllVideoCategories.categories.data &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllVideoCategories.categories.data.result &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllVideoCategories.categories.data.result.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.categoryName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{new Date(res.createdAt).toLocaleDateString()}</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditButton(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit Category Details</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCategory(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Category</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\t\tlist={getAllVideoCategories.categories}\r\n\t\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubTitle='We could not find any video category data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateCategory\r\n\t\t\t\tdata={{ addModalActive, handleAddModalClose, categoryName, setCategoryName, handleSubmit, selectedCategory }}\r\n\t\t\t/>\r\n\t\t\t<DeleteVideoCategory data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default VideoCategoriesScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoDetailsScreen\\index.js",["1817"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Content from '../../components/Content';\r\nimport Button from '../../components/formInputs/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport { getOneVideoAction } from '../../redux/actions/videoActions';\r\n\r\nimport VideoDetailStyle from './VideoDetails.module.css';\r\nimport VideosStyle from '../VideosScreen/Videos.module.css';\r\nimport { GET_ONE_VIDEO_RESET } from '../../redux/constants/videoConstants';\r\n\r\nconst VideosDetailsScreen = ({ match }) => {\r\n\tconst videoId = match.params.id;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst getOneVideo = useSelector((state) => state.getOneVideo);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getOneVideoAction(videoId));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ONE_VIDEO_RESET });\r\n\t\t\t};\r\n\t\t},\r\n\t\t[videoId, dispatch]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Content currentMenu='videos' headerTitle='Lorem Ispum Video'>\r\n\t\t\t{getOneVideo && getOneVideo.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\tgetOneVideo &&\r\n\t\t\t\tgetOneVideo.video &&\r\n\t\t\t\tgetOneVideo.video.data &&\r\n\t\t\t\tgetOneVideo.video.data.result && (\r\n\t\t\t\t\t<div className={VideoDetailStyle.videoDetails}>\r\n\t\t\t\t\t\t<div className={VideoDetailStyle.videoDetailsSection}>\r\n\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStats}>\r\n\t\t\t\t\t\t\t\t<p className={VideosStyle.videoCardCategory}>\r\n\t\t\t\t\t\t\t\t\t{getOneVideo.video.data.result.videoCategory.categoryName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStatsCount}>\r\n\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardStatIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-favorite`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<p>{getOneVideo.video.data.result.likeCount}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={VideosStyle.videoCardStat}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={VideosStyle.videoCardStatIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-visibility`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<p>{getOneVideo.video.data.result.viewCount}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h4 className={VideoDetailStyle.videoDetails__subTitle}>\r\n\t\t\t\t\t\t\t\t{getOneVideo.video.data.result.videoDescription}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t{/* <Button label='Edit Video' icon='edit' /> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={VideoDetailStyle.videoDetailsSection}>\r\n\t\t\t\t\t\t\t<video width='600' height='400' controls>\r\n\t\t\t\t\t\t\t\t<source src={getOneVideo.video.data.result.videoUrl} type='video/mp4' />\r\n\t\t\t\t\t\t\t\tYour browser does not support the video tag.\r\n\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default VideosDetailsScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\index.js",["1818","1819","1820","1821","1822"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tcreateCompanyAction,\r\n\tdeleteCompanyAction,\r\n\tgetAllCompanyAction,\r\n\tchangeCompanyStatusAction\r\n} from '../../redux/actions/companyActions';\r\nimport {\r\n\tADD_COMPANY_RESET,\r\n\tCHANGE_COMPANY_STATUS_RESET,\r\n\tDELETE_COMPANY_RESET\r\n} from '../../redux/constants/companyConstants';\r\n\r\nimport { validateEmail, validatePhone } from '../../utils/validators';\r\nimport AddCompany from './AddCompany';\r\nimport DeleteCompany from './DeleteCompany';\r\nimport CompanyStyle from './Company.module.css';\r\n\r\nconst CompanyScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [ addModalActive, setAddModalActive ] = useState(false);\r\n\tconst [ selectUpdateModel, setSelectUpdateModel ] = useState({});\r\n\r\n\tconst companyList = useSelector((state) => state.companyList);\r\n\tconst createCompany = useSelector((state) => state.createCompany);\r\n\tconst deleteCompany = useSelector((state) => state.deleteCompany);\r\n\tconst changeCompanyStatus = useSelector((state) => state.changeCompanyStatus);\r\n\tconst [ modalDeleteState, setModalDeleteState ] = useState(false);\r\n\r\n\tconst [ id, setCompanyId ] = useState('');\r\n\r\n\tconst [ search, setSearch ] = useState('');\r\n\r\n\tconst [ name, setName ] = useState('');\r\n\tconst [ nameError, setNameError ] = useState('');\r\n\tconst [ email, setEmail ] = useState('');\r\n\tconst [ emailError, setEmailError ] = useState('');\r\n\tconst [ address, setAddress ] = useState('');\r\n\tconst [ addressError, setAddressError ] = useState('');\r\n\tconst [ phone, setPhone ] = useState('');\r\n\tconst [ phoneError, setPhoneError ] = useState('');\r\n\r\n\tconst [ totalPageSize, setTotalPageSize ] = useState(1);\r\n\tconst [ pageNumber, setPageNumber ] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ history, getUserInfo, dispatch ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createCompany && createCompany.category && createCompany.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(createCompany.category.message);\r\n\t\t\t\tdispatch({ type: ADD_COMPANY_RESET });\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createCompany && createCompany.category && !createCompany.category.status) {\r\n\t\t\t\tdispatch({ type: ADD_COMPANY_RESET });\r\n\t\t\t\ttoast.error(createCompany.category.message);\r\n\t\t\t} else if (deleteCompany && deleteCompany.category && deleteCompany.category.status) {\r\n\t\t\t\ttoast.success(deleteCompany.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_COMPANY_RESET });\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteCompany && deleteCompany.category && !deleteCompany.category.status) {\r\n\t\t\t\ttoast.error(deleteCompany.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_COMPANY_RESET });\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeCompanyStatus && changeCompanyStatus.category && changeCompanyStatus.category.status) {\r\n\t\t\t\ttoast.success(changeCompanyStatus.category.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_COMPANY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeCompanyStatus && changeCompanyStatus.category && !changeCompanyStatus.category.status) {\r\n\t\t\t\ttoast.error(changeCompanyStatus.category.message);\r\n\t\t\t\tdispatch({ type: CHANGE_COMPANY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ createCompany, changeCompanyStatus, deleteCompany, dispatch ]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleEditButton = (d) => {\r\n\t\tsetCompanyId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(d.phone);\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetSelectUpdateModel(d);\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetCompanyId('');\r\n\t\tsetEmail('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetSelectUpdateModel('');\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(phone)) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else {\r\n\t\t\tconst role = 'company';\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tdispatch(createCompanyAction({ id, name, address, email, phone, role }));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(createCompanyAction({ name, address, email, phone, role }));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(\r\n\t\t\tchangeCompanyStatusAction(id, {\r\n\t\t\t\tenable: enableStatus ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteCompanyAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllCompanyAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='stylist'\r\n\t\t\theaderTitle='Company'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add Company'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Company...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{companyList && companyList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{companyList &&\r\n\t\t\t\t\tcompanyList.categories &&\r\n\t\t\t\t\tcompanyList.categories.data &&\r\n\t\t\t\t\tcompanyList.categories.data.result &&\r\n\t\t\t\t\tcompanyList.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div className='tableContainer' style={{ height: '65vh' }}>\r\n\t\t\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Company Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th>Created At</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th>Active Status</th>\r\n\t\t\t\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{companyList && companyList.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tcompanyList &&\r\n\t\t\t\t\t\t\t\t\t\tcompanyList.categories &&\r\n\t\t\t\t\t\t\t\t\t\tcompanyList.categories.data &&\r\n\t\t\t\t\t\t\t\t\t\tcompanyList.categories.data.result &&\r\n\t\t\t\t\t\t\t\t\t\tcompanyList.categories.data.result.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\tcompanyList.categories.data.result.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.phone}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='text_wrap_desc'>{res.address}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.active}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.active);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(res)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit Company Details</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Company</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className='not_data_found'>\r\n\t\t\t\t\t\t\t<h1>No data found !</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<AddCompany\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tselectUpdateModel,\r\n\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\taddress,\r\n\t\t\t\t\tphone,\r\n\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tsetAddress,\r\n\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\taddressError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\temailError,\r\n\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetAddressError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetEmailError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteCompany data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default CompanyScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\index.js",["1823","1824","1825","1826"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Pagination from '../../components/Pagination';\r\nimport { changeOrderStatusAction, getProductOrderHistoryAction } from '../../redux/actions/productActions';\r\nimport OrderData from './OrderData';\r\nimport formStyle from './orders.module.css';\r\nimport ProductSummary from './ProductSummary';\r\nimport { CHANGE_ORDER_STATUS_RESET, GET_PRODUCT_ORDER_RESET } from '../../redux/constants/productConstants';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst OrderHistoryScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst orderList = useSelector((state) => state.orderList);\r\n\tconst changeOrderStatus = useSelector((state) => state.changeOrderStatus);\r\n\tconst [productSummaryList, setProductSummaryList] = useState({});\r\n\tconst [modalSummaryState, setModalSummaryState] = useState(false);\r\n\tconst [status, setStatus] = useState({ value: '', error: '' });\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 16;\r\n\tconst [search, setSearch] = useState('');\r\n\tconst statusList = [\r\n\t\t{\r\n\t\t\t_id: 1,\r\n\t\t\tname: 'Pending',\r\n\t\t\tvalue: 'Pending'\r\n\t\t},\r\n\t\t{\r\n\t\t\t_id: 2,\r\n\t\t\tname: 'Completed',\r\n\t\t\tvalue: 'Completed'\r\n\t\t}\r\n\t];\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getProductOrderHistoryAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_PRODUCT_ORDER_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\torderList &&\r\n\t\t\t\torderList.categories &&\r\n\t\t\t\torderList.categories.status &&\r\n\t\t\t\torderList.categories.data.result.length > 0\r\n\t\t\t) {\r\n\t\t\t\tsetTotalPageSize(orderList.categories.data.totalPageSize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[orderList]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeOrderStatus && changeOrderStatus.categories && changeOrderStatus.categories.status) {\r\n\t\t\t\ttoast.success(changeOrderStatus.categories.message);\r\n\t\t\t\tdispatch({ type: CHANGE_ORDER_STATUS_RESET });\r\n\t\t\t} else if (changeOrderStatus && changeOrderStatus.categories && !changeOrderStatus.categories.status) {\r\n\t\t\t\ttoast.error(changeOrderStatus.categories.message);\r\n\t\t\t\tdispatch({ type: CHANGE_ORDER_STATUS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeOrderStatus, dispatch]\r\n\t);\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getProductOrderHistoryAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getProductOrderHistoryAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst onSummaryModalClose = () => {\r\n\t\tsetModalSummaryState(false);\r\n\t};\r\n\r\n\tconst onChangeHandler = (res, status) => {\r\n\t\tdispatch(changeOrderStatusAction(res._id, status));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='products'\r\n\t\t\theaderTitle='Orders'\r\n\t\t\taddBtn={false}\r\n\t\t\taddBtnText='Add New Order'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => { }}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Orders...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{orderList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : orderList &&\r\n\t\t\t\torderList.categories &&\r\n\t\t\t\torderList.categories.status &&\r\n\t\t\t\torderList.categories.data.result &&\r\n\t\t\t\torderList.categories.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<OrderData\r\n\t\t\t\t\t\tdata={orderList.categories.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tstatusList={statusList}\r\n\t\t\t\t\t\tsetProductSummaryList={setProductSummaryList}\r\n\t\t\t\t\t\tsetModalSummaryState={setModalSummaryState}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetStatus={setStatus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={orderList.categories}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any order data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<ProductSummary data={{ modalSummaryState, onSummaryModalClose, productSummaryList }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default OrderHistoryScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\index.js",["1827","1828","1829","1830","1831","1832","1833","1834","1835"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify'\r\nimport Content from '../../components/Content/Content'\r\nimport Button from '../../components/formInputs/Button'\r\nimport { getAllProductsAction } from '../../redux/actions/productActions';\r\nimport { addWebsiteSettingAction, getWebsiteServiceAction, getWebsiteServiceActionById, getWebsiteSettingAction, getWebsiteSettingActionById, getWebsiteSlotsAction } from '../../redux/actions/websiteSettingAction'\r\nimport { ADD_WEBSITE_SETTING_RESET } from '../../redux/constants/websiteSettingConstant'\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport Footer from '../../website/components/Footer';\r\nimport Spinner from '../../website/components/WebsiteSpinner/Spinner';\r\nimport './Appearance.css'\r\nimport AppearanceAppointment from './AppearanceAppointment'\r\nimport AppearanceBanner from './AppearanceBanner'\r\nimport AppearanceBar from './AppearanceBar';\r\nimport AppearanceContact from './AppearanceContact';\r\nimport Navbar from './AppearanceNavbar'\r\nimport AppearanceProduct from './AppearanceProduct';\r\nimport AppearanceServices from './AppearanceServices'\r\nimport DeleteService from './DeleteService'\r\nimport LogoModal from './LogoModal'\r\nimport ServiceModal from './ServiceModal'\r\nimport WorkHourModal from './WorkHourModal'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst WeekDaysArray = [\r\n  { day: 'Sun', isAvailable: true, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Mon', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Tue', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Wed', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Thu', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Fri', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n  { day: 'Sat', isAvailable: false, slot: { startTime: \"\", endTime: \"\" } },\r\n]\r\n\r\n\r\nconst AppearanceScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [clickheader, setClickHeader] = useState(false);\r\n  const [clickSubHeader, setClickSubHeader] = useState(false)\r\n  const [serviceModal, setServiceModal] = useState(false)\r\n  const [logoModal, setLogoModal] = useState(false);\r\n  const [serviceDeleteModal, setServiceDeleteModal] = useState(false)\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [clickProduct, setClickProduct] = useState(false)\r\n  const [clickService, setCLickService] = useState(false)\r\n  const [clickHourText, setClickHourText] = useState(false);\r\n  const [clickHourPara, setClickHourPara] = useState(false)\r\n  const [clickContactText, setClickContactText] = useState(false);\r\n  const [clickContactPara, setClickContactPara] = useState(false)\r\n  const [clickAppearanceBarText, setClickAppearanceBarText] = useState(false);\r\n  const [clickAppearanceBarPara, setClickAppearanceBarPara] = useState(false)\r\n  const [header, setHeader] = useState(\"\")\r\n  const [subHeader, setSubHeader] = useState(\"\")\r\n  const [productText, setProductText] = useState(\"\");\r\n  const [serviceText, setServiceText] = useState(\"\");\r\n  const [hourText, setHourText] = useState(\"\");\r\n  const [hourPara, setHourPara] = useState(\"\")\r\n  const [contactText, setContactText] = useState(\"\");\r\n  const [contactPara, setContactPara] = useState(\"\")\r\n  const [name, setName] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [imageSrc, setImageSrc] = useState(\"./assets/favicon.png\");\r\n  const [imageSrcError, setImageSrcError] = useState('');\r\n  const [uploadFileData, setUploadFileData] = useState('');\r\n  const [uploadFileDataError, setUploadFileDataError] = useState('');\r\n  const [bannerImage, setBannerImage] = useState(\"./assets/styler.png\");\r\n  const [appointmentModal, setAppointmentModal] = useState(false)\r\n  const [weekDays, setWeekDays] = useState(WeekDaysArray);\r\n  const [clickButton, setClickButton] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Book Appointment\");\r\n  const [appearanceBarText, setAppearanceBarText] = useState(\"\");\r\n  const [appearanceBarPara, setAppearanceBarPara] = useState(\"\");\r\n  const [color,setColor] = useState(\"\");\r\n  const [colorPallete,showColorPallete] = useState(false)\r\n\r\n\r\n\r\n  const [bannerPhoto, setBannerPhoto] = useState('')\r\n  const [bannerPhotoError, setBannerPhotoError] = useState('');\r\n  const publicWebsite = useSelector((state) => state.publicWebsite);\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n  const getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n  const getAllProducts = useSelector((state) => state.getAllProducts);\r\n  const getWebsiteService = useSelector((state) => state.getWebsiteService);\r\n\r\n  useEffect(() => {\r\n    if (publicWebsite && publicWebsite.session && publicWebsite.session.status) {\r\n      toast.success(publicWebsite && publicWebsite.session && publicWebsite.session.message);\r\n      setAppointmentModal(false);\r\n      dispatch({ type: ADD_WEBSITE_SETTING_RESET })\r\n    } else if (publicWebsite && publicWebsite.session && !publicWebsite.session.status) {\r\n      toast.error(publicWebsite && publicWebsite.session && publicWebsite.session.message);\r\n      setAppointmentModal(false);\r\n      dispatch({ type: ADD_WEBSITE_SETTING_RESET })\r\n    }\r\n  }, [publicWebsite,dispatch]);\r\n  \r\n  useEffect(() => {\r\n    dispatch(getWebsiteSettingActionById(getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data._id))\r\n  }, [getUserInfo, publicWebsite, dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(getWebsiteServiceActionById(getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data._id))\r\n    const formData = {\r\n      \"pageNumber\": 1,\r\n      \"pageSize\": 9,\r\n      \"filter\": [],\r\n      \"minPrice\": 10,\r\n      \"maxPrice\": 10000,\r\n      'name': getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.name\r\n    }\r\n    dispatch(getAllProductsAction(formData));\r\n  }, [getUserInfo, dispatch, getPublicWebsite])\r\n\r\n  useEffect(() => {\r\n    if (getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.workHour && getPublicWebsite.websiteInfo.data.workHour.length > 0) {\r\n      setWeekDays(getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.workHour);\r\n      setHeader(getPublicWebsite.websiteInfo.data.websiteTitle)\r\n      setSubHeader(getPublicWebsite.websiteInfo.data.websiteSubTitle)\r\n      // setProductText(getPublicWebsite.websiteInfo.data.productText)\r\n      // setServiceText(getPublicWebsite.websiteInfo.data.serviceText)\r\n      // setHourText(getPublicWebsite.websiteInfo.data.hourText)\r\n      // setHourPara(getPublicWebsite.websiteInfo.data.hourPara)\r\n      // setContactText(getPublicWebsite.websiteInfo.data.contactText)\r\n      // setContactPara(getPublicWebsite.websiteInfo.data.contactPara)\r\n    } else {\r\n      setWeekDays(WeekDaysArray)\r\n    }\r\n  }, [getPublicWebsite])\r\n\r\n  useEffect(()=>{\r\n\t\tif(getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.status){\r\n\t\t\tsetColor(getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.bgColor)\r\n\t\t\t}\r\n\t},[])\r\n\r\n\r\n  const handleHeaderClick = () => {\r\n    setClickHeader(false)\r\n    if (header === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('websiteTitle', header);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubHeaderClick = () => {\r\n    setClickSubHeader(false)\r\n    if (subHeader === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('websiteSubTitle', subHeader);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleWorkHourSubmit = (e) => {\r\n    e.preventDefault();\r\n    let fileData = new FormData();\r\n    fileData.append('workHour', JSON.stringify(weekDays));\r\n    dispatch(addWebsiteSettingAction(fileData))\r\n  }\r\n\r\n  const handleEditService = (item) => {\r\n    setServiceModal(!serviceModal)\r\n    setName(item.serviceName);\r\n    setIcon(item.serviceIcon);\r\n    setDesc(item.ServiceDesc)\r\n  }\r\n\r\n\r\n  const handleChangeImage = (e) => {\r\n    e.preventDefault()\r\n    let fileData = new FormData();\r\n    fileData.append('websiteLogoImageURL', e.target.files[0]);\r\n    dispatch(addWebsiteSettingAction(fileData))\r\n  }\r\n\r\n  const handleChangeBannerImage = (e) => {\r\n    e.preventDefault()\r\n    let fileData = new FormData();\r\n    fileData.append('websiteBannerImageURL', e.target.files[0]);\r\n\r\n    dispatch(addWebsiteSettingAction(fileData))\r\n  }\r\n\r\n  const handleProductClick = () => {\r\n    setClickProduct(false)\r\n    if (productText === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('productText', productText);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleServiceClick = () => {\r\n    setCLickService(false)\r\n    if (serviceText === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('serviceText', serviceText);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleHourTextClick = () => {\r\n    setClickHourText(false)\r\n    if (hourText === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('hourText', hourText);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleHourParaClick = () => {\r\n    setClickHourPara(false)\r\n    if (hourPara === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('hourPara', hourPara);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleContactTextClick = () => {\r\n    setClickContactText(false)\r\n    if (contactText === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('contactText', contactText);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleContactParaClick = () => {\r\n    console.log(contactPara)\r\n    setClickContactPara(false)\r\n    if (contactPara === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('contactPara', contactPara);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleAppearanceBarTextClick = () => {\r\n    setClickAppearanceBarText(false)\r\n    if (appearanceBarText === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('appearanceBarText', appearanceBarText);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleAppearanceBarParaClick = () => {\r\n    setClickAppearanceBarPara(false)\r\n    if (appearanceBarPara === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('appearanceBarPara', appearanceBarPara);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  const handleGotoWebsite = () => {\r\n    window.open(`/#/salon/${getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data._id}`);\r\n    // history.push(`/salon/${getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.name}`);\r\n  }\r\n\r\n\r\n  const handleColorUpdate = () =>{\r\n    showColorPallete(false)\r\n    if (color === \"\") {\r\n      console.log(\"error\")\r\n    }\r\n    else {\r\n      let fileData = new FormData();\r\n      fileData.append('bgColor', color);\r\n      dispatch(addWebsiteSettingAction(fileData))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      headerTitle=\"Appearance\"\r\n      addBtn={true}\r\n      websiteSettings={true}\r\n      addBtnClick={handleGotoWebsite}\r\n      addBtnText=\"Go To Website\"\r\n      addBtnIcon=\"sphere\"\r\n      showAppointment={false}\r\n      containerStyle={{backgroundColor: 'white'}}\r\n    >\r\n      {getPublicWebsite && getPublicWebsite.loading ?\r\n        <Spinner />\r\n        :\r\n        <>\r\n        <div className='screen-container' style={{height:'10vh',marginBottom:'2rem',padding:'1rem',display:'flex',gap:'1rem',position:'relative'}}>\r\n          <div className='colorPalletText'>\r\n            <h3>Change Color</h3>\r\n            <div style={{display:'flex', gap:'1rem'}}>\r\n            <input onClick={()=>showColorPallete(!colorPallete)} onChange={(e)=>setColor(e.target.value)} type=\"text\" value={color} placeholder=\"Select color\"></input>\r\n            <Button\r\n          varient=\"primary\"\r\n          style={{\r\n            width: '10rem',\r\n            justifyContent: 'center',\r\n            backgroundColor:color,\r\n            height:'3rem'\r\n          }}\r\n          label=\"Update\"\r\n          // icon=\"arrow_right\"\r\n          onClick={handleColorUpdate}\r\n        />\r\n            </div>\r\n          </div>\r\n        {colorPallete &&  \r\n        <div className=\"colorPallete\" >\r\n        <SketchPicker\r\n        color={ color }\r\n        onChangeComplete={ (color)=>setColor(color.hex) }\r\n      /> \r\n      </div>}\r\n        </div>\r\n        <div className='screen-container'>\r\n          <Navbar\r\n            data={{\r\n              logoModal, setLogoModal,\r\n              imageSrc,\r\n              setImageSrc,\r\n              imageSrcError,\r\n              setImageSrcError,\r\n              uploadFileData,\r\n              setUploadFileData,\r\n              uploadFileDataError,\r\n              setUploadFileDataError,\r\n              handleChangeImage,\r\n              color:color,\r\n              logo: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteLogoImageURL\r\n            }} />\r\n          <AppearanceBar data={{\r\n            clickAppearanceBarPara,\r\n            setClickAppearanceBarPara,\r\n            appearanceBarText,\r\n            setAppearanceBarText,\r\n            appearanceBarPara,\r\n            setAppearanceBarPara,\r\n            clickAppearanceBarText,\r\n            setClickAppearanceBarText,\r\n            handleAppearanceBarParaClick,\r\n            handleAppearanceBarTextClick,\r\n            color:color,\r\n            title: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.appearanceBarText,\r\n            subTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.appearanceBarPara,\r\n          }} />\r\n          <AppearanceBanner\r\n            data={{\r\n              setClickHeader,\r\n              clickheader,\r\n              clickSubHeader,\r\n              setClickSubHeader,\r\n              handleHeaderClick,\r\n              handleSubHeaderClick,\r\n              setHeader,\r\n              setSubHeader,\r\n              clickButton,\r\n              setClickButton,\r\n              buttonText,\r\n              setButtonText,\r\n              bannerImage,\r\n              setBannerImage,\r\n              handleChangeBannerImage,\r\n              color:color,\r\n              bannerImg: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteBannerImageURL,\r\n              title: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteTitle,\r\n              subTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteSubTitle,\r\n            }} />\r\n          <AppearanceProduct\r\n            data={{\r\n              getAllProducts,\r\n              clickProduct,\r\n              setClickProduct,\r\n              productText,\r\n              setProductText,\r\n              handleProductClick,\r\n              color:color,\r\n              productTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.productText\r\n            }} />\r\n          <AppearanceServices\r\n            data={{\r\n              serviceModal,\r\n              setServiceModal,\r\n              setIsUpdate,\r\n              serviceDeleteModal,\r\n              setServiceDeleteModal,\r\n              handleEditService,\r\n              getWebsiteService,\r\n              clickService,\r\n              setCLickService,\r\n              serviceText,\r\n              setServiceText,\r\n              handleServiceClick,\r\n              color:color,\r\n              serviceTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.serviceText\r\n            }} />\r\n          <AppearanceAppointment data={{\r\n            appointmentModal, setAppointmentModal, getPublicWebsite,\r\n            clickHourText,\r\n            setClickHourText,\r\n            clickHourPara,\r\n            setClickHourPara,\r\n            hourText,\r\n            setHourText,\r\n            hourPara,\r\n            setHourPara,\r\n            handleHourTextClick,\r\n            handleHourParaClick,\r\n            color:color,\r\n            phone: getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && inputPhoneMasking(getUserInfo.userInfo.data.phone),\r\n            hourTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.hourText,\r\n            hourSubTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.hourPara,\r\n          }} />\r\n          <AppearanceContact\r\n            data={{\r\n              clickContactText,\r\n              setClickContactText,\r\n              clickContactPara,\r\n              setClickContactPara,\r\n              contactText,\r\n              setContactText,\r\n              contactPara,\r\n              setContactPara,\r\n              handleContactTextClick,\r\n              handleContactParaClick,\r\n              color:color,\r\n              contactTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.contactText,\r\n              contactSubTitle: getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.contactPara,\r\n            }} />\r\n          <Fragment>\r\n            {/* <div className=\"chat_section\" id=\"contactus\">\r\n            <h1 className=\"servies_main_heading\">LET'S CHAT!</h1>\r\n            <p className=\"chat_subheading\">We would love to learn about your project</p>\r\n          </div> */}\r\n            {/* <div className=\"chat_contact_details\">\r\n            <div className=\"calling\">\r\n              <div className=\"our_services_logo\">\r\n                <svg className=\"filter__input--icon1\">\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-phone`} />\r\n                </svg>\r\n              </div>\r\n              <div className='our_services_appearance_subheading'>\r\n                <div className='appearnce-button-container'>\r\n                <button className='appearance-btn' onClick={()=>setClickContact(!clickContact)}>\r\n                  <svg className=\"table__button--icon\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                  </svg>\r\n                </button>\r\n                {clickContact && <button className='appearance-btn' onClick={handleContactClick}>\r\n                SUBMIT\r\n                </button>}\r\n              </div>\r\n                <h1 >\r\n                  Call us at</h1>\r\n                <h1>\r\n                  {getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && inputPhoneMasking(getUserInfo.userInfo.data.phone)}\r\n                </h1>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"calling\">\r\n              <div className=\"our_services_logo\">\r\n                <svg className=\"filter__input--icon1\">\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-pin`} />\r\n                </svg>\r\n              </div>\r\n              <div className='our_services_appearance_subheading'>\r\n                <div className='appearnce-button-container'>\r\n                <button className='appearance-btn'  onClick={() => setClickAddress(!clickAddress)}>\r\n                  <svg className=\"table__button--icon\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                  </svg>\r\n                </button>\r\n                {clickAddress && <button className='appearance-btn' onClick={handleAddressClick}>\r\n                SUBMIT\r\n                </button>}\r\n              </div>\r\n                <h1>\r\n                  {getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.address}\r\n                </h1></div>\r\n            </div>\r\n            <div className=\"calling\">\r\n              <div className=\"our_services_logo\">\r\n                <svg className=\"filter__input--icon1\">\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-email`} />\r\n                </svg>\r\n              </div>\r\n              <div className='our_services_appearance_subheading'>\r\n                <div className='appearnce-button-container'>\r\n                <button className='appearance-btn'  onClick={() => setClickEmail(!clickEmail)}>\r\n                  <svg className=\"table__button--icon\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                  </svg>\r\n                </button>\r\n                {clickEmail && <button className='appearance-btn' onClick={handleEmailClick}>\r\n                SUBMIT\r\n                </button>}\r\n              </div>\r\n                <h1>\r\n                  Email us at </h1>\r\n                <h1>\r\n                  {getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.data && getUserInfo.userInfo.data.email}\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n\r\n            <Footer\r\n            color={color}\r\n              phone={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.phone}\r\n              address={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.address}\r\n              email={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.email}\r\n              salonName={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}\r\n            />\r\n          </Fragment>\r\n          <div className=\"chat_section\" id=\"contactus\">\r\n          </div>\r\n        </div>\r\n        </>\r\n        \r\n      }\r\n      <ServiceModal\r\n        serviceModal={serviceModal}\r\n        setServiceModal={setServiceModal}\r\n        isUpdate={isUpdate}\r\n        name={name}\r\n        icon={icon}\r\n        desc={desc}\r\n      />\r\n      <DeleteService\r\n        serviceModal={serviceDeleteModal}\r\n        setServiceModal={setServiceDeleteModal}\r\n      />\r\n      <LogoModal\r\n        data={{ logoModal, setLogoModal }}\r\n      />\r\n      <WorkHourModal\r\n        data={{ appointmentModal, setAppointmentModal, weekDays, setWeekDays, handleWorkHourSubmit }}\r\n      />\r\n\r\n    </Content>\r\n  )\r\n}\r\n\r\nexport default AppearanceScreen","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\index.js",["1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Content from '../../components/Content/Content'\r\nimport Pagination from '../../components/Pagination'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { activateCouponAction, addCouponAction, deleteCouponAction, getAllCouponsAction } from '../../redux/actions/couponBookBActions'\r\nimport { ACTIVATE_COUPON_BOOKB_RESET, ADD_COUPON_BOOKB_RESET, DELETE_COUPON_BOOKB_RESET } from '../../redux/constants/couponBookBConstants'\r\nimport NoData from '../../website/components/NoData'\r\nimport './coupon.css'\r\nimport AddCoupon from './Modals/AddCoupon'\r\nimport DeleteCouponModal from './Modals/DeleteCouponModal'\r\n\r\nconst CouponBookB = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllCoupons = useSelector((state) => state.getAllCouponsBookB);\r\n    const addCoupon = useSelector((state) => state.addCouponBookB);\r\n    const deleteCoupon = useSelector((state) => state.deleteCouponBookB);\r\n    const activateCoupon = useSelector((state) => state.activateCouponBookB);\r\n\r\n    const [showAddCouponModal, setShowAddCouponModal] = useState(false)\r\n    const [showDeleteCouponModal, setShowDeleteCouponModal] = useState(false);\r\n    const [totalPageSize, setTotalPageSize] = useState(1);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const pageLimit = 15;\r\n    const [search, setSearch] = useState('');\r\n\r\n    const [addCouponData, setAddCouponData] = useState({\r\n        id: '',\r\n        name: '',\r\n        amount_off: '',\r\n        duration: '',\r\n        currency: 'usd',\r\n        title: '',\r\n        code: ''\r\n        // stateDate: '',\r\n        // endDate: ''\r\n    })\r\n\r\n    const [addCouponDataError, setAddCouponDataError] = useState({\r\n        name: '',\r\n        amount_off: '',\r\n        duration: '',\r\n        currency: 'usd',\r\n        title: '',\r\n        code: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCouponsAction())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (addCoupon && addCoupon.data && addCoupon.data.status) {\r\n            setShowAddCouponModal(false);\r\n            toast.success(addCoupon.data.message)\r\n            clearData();\r\n            // dispatch(getAllCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n            dispatch({ type: ADD_COUPON_BOOKB_RESET });\r\n        } else if (addCoupon && addCoupon.data && !addCoupon.data.status) {\r\n            dispatch({ type: ADD_COUPON_BOOKB_RESET });\r\n            toast.error(addCoupon.data.message);\r\n        }\r\n    }, [addCoupon, pageNumber, pageLimit, dispatch, clearData])\r\n\r\n    useEffect(() => {\r\n        if (deleteCoupon && deleteCoupon.data && deleteCoupon.data.status) {\r\n            setShowDeleteCouponModal(false)\r\n            toast.success(deleteCoupon.data.message)\r\n            clearData();\r\n            dispatch({ type: DELETE_COUPON_BOOKB_RESET });\r\n        } else if (deleteCoupon && deleteCoupon.data && !deleteCoupon.data.status) {\r\n            toast.error(deleteCoupon.data.message);\r\n            dispatch({ type: DELETE_COUPON_BOOKB_RESET });\r\n        }\r\n    }, [deleteCoupon, pageNumber, pageLimit, dispatch, clearData])\r\n\r\n    useEffect(() => {\r\n        if (activateCoupon && activateCoupon.data && activateCoupon.data.status) {\r\n            toast.success(activateCoupon.data.message)\r\n            clearData();\r\n            dispatch({ type: ACTIVATE_COUPON_BOOKB_RESET });\r\n        } else if (activateCoupon && activateCoupon.data && !activateCoupon.data.status) {\r\n            toast.error(activateCoupon.data.message);\r\n            dispatch({ type: ACTIVATE_COUPON_BOOKB_RESET });\r\n        }\r\n    }, [activateCoupon, pageNumber, pageLimit, dispatch, clearData])\r\n\r\n    const closeAddCouponModal = () => {\r\n        setShowAddCouponModal(false)\r\n        clearData();\r\n    }\r\n\r\n    const closeDeleteCouponModal = () => {\r\n        setShowDeleteCouponModal(false)\r\n        clearData();\r\n    }\r\n\r\n    const handleAddCoupon = (e) => {\r\n        e.preventDefault()\r\n        if (addCouponData.id !== '') {\r\n            if (addCouponData.name === '' || addCouponData.name && addCouponData.name.trim() === '' || addCouponData.name === null) {\r\n                setAddCouponDataError({ ...addCouponDataError, name: 'Please enter coupon name' });\r\n            } else if (addCouponData.name.length > 15) {\r\n                setAddCouponDataError({ ...addCouponDataError, name: 'Coupon name cannot exceed 15 characters' });\r\n            } else {\r\n                let formData = {\r\n                    id: addCouponData.id,\r\n                    name: addCouponData.name,\r\n                }\r\n                dispatch(activateCouponAction(formData))\r\n            }\r\n        } else {\r\n\r\n            if (addCouponData.name === '' || addCouponData.name && addCouponData.name.trim() === '' || addCouponData.name === null) {\r\n                setAddCouponDataError({ ...addCouponDataError, name: 'Please enter coupon name' });\r\n            } else if (addCouponData.name.length > 15) {\r\n                setAddCouponDataError({ ...addCouponDataError, name: 'Coupon name cannot exceed 15 characters' });\r\n            } else if (addCouponData.amount_off === '' || addCouponData.amount_off === null) {\r\n                setAddCouponDataError({ ...addCouponDataError, amount_off: 'Please enter a discount' });\r\n            } else if (addCouponData.duration === '' || addCouponData.duration && addCouponData.duration.trim() === '' || addCouponData.duration === null) {\r\n                setAddCouponDataError({ ...addCouponDataError, duration: 'Please enter coupon duration' });\r\n            } else {\r\n                let formData = {\r\n                    name: addCouponData.name,\r\n                    duration: addCouponData.duration,\r\n                    amount_off: addCouponData.amount_off,\r\n                    currency: 'usd'\r\n                }\r\n                dispatch(addCouponAction(formData))\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (id, activation) => {\r\n        let formData = {\r\n            id: id,\r\n            status: {\r\n                active: !activation\r\n            }\r\n\r\n        }\r\n        dispatch(activateCouponAction(formData))\r\n    }\r\n\r\n    const handleDeleteCoupon = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteCouponAction(addCouponData.id))\r\n    }\r\n\r\n    const clearData = () => {\r\n        setAddCouponData({\r\n            id: '',\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: ''\r\n        })\r\n        setAddCouponDataError({\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: '',\r\n        })\r\n        dispatch(getAllCouponsAction())\r\n        setShowAddCouponModal(false)\r\n    }\r\n\r\n\r\n    const handlePageChange = async (currentPage) => {\r\n        const selectedPage = currentPage.selected;\r\n        dispatch(getAllCouponsAction());\r\n        setPageNumber(selectedPage + 1);\r\n    };\r\n\r\n    const onSearchHandler = (event) => {\r\n        setSearch(event.target.value);\r\n        if (search.trim() !== '' && search.length > 0) {\r\n            setPageNumber(1);\r\n        }\r\n        dispatch(getAllCouponsAction());\r\n    };\r\n\r\n    return (\r\n        <Content currentMenu='coupon' headerTitle='Coupons'\r\n            addBtn={true}\r\n            addBtnText='Add Coupon'\r\n            addBtnIcon='plus'\r\n            addBtnClick={() => { setShowAddCouponModal(true) }}\r\n            search={true}\r\n            searchPlaceholder='Search Coupon...'\r\n            searchIcon='search'\r\n            searchvalue={search}\r\n            searchOnChange={onSearchHandler}\r\n        >\r\n\r\n            {getAllCoupons.loading ? (\r\n                <Spinner />\r\n            ) : getAllCoupons &&\r\n                getAllCoupons.data &&\r\n                getAllCoupons.data.status &&\r\n                getAllCoupons.data.data &&\r\n                getAllCoupons.data.data.length > 0 ? (\r\n                <div className='main--card__Container'>\r\n                    {getAllCoupons.data.data.map((item, i) => (\r\n                        <div className='single__discountCard' key={i}>\r\n                            <div className='card--coupons'>\r\n                                <h1>{item.name}</h1>\r\n                                <p>Duration: &nbsp;\r\n                                    {item.duration.toUpperCase()}\r\n                                    {/* {new Date(item.expireDate).toLocaleDateString('en-US', {\r\n                                        year: 'numeric',\r\n                                        month: '2-digit',\r\n                                        day: '2-digit'\r\n                                    })} */}\r\n                                </p>\r\n                                <h4>Code: <span style={{ fontWeight: 'bold' }}>{item.name}</span></h4>\r\n                            </div>\r\n                            <div className='coupon--card_bottom'>\r\n                                <label className='switch'>\r\n                                    {/* <input\r\n                                        //id={d._id}\r\n                                        checked={item.valid}\r\n                                        onChange={() => { onChangeHandler(item.id, item.valid) }}\r\n                                        type='checkbox'\r\n                                        className='checkbox'\r\n                                        name='active'\r\n                                    />\r\n                                    <span className='slider round' /> */}\r\n                                </label>\r\n                                <div className='coupon--edit_delete'>\r\n                                    <button className='cardCouponIcon__button'\r\n                                        onClick={() => {\r\n                                            setShowAddCouponModal(true)\r\n                                            setAddCouponData({\r\n                                                ...addCouponData,\r\n                                                id: item.id,\r\n                                                name: item.name,\r\n                                                duration: item.duration,\r\n                                                amount_off: item.amount_off,\r\n                                                title: item.name,\r\n                                                code: item.name\r\n                                                // stateDate: item.startDate,\r\n                                                // endDate: item.expireDate\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        <svg className='edit--coupon_icon'>\r\n                                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                        </svg>\r\n                                        <span>Update Coupon</span>\r\n                                    </button>\r\n                                    <button className='cardCouponIcon__button'\r\n                                        onClick={() => {\r\n                                            setShowDeleteCouponModal(true)\r\n                                            setAddCouponData({ ...addCouponData, id: item.id })\r\n                                        }}\r\n                                    >\r\n                                        <svg className='cardCoupon--icon-red'>\r\n                                            <use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n                                        </svg>\r\n                                        <span>Delete Coupon</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    {totalPageSize > 1 && (\r\n                        <div className='tableContainer--paginater'>\r\n                            <Pagination\r\n                                list={getAllCoupons.data}\r\n                                onPageChange={handlePageChange}\r\n                                rowsPerPage={pageLimit}\r\n                                totalPageSize={totalPageSize}\r\n                                pageNumber={pageNumber}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <NoData\r\n                    title='No Data Found!'\r\n                    subTitle='We could not find any coupon data.'\r\n                    height='40vh'\r\n                />\r\n            )}\r\n\r\n            <AddCoupon\r\n                data={{ showAddCouponModal, closeAddCouponModal, addCouponData, setAddCouponData, handleAddCoupon, addCouponDataError, setAddCouponDataError }}\r\n            />\r\n            <DeleteCouponModal\r\n                data={{ showDeleteCouponModal, closeDeleteCouponModal, handleDeleteCoupon }}\r\n            />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default CouponBookB","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\PromotionCodeScreen\\index.js",["1850","1851","1852"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport Content from '../../components/Content'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { getAllCouponsAction } from '../../redux/actions/couponBookBActions'\r\nimport { activatePromoCodesAction, createNewPromoCodeAction, getAllPromoCodesAction } from '../../redux/actions/PromoCodeAction'\r\nimport { GET_ALL_COUPONS_BOOKB_RESET } from '../../redux/constants/couponBookBConstants'\r\nimport { ACTIVATE_PROMO_CODES_RESET, ADD_PROMO_CODES_RESET } from '../../redux/constants/promoCodesConstant'\r\nimport CreatePromoCode from './CreatePromoCode'\r\nimport PromoCodeStyles from './PromoCodes.module.css';\r\n\r\nconst PromoCodeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [promoCodesList, setPromoCodesList] = useState(\"\")\r\n    const [promoCode, setPromoCode] = useState({ value: \"\", error: '' })\r\n    const [coupon, setCoupon] = useState({ value: \"\", error: '' })\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const activatePromoCodes = useSelector((state) => state.activatePromoCodes);\r\n    const addPromCodes = useSelector((state) => state.addPromCodes);\r\n\r\n    // addPromCodes\r\n    useEffect(() => {\r\n        dispatch(getAllCouponsAction())\r\n\r\n        return () => {\r\n            dispatch({ type: GET_ALL_COUPONS_BOOKB_RESET })\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    const handleCreateModal = () => {\r\n        setCreateModal(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCoupons = async () => {\r\n            setLoading(true)\r\n            const data = await dispatch(getAllPromoCodesAction());\r\n            setPromoCodesList(data);\r\n            if (data && data.status) {\r\n                setLoading(false)\r\n            }\r\n        };\r\n        getCoupons();\r\n    }, [activatePromoCodes, addPromCodes])\r\n\r\n    const handleCloseModal = () => {\r\n        setCreateModal(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (addPromCodes && addPromCodes.data && addPromCodes.data.status) {\r\n            toast.success(addPromCodes.data.message)\r\n            dispatch({ type: ADD_PROMO_CODES_RESET })\r\n            setCreateModal(false)\r\n        } else if (addPromCodes && addPromCodes.data && addPromCodes.data.message) {\r\n            toast.error(addPromCodes && addPromCodes.data && addPromCodes.data.message)\r\n            dispatch({ type: ADD_PROMO_CODES_RESET })\r\n            setCreateModal(false)\r\n        }\r\n    }, [addPromCodes, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.status) {\r\n            toast.success(activatePromoCodes.data.message)\r\n            dispatch({ type: ACTIVATE_PROMO_CODES_RESET })\r\n        } else if (activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.message) {\r\n            toast.error(activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.message)\r\n            dispatch({ type: ACTIVATE_PROMO_CODES_RESET })\r\n        }\r\n    }, [activatePromoCodes, dispatch])\r\n\r\n    const onChangeHandler = (item) => {\r\n        let status = {\r\n            active: !item.active\r\n        }\r\n        dispatch(activatePromoCodesAction(item.id, status))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (promoCode.value == \"\") {\r\n            setPromoCode({ value: \"\", error: 'Please enter promotional code' })\r\n        } else if (promoCode.value.length > 10) {\r\n            setPromoCode({ value: \"\", error: 'Promotional code cannot exceed 10 characters' })\r\n        } else if (coupon.value == \"\") {\r\n            setCoupon({ value: \"\", error: 'Please select coupon' })\r\n        } else {\r\n            let formData = {\r\n                \"code\": promoCode.value,\r\n                \"coupon\": coupon.value\r\n            }\r\n\r\n            dispatch(createNewPromoCodeAction(formData))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Content currentMenu='promo-code' headerTitle='Promotional Codes'\r\n            addBtn={true}\r\n            addBtnText='New Promo-Code'\r\n            addBtnIcon='plus'\r\n            addBtnClick={handleCreateModal}\r\n        >\r\n\r\n            <div className='main--card__Container'>\r\n                {loading ? <Spinner /> :\r\n                    promoCodesList && promoCodesList.data && promoCodesList.data.promotionCodes && promoCodesList.data.promotionCodes.length > 0 &&\r\n                    promoCodesList.data.promotionCodes.map((promoCode, index) => (\r\n                        <div className='single__discountCard' key={index + 1}>\r\n                            <div className='card--coupons' style={{ borderBottom: '1px solid #ccc' }}>\r\n                                <h1>{promoCode.code}</h1>\r\n                                {promoCode.coupon && (\r\n                                    <Fragment>\r\n                                        <h4 className={PromoCodeStyles.promoCodeCard_validity}>Coupon Name: {promoCode.coupon.name}</h4>\r\n                                        <h4 className={PromoCodeStyles.promoCodeCard_validity}>\r\n                                            Duration: {promoCode.coupon.duration}{' '}\r\n                                            {promoCode.coupon.duration === 'repeating' ? (\r\n                                                ' | ' + promoCode.coupon.duration_in_months + ' months'\r\n                                            ) : (\r\n                                                ''\r\n                                            )}\r\n                                        </h4>\r\n                                        <p className={PromoCodeStyles.promoCodeCard_code}>\r\n                                            Discount:{' '}\r\n                                            {promoCode.coupon.percent_off ? (\r\n                                                <span>{promoCode.coupon.percent_off + '%'}</span>\r\n                                            ) : (\r\n                                                <span>{'$' + promoCode.coupon.amount_off}</span>\r\n                                            )}\r\n                                        </p>\r\n                                    </Fragment>\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className='coupon--card_bottom' style={{ justifyContent: 'center' }}>\r\n                                <label className='switch'>\r\n                                    <input\r\n                                        checked={promoCode.active}\r\n                                        onChange={() => { onChangeHandler(promoCode) }}\r\n                                        type='checkbox'\r\n                                        className='checkbox'\r\n                                        name='active'\r\n                                    />\r\n                                    <span className='slider round' />\r\n                                </label>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <CreatePromoCode\r\n                data={{\r\n                    promoCode,\r\n                    setPromoCode,\r\n                    coupon,\r\n                    setCoupon,\r\n                    createModal,\r\n                    setCreateModal,\r\n                    handleCreateModal,\r\n                    handleCloseModal,\r\n                    handleSubmit\r\n                }}\r\n            />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default PromoCodeScreen","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\index.js",["1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tcreateServiceAction,\r\n\tdeleteServiceAction,\r\n\tgetAllServiceAction,\r\n\tchangeServiceStatusAction,\r\n\tgetAllEnableServiceAction,\r\n\tupdateRankServiceAction\r\n} from '../../redux/actions/serviceActions';\r\nimport {\r\n\tADD_SERVICE_RESET,\r\n\tCHANGE_SERVICE_STATUS_RESET,\r\n\tDELETE_SERVICE_RESET,\r\n\tGET_ALL_ENABLE_SERVICE_RESET,\r\n\tGET_ALL_SERVICE_RESET,\r\n\tUPDATE_RANK_SERVICE_RESET\r\n} from '../../redux/constants/serviceConstants';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport AddService from './AddService';\r\nimport DeleteService from './DeleteService';\r\nimport ServiceStyle from './Service.module.css';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst ServiceScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\r\n\tconst serviceList = useSelector((state) => state.serviceList);\r\n\tconst createService = useSelector((state) => state.createService);\r\n\tconst deleteService = useSelector((state) => state.deleteService);\r\n\tconst changeServiceStatus = useSelector((state) => state.changeServiceStatus);\r\n\tconst enableServiceList = useSelector((state) => state.enableServiceList);\r\n\tconst updateRankService = useSelector((state) => state.updateRankService);\r\n\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\r\n\r\n\tconst [id, setServiceId] = useState('');\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [filterId, setFilterId] = useState('');\r\n\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [titleError, setTitleError] = useState('');\r\n\tconst [isMainService, setIsMainService] = useState(false);\r\n\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [descriptionError, setDescriptionError] = useState('');\r\n\tconst [charges, setCharges] = useState('');\r\n\tconst [chargesError, setChargesError] = useState('');\r\n\tconst [service, setService] = useState('');\r\n\tconst [serviceError, setServiceError] = useState('');\r\n\r\n\tconst [minutes, setMinutes] = useState(0);\r\n\tconst [minutesError, setMinutesError] = useState('');\r\n\tconst [hours, setHours] = useState(0);\r\n\tconst [hoursError, setHoursError] = useState('');\r\n\tconst [stylistArray, setStylistArray] = useState('');\r\n\tconst [stylistArrayError, setStylistArrayError] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\r\n\tconst [leadTime, setLeadTime] = useState({ value: 0, type: 'Mins' });\r\n\tconst [leadTimeError, setLeadTimeError] = useState('');\r\n\r\n\r\n\tconst [breakTime, setBreakTime] = useState({ value: 0, type: 'Mins' });\r\n\tconst [breakTimeError, setBreakTimeError] = useState('');\r\n\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst [serviceListArr, setServiceListArr] = useState([])\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tdispatch(getAllEnableServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ALL_SERVICE_RESET });\r\n\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SERVICE_RESET });\r\n\t\t\t};\r\n\t\t},\r\n\t\t[history, getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!serviceListArr.length) {\r\n\t\t\t\tif (serviceList &&\r\n\t\t\t\t\tserviceList.categories &&\r\n\t\t\t\t\tserviceList.categories.data &&\r\n\t\t\t\t\tserviceList.categories.data.result.length > 0) {\r\n\t\t\t\t\tsetServiceListArr(serviceList.categories.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[serviceList, serviceListArr]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createService && createService.category && createService.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\tsetServiceListArr([]);\r\n\t\t\t\ttoast.success(createService.category.message);\r\n\t\t\t\tdispatch({ type: ADD_SERVICE_RESET });\r\n\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SERVICE_RESET });\r\n\t\t\t\tdispatch(getAllEnableServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createService && createService.category && !createService.category.status) {\r\n\t\t\t\tdispatch({ type: ADD_SERVICE_RESET });\r\n\t\t\t\ttoast.error(createService.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createService, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (updateRankService && updateRankService.categories && updateRankService.categories.status) {\r\n\t\t\t\ttoast.success(updateRankService.categories.message);\r\n\t\t\t\tdispatch({ type: UPDATE_RANK_SERVICE_RESET });\r\n\t\t\t} else if (updateRankService && updateRankService.categories && !updateRankService.categories.status) {\r\n\t\t\t\tdispatch({ type: UPDATE_RANK_SERVICE_RESET });\r\n\t\t\t\ttoast.error(updateRankService.categories.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateRankService, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteService && deleteService.category && deleteService.category.status) {\r\n\t\t\t\ttoast.success(deleteService.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_SERVICE_RESET });\r\n\t\t\t\tsetServiceListArr([])\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteService && deleteService.category && !deleteService.category.status) {\r\n\t\t\t\ttoast.error(deleteService.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_SERVICE_RESET });\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteService, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeServiceStatus && changeServiceStatus.category && changeServiceStatus.category.status) {\r\n\t\t\t\ttoast.success(changeServiceStatus.category.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tsetServiceListArr([])\r\n\t\t\t\tdispatch({ type: CHANGE_SERVICE_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeServiceStatus && changeServiceStatus.category && !changeServiceStatus.category.status) {\r\n\t\t\t\ttoast.error(changeServiceStatus.category.message);\r\n\t\t\t\tdispatch({ type: CHANGE_SERVICE_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeServiceStatus, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetAddModalActive(false);\r\n\t\tsetIsMainService(false);\r\n\t};\r\n\r\n\tconst handleEditButton = async (d, isMain) => {\r\n\t\tif (isMain) {\r\n\t\t\tsetServiceId(d.category._id);\r\n\t\t\tsetTitle(d.category.title);\r\n\t\t\tsetSelectUpdateModel(d.category);\r\n\t\t\tsetIsMainService(isMain);\r\n\t\t\tsetAddModalActive(true);\r\n\t\t} else {\r\n\t\t\tsetTitle(d.title);\r\n\t\t\tsetServiceId(d._id);\r\n\t\t\tsetService(d.service);\r\n\t\t\tsetIsMainService(isMain);\r\n\t\t\tsetLeadTime({ ...leadTime, value: d.leadTime });\r\n\t\t\tsetBreakTime({ ...breakTime, value: d.breakTime });\r\n\t\t\tsetDescription(d.description);\r\n\t\t\tsetCharges(d.charges);\r\n\t\t\tif (d && d.requiredTime >= 60) {\r\n\t\t\t\tsetMinutes(d.requiredTime % 60)\r\n\t\t\t\tsetHours((d.requiredTime / 60).toFixed(0));\r\n\t\t\t}\r\n\t\t\tsetSelectUpdateModel(d);\r\n\t\t\tsetAddModalActive(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetServiceId('');\r\n\t\tsetDescription('');\r\n\t\tsetCharges('');\r\n\t\tsetTitle('');\r\n\t\tsetDescriptionError('');\r\n\t\tsetChargesError('');\r\n\t\tsetTitleError('');\r\n\t\tsetService('');\r\n\t\tsetServiceError('');\r\n\t\tsetSelectUpdateModel('');\r\n\t\tsetHours('');\r\n\t\tsetMinutes('');\r\n\t\tsetHoursError('');\r\n\t\tsetLeadTimeError('');\r\n\t\tsetLeadTime({ value: 0, type: 'Mins' });\r\n\t\tsetBreakTime({ value: 0, type: 'Mins' });\r\n\t\tsetBreakTimeError('');\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (isMainService) {\r\n\t\t\tif (title === '' && title.trim() === '') {\r\n\t\t\t\tsetTitleError('Please enter title');\r\n\t\t\t} else {\r\n\t\t\t\tif (id !== '') {\r\n\t\t\t\t\tdispatch(createServiceAction({ id, title, isMainService, description, charges }));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(createServiceAction({ title, isMainService, description, charges }));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet requiredTime = (+hours * 60) + (+minutes);\r\n\t\t\tif (title === '' && title.trim() === '') {\r\n\t\t\t\tsetTitleError('Please enter name');\r\n\t\t\t} else if (service === '' && service.trim() === '') {\r\n\t\t\t\tsetServiceError('Please select service');\r\n\t\t\t} else if (requiredTime == '' && requiredTime == 0) {\r\n\t\t\t\tsetHoursError('Please select hours or minutes');\r\n\t\t\t} else if (charges === '' && charges.trim() === '') {\r\n\t\t\t\tsetChargesError('Please enter charges');\r\n\t\t\t} else if (description === '' && description.trim() === '') {\r\n\t\t\t\tsetDescriptionError('Please enter description');\r\n\t\t\t} else {\r\n\t\t\t\tlet lead_time = leadTime.value;\r\n\t\t\t\tlet break_time = breakTime.value;\r\n\t\t\t\tif (breakTime.type === 'Hours') { break_time = (+breakTime.value * 60); }\r\n\t\t\t\tif (leadTime.type === 'Hours') { lead_time = (+leadTime.value * 60); }\r\n\t\t\t\tif (id !== '') {\r\n\t\t\t\t\tdispatch(createServiceAction({ id, title, requiredTime, isMainService, description, charges, service, leadTime: +lead_time, breakTime: +break_time }));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(createServiceAction({ title, requiredTime, isMainService, description, charges, service, leadTime: +lead_time, breakTime: +break_time }));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteServiceAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllServiceAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(\r\n\t\t\tchangeServiceStatusAction(id, {\r\n\t\t\t\tenable: enableStatus ? false : true\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onDragEnd = (e) => {\r\n\t\tif (!e.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst sorted = reorder(serviceListArr, e.source.index, e.destination.index);\r\n\t\tsetServiceListArr(sorted);\r\n\t\tupdateRankServiceHandler(sorted);\r\n\t};\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = Array.from(list);\r\n\t\tconst [removed] = result.splice(startIndex, 1);\r\n\t\tresult.splice(endIndex, 0, removed);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\r\n\tconst onDragEndChildTable = (e, arr) => {\r\n\t\tif (!e.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst sorted = reorder(arr.subService, e.source.index, e.destination.index);\r\n\t\tserviceListArr[0].subService = sorted;\r\n\t\tsetServiceListArr([...serviceListArr]);\r\n\t};\r\n\r\n\r\n\r\n\tconst updateRankServiceHandler = (arr) => {\r\n\t\tlet ids = [];\r\n\t\tif (arr.length > 0) {\r\n\t\t\tarr.map((itm, index) => (\r\n\t\t\t\tids.push({\r\n\t\t\t\t\t\"_id\": itm._id,\r\n\t\t\t\t\t\"rank\": index\r\n\t\t\t\t})\r\n\t\t\t)) \r\n\t\t\tdispatch(updateRankServiceAction({ ids: ids }));\r\n\t\t}\r\n\t}\r\n \r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='services'\r\n\t\t\theaderTitle='Service'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add Service'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Service...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{serviceList && serviceList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{serviceList &&\r\n\t\t\t\t\t\tserviceList.categories &&\r\n\t\t\t\t\t\tserviceList.categories.data &&\r\n\t\t\t\t\t\tserviceList.categories.data.result &&\r\n\t\t\t\t\t\tserviceList.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div className='tableContainer' style={{ height: '80vh' }}>\r\n\t\t\t\t\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t\t\t\t\t<Droppable droppableId=\"Table\">\r\n\t\t\t\t\t\t\t\t\t{mainProvided => (\r\n\t\t\t\t\t\t\t\t\t\t<table className='table table-service-container main-table-contain' {...mainProvided.droppableProps} ref={mainProvided.innerRef}>\r\n\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Service Title</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Duration</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Active Status</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{serviceListArr &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tserviceListArr.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tserviceListArr.map((mainItem, mainIndex) => (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={mainItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={mainItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex={mainIndex}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{mainProvided => (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//tr tag\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={mainIndex + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={mainProvided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...mainProvided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...mainProvided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={6} style={{ padding: '0rem', margin: '0rem' }}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DragDropContext onDragEnd={(e) => { onDragEndChildTable(e, mainItem) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Droppable droppableId=\"ChildTable\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{provided => (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table {...provided.droppableProps} ref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table table-service-container table-contain'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr className='accordianContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={4} className='expandable-icon textCapitalize'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='accordianContainer__button' style={{ backgroundColor: '#0000' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='accordianContainer--icon-move'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-drag_indicator`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Move table up or down</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{mainItem.category.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={mainItem.category.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(mainItem._id, mainItem.category.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(mainItem, true)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(mainItem.category);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{mainItem.subService.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmainItem.subService.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={res._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={res._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{provided => (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='expandable'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='expandable-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='accordianContainer__button' style={{ backgroundColor: '#0000' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='accordianContainer--icon-move'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-drag_indicator`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Move row up or down</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.title}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.requiredTime} m</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>$ {res.charges}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(res, false)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='not_data_found'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h1>No data found !</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DragDropContext>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t\t</DragDropContext>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubTitle='We could not find any service data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<AddService\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\tenableServiceList,\r\n\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tsetTitle,\r\n\t\t\t\t\tisMainService,\r\n\t\t\t\t\tsetIsMainService,\r\n\r\n\t\t\t\t\tservice,\r\n\t\t\t\t\tcharges,\r\n\t\t\t\t\tdescription,\r\n\r\n\t\t\t\t\tsetDescription,\r\n\t\t\t\t\tsetCharges,\r\n\r\n\t\t\t\t\ttitleError,\r\n\t\t\t\t\tchargesError,\r\n\t\t\t\t\tdescriptionError,\r\n\r\n\t\t\t\t\tsetTitleError,\r\n\t\t\t\t\tsetChargesError,\r\n\t\t\t\t\tsetDescriptionError,\r\n\r\n\t\t\t\t\tsetService,\r\n\t\t\t\t\tserviceError,\r\n\t\t\t\t\tsetServiceError,\r\n\r\n\t\t\t\t\tminutes,\r\n\t\t\t\t\tsetMinutes,\r\n\t\t\t\t\thours,\r\n\t\t\t\t\tsetHours,\r\n\t\t\t\t\thoursError,\r\n\t\t\t\t\tsetHoursError,\r\n\r\n\r\n\t\t\t\t\tstylistArray,\r\n\t\t\t\t\tsetStylistArray,\r\n\t\t\t\t\tstylistArrayError,\r\n\t\t\t\t\tsetStylistArrayError,\r\n\r\n\t\t\t\t\tleadTime,\r\n\t\t\t\t\tsetLeadTime,\r\n\t\t\t\t\tleadTimeError,\r\n\t\t\t\t\tsetLeadTimeError,\r\n\r\n\r\n\t\t\t\t\tbreakTime,\r\n\t\t\t\t\tsetBreakTime,\r\n\t\t\t\t\tbreakTimeError,\r\n\t\t\t\t\tsetBreakTimeError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteService data={{ selectUpdateModel, modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ServiceScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\index.js",["1866","1867","1868"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMenuSettingsAction } from '../../redux/actions/salonActions';\r\n\r\nimport Content from '../../components/Content/Content';\r\nimport LogoUpload from './LogoUpload';\r\nimport LoginScreen from './LoginScreen';\r\nimport RegisterScreen from './RegisterScreen';\r\nimport HomeScreen from './HomeScreen';\r\nimport VideosScreen from './VideosScreen';\r\nimport ShopScreen from './ShopScreen';\r\nimport MyProfileScreen from './MyProfileScreen';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\n\r\nconst AppSettingScreen = () => { \r\n\tconst [ token, setToken ] = useState('');\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo); \r\n\t\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userLogin && userLogin.userInfo && userLogin.userInfo.status && userLogin.userInfo.data) {\r\n\t\t\t\tsetToken(userLogin.userInfo.data.token);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ userLogin ]\r\n\t);\r\n \r\n\r\n\treturn (\r\n\t\t<Content currentMenu='app-settings' headerTitle='App Settings' addBtn={false}>\r\n\t\t\t<LogoUpload token={token} />\r\n\r\n\t\t\t<div className={AppSettingStyles.screenCards}>\r\n\t\t\t\t<LoginScreen token={token} />\r\n\t\t\t\t<RegisterScreen token={token} />\r\n\t\t\t\t<HomeScreen token={token} /> \r\n\t\t\t\t{getUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\tgetUserInfo.userInfo.data.appMenu &&\r\n\t\t\t\tgetUserInfo.userInfo.data.appMenu.isPOS && <ShopScreen token={token} />}\r\n\t\t\t\t<MyProfileScreen token={token} />\r\n\t\t\t</div>\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default AppSettingScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\index.js",["1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Content from \"../../components/Content\";\r\nimport AddAvailability from \"./AddAvailability\";\r\nimport StylistSessionStyles from \"./StylistAvailability.module.css\"; \r\nimport AddBusinessHoursWeekly from \"./AddBusinessHoursWeekly\";\r\nimport { WeekDaysArray } from \"./calendarData\";\r\nimport {\r\n  addBulkAvailabilityAction,\r\n  addDailyAvailabilityAction,\r\n  addDayAvailabilityAction,\r\n  getUnBlockAvailabilitysAction,\r\n  blockAppointmentAction,\r\n} from \"../../redux/actions/availabilityActions\";\r\n\r\nimport {\r\n  ADD_BULK_AVAILABILITYS_RESET,\r\n  ADD_DAILY_AVAILABILITYS_RESET,\r\n  ADD_DAY_AVAILABILITYS_RESET,\r\n  DEL_BLOCK_AVAILABILITYS_RESET,\r\n  GET_UNBLOCK_AVAILABILITYS_RESET,\r\n} from \"../../redux/constants/availabilityConstants\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport TempCalendar from \"../../components/Calender/Temp\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { addAppointmentAction, availabilityAppointmentAction, changeAppointmentAction, getBusinessHourAction, updateAppointmentAction } from \"../../redux/actions/appointmentAction\";\r\nimport { ADD_APPOINTMENT_RESET, APPOINTMENT_AVAILIBILITY_RESET, APPOINTMENT_STATUS_LIST_RESET, CHANGE_APPOINTMENT_RESET, DELETE_APPOINTMENT_RESET, DELETE_SLOT_RESET, UPDATE_APPOINTMENT_RESET, UPDATE_APPOINTMENT_STATUS_RESET } from \"../../redux/constants/appointmentConstants\";\r\nimport DeleteAvailability from \"./DeleteAvailability\";\r\nimport WaitlistModal from \"../Waitlist/WaitlistModal\";\r\nimport AddSlotModal from \"./AddSlotModal\";\r\nimport CreateSlot from \"./CreateSlotModal\";\r\nimport { unMasking, validateEmail } from \"../../utils/validators\";\r\nimport DeleteAppointmentModal from \"../Waitlist/DeleteAppointmentModal\";\r\nimport { createStylistSettingsAction } from \"../../redux/actions/stylistActions\";\r\n\r\nconst StylistSessionScreen = ({ history, match, location }) => {\r\n  const { stylistName, stylistId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const calendarRef = useRef(null);\r\n  const [calendarApi, setCalendarApi] = useState(null);\r\n\r\n  const store = useSelector((state) => state.calendar);\r\n  const getUnblockAvailabilitys = useSelector((state) => state.getUnblockAvailabilitys);\r\n  const addDailyAvailabilitys = useSelector((state) => state.addDailyAvailabilitys);\r\n  const addBulkAvailabilitys = useSelector((state) => state.addBulkAvailabilitys);\r\n  const addDayAvailabilitys = useSelector((state) => state.addDayAvailabilitys);\r\n  const availabilityAppointment = useSelector((state) => state.availabilityAppointment);\r\n  const appointmentStatusList = useSelector((state) => state.appointmentStatusList);\r\n  const changeAppointmentStatus = useSelector((state) => state.changeAppointmentStatus);\r\n  const delBlockAvailabilitys = useSelector((state) => state.delBlockAvailabilitys);\r\n  const addAppointment = useSelector((state) => state.addAppointment);\r\n  const updateAppointment = useSelector((state) => state.updateAppointment);\r\n  const deleteAppointment = useSelector((state) => state.deleteAppointment);\r\n  const deleteSlot = useSelector((state) => state.deleteSlot);\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n  const confirmAppointment = useSelector((state) => state.confirmAppointment);\r\n  const publicAddAppointment = useSelector((state) => state.publicAddAppointment);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const getBusinessHour = useSelector((state) => state.getBusinessHour)\r\n\r\n  const [openDropdownBHours, setOpenDropdownBHours] = useState(false);\r\n  const [businessHours, setBusinessHours] = useState({});\r\n\r\n  const [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n  const [updateWaitlistModal, setUpdateWaitlistModal] = useState(false);\r\n  const [createSlotModal, setCreateSlotModal] = useState(false);\r\n  const [modalWaitlist, setModalWaitlist] = useState(false);\r\n  const [deleteAptModal, setDeleteAptModal] = useState(false);\r\n  const [addModalActive, setAddModalActive] = useState(false);\r\n  const [deleteModalActive, setDeleteModalActive] = useState(false);\r\n  const [addBuinessHoursModal, setAddBuinessHoursModal] = useState(false);\r\n  const [addSlotModal, setAddSlotModal] = useState(false);\r\n  const [businessHourDetail, setBusinessHourDetail] = useState(\"\");\r\n  const [weekDays, setWeekDays] = useState(WeekDaysArray);\r\n  const [resetHandler, setresetHandler] = useState(true)\r\n  const [resetslot, setresetslot] = useState(false)\r\n  const [appointmentDetail, setAppointmentDetail] = useState();\r\n\r\n  const [name, setName] = useState();\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [slotId, setSlotId] = useState(\"\")\r\n  const [startTimeError, setStartTimeError] = useState(\"\");\r\n  const [requiredTime, setRequiredTime] = useState(\"\");\r\n  const [requiredTimeError, setRequiredTimeError] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n  const [serviceError, setServiceError] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [dateError, setDateError] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [userId, setUserId] = useState()\r\n  const [appointmentId, setAppointmentId] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [salon, setSalon] = useState();\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [timeSlotId, setTimeSlotId] = useState(\"\")\r\n  const [gender, setGender] = useState(\"\")\r\n  const [genderError, setGenderError] = useState(\"\")\r\n  const [slotStatus, setSlotStatus] = useState(\"\")\r\n  const [changeSlotStatus, setChangeSlotStatus] = useState(\"\")\r\n  const [appointmentList, setAppointmentList] = useState(\"\")\r\n  const [recurringType, setRecurringType] = useState({ value: 'month', error: '' });\r\n\r\n  const [serviceIds, setServiceIds] = useState({ mainServiceId: '', subServiceId: '' })\r\n\r\n  const [totalPageSize, setTotalPageSize] = useState(1);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageLimit = 20;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userLogin &&\r\n      userLogin.userInfo &&\r\n      userLogin.userInfo.data &&\r\n      !userLogin.userInfo.data.token\r\n    ) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userLogin, history]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addDailyAvailabilitys &&\r\n      addDailyAvailabilitys.session &&\r\n      addDailyAvailabilitys.session.status\r\n    ) {\r\n      toast.success(addDailyAvailabilitys.session.message);\r\n      setCreateSlotModal(false)\r\n      setDate('')\r\n      setStartTime('')\r\n      dispatch({ type: ADD_DAILY_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addDailyAvailabilitys &&\r\n      addDailyAvailabilitys.session &&\r\n      !addDailyAvailabilitys.session.status\r\n    ) {\r\n      toast.error(addDailyAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAILY_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addDailyAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addAppointment &&\r\n      addAppointment.session &&\r\n      addAppointment.session.status\r\n    ) {\r\n      toast.success(addAppointment.session.message);\r\n      dispatch({ type: ADD_APPOINTMENT_RESET });\r\n    } else if (\r\n      addAppointment &&\r\n      addAppointment.session &&\r\n      !addAppointment.session.status\r\n    ) {\r\n      toast.error(addAppointment.session.message);\r\n      dispatch({ type: ADD_APPOINTMENT_RESET });\r\n    }\r\n  }, [addAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      updateAppointment &&\r\n      updateAppointment.session &&\r\n      updateAppointment.session.status\r\n    ) {\r\n      toast.success(updateAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_RESET });\r\n    } else if (\r\n      updateAppointment &&\r\n      updateAppointment.session &&\r\n      !updateAppointment.session.status\r\n    ) {\r\n      toast.error(updateAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_RESET });\r\n    }\r\n  }, [updateAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (availabilityAppointment && availabilityAppointment.session && availabilityAppointment.session.status === true) {\r\n      setAppointmentId(availabilityAppointment.session.result && availabilityAppointment.session.result.appointmentId)\r\n    }\r\n\r\n  }, [availabilityAppointment])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      deleteAppointment &&\r\n      deleteAppointment.session &&\r\n      deleteAppointment.session.status\r\n    ) {\r\n      toast.success(deleteAppointment.session.message);\r\n      setDeleteModalActive(false)\r\n      dispatch({ type: DELETE_APPOINTMENT_RESET });\r\n      dispatch(availabilityAppointmentAction(slotId))\r\n    } else if (\r\n      deleteAppointment &&\r\n      deleteAppointment.session &&\r\n      !deleteAppointment.session.status\r\n    ) {\r\n      toast.error(deleteAppointment.session.message);\r\n      dispatch({ type: DELETE_APPOINTMENT_RESET });\r\n    }\r\n  }, [deleteAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      deleteSlot &&\r\n      deleteSlot.session &&\r\n      deleteSlot.session.status\r\n    ) {\r\n      toast.success(deleteSlot.session.message);\r\n      dispatch({ type: DELETE_SLOT_RESET });\r\n    } else if (\r\n      deleteSlot &&\r\n      deleteSlot.session &&\r\n      !deleteSlot.session.status\r\n    ) {\r\n      toast.error(deleteSlot.session.message);\r\n      dispatch({ type: DELETE_SLOT_RESET });\r\n    }\r\n  }, [deleteSlot]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      confirmAppointment &&\r\n      confirmAppointment.session &&\r\n      confirmAppointment.session.status\r\n    ) {\r\n      toast.success(confirmAppointment.session.message);\r\n      setBusinessHours({});\r\n      setStartTime(\"\");\r\n      setService(\"\");\r\n      setDate(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n      setRequiredTime(\"\");\r\n      setAddModalActive(false);\r\n      dispatch({ type: UPDATE_APPOINTMENT_STATUS_RESET });\r\n    } else if (\r\n      confirmAppointment &&\r\n      confirmAppointment.session &&\r\n      !confirmAppointment.session.status\r\n    ) {\r\n      toast.error(confirmAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_STATUS_RESET });\r\n    }\r\n  }, [confirmAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addBulkAvailabilitys &&\r\n      addBulkAvailabilitys.session &&\r\n      addBulkAvailabilitys.session.status\r\n    ) {\r\n      setAddBuinessHoursModal(false);\r\n      toast.success(addBulkAvailabilitys.session.message);\r\n      dispatch({ type: ADD_BULK_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addBulkAvailabilitys &&\r\n      addBulkAvailabilitys.session &&\r\n      !addBulkAvailabilitys.session.status\r\n    ) {\r\n      setAddBuinessHoursModal(false);\r\n      toast.error(addBulkAvailabilitys.session.message);\r\n      dispatch({ type: ADD_BULK_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addBulkAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addDayAvailabilitys &&\r\n      addDayAvailabilitys.session &&\r\n      addDayAvailabilitys.session.status\r\n    ) {\r\n      toast.success(addDayAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAY_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addDayAvailabilitys &&\r\n      addDayAvailabilitys.session &&\r\n      !addDayAvailabilitys.session.status\r\n    ) {\r\n      toast.error(addDayAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAY_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addDayAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (delBlockAvailabilitys && delBlockAvailabilitys.sessions && delBlockAvailabilitys.sessions.status) {\r\n      toast.success(delBlockAvailabilitys.sessions.message);\r\n      dispatch({ type: DEL_BLOCK_AVAILABILITYS_RESET });\r\n    } else if (\r\n      delBlockAvailabilitys &&\r\n      delBlockAvailabilitys.sessions &&\r\n      !delBlockAvailabilitys.sessions.status\r\n    ) {\r\n      toast.error(delBlockAvailabilitys.sessions.message);\r\n      dispatch({ type: DEL_BLOCK_AVAILABILITYS_RESET });\r\n    }\r\n  }, [delBlockAvailabilitys])\r\n\r\n  useEffect(() => {\r\n    if (getBusinessHour && getBusinessHour.session && getBusinessHour.session.status && getBusinessHour.session.data && getBusinessHour.session.data.slots.length > 0) {\r\n      setBusinessHourDetail(getBusinessHour.session.data)\r\n      setWeekDays(getBusinessHour.session.data.slots)\r\n    } else {\r\n      setWeekDays(WeekDaysArray)\r\n      setBusinessHourDetail(getBusinessHour && getBusinessHour.session && getBusinessHour.session.status && getBusinessHour.session.data)\r\n    }\r\n  }, [getBusinessHour])\r\n\r\n  const handleResetSlot = (e) => {\r\n    e.preventDefault();\r\n    setresetHandler(true);\r\n    if (getBusinessHour && getBusinessHour.session && getBusinessHour.session.status && getBusinessHour.session.data && getBusinessHour.session.data.slots.length > 0) {\r\n      setBusinessHourDetail(getBusinessHour.session.data)\r\n      setWeekDays(getBusinessHour.session.data.slots)\r\n      setRecurringType({value:getBusinessHour.session.data && getBusinessHour.session.data.stylist && getBusinessHour.session.data.stylist.recurringType})\r\n    } else {\r\n      setWeekDays(WeekDaysArray)\r\n      setBusinessHourDetail(getBusinessHour && getBusinessHour.session && getBusinessHour.session.status && getBusinessHour.session.data)\r\n    }\r\n    // setresetslot(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getBusinessHourAction(stylistId))\r\n  }, [addBuinessHoursModal])\r\n\r\n  useEffect(() => {\r\n    if (changeAppointmentStatus && changeAppointmentStatus.session && changeAppointmentStatus.session.status === true) {\r\n      toast.success(changeAppointmentStatus.session.message);\r\n      dispatch(availabilityAppointmentAction(slotId))\r\n      dispatch({ type: CHANGE_APPOINTMENT_RESET });\r\n    }\r\n  }, [changeAppointmentStatus, dispatch])\r\n\r\n  useEffect(() => {\r\n  }, [addDailyAvailabilitys, addDayAvailabilitys])\r\n\r\n  //Change Slot Status\r\n  useEffect(() => {\r\n    if (changeSlotStatus) { \r\n      const formData = {\r\n        \"slotId\": slotId,\r\n        \"status\": changeSlotStatus,\r\n        \"timeDataId\": timeSlotId\r\n      }\r\n      dispatch(changeAppointmentAction(formData, appointmentId))\r\n    }\r\n  }, [changeSlotStatus])\r\n\r\n  const handleAddModalClose = () => {\r\n    setBusinessHours({});\r\n    setStartTime(\"\");\r\n    setService(\"\");\r\n    setName(\"\");\r\n    setDate(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setRequiredTime(\"\");\r\n    setName(\"\")\r\n    setGender(\"\")\r\n    setAddModalActive(false);\r\n    setAddBuinessHoursModal(false);\r\n    setDeleteModalActive(false)\r\n    setDeleteAptModal(false)\r\n    setIsUpdate(false)\r\n    setCreateSlotModal(false)\r\n    setAddSlotModal(false)\r\n    setDateError(\"\");\r\n    setStartTimeError('');\r\n    setServiceError('');\r\n    setRequiredTimeError('');\r\n    setNameError('');\r\n    setEmailError('');\r\n    setPhoneError('');\r\n  };\r\n  const WaitlistModalClose = () => {\r\n    setIsUpdate(false)\r\n    setModalWaitlist(false)\r\n    setStartTime(\"\");\r\n    setService(\"\");\r\n    setDate(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setRequiredTime(\"\");\r\n    setName(\"\")\r\n    setGender(\"\")\r\n    setTimeSlotId(\"\")\r\n    dispatch({ type: APPOINTMENT_AVAILIBILITY_RESET });\r\n    dispatch({ type: APPOINTMENT_STATUS_LIST_RESET });\r\n  }\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    allDay: false,\r\n    url: \"\",\r\n    extendedProps: {\r\n      calendar: \"\",\r\n      guests: [],\r\n      location: \"\",\r\n      description: \"\",\r\n    },\r\n  };\r\n\r\n\r\n  // useEffect(()=>{\r\n  //   if (recurringType.value === '' && recurringType.value.trim() === '') {\r\n\t// \t\tsetRecurringType({ ...recurringType, error: 'Please select recurring type' });\r\n  //   }else{\r\n  //     dispatch(createStylistSettingsAction({id:stylistId,recurringType: recurringType.value}))\r\n  //   }\r\n  // },[recurringType.value])\r\n\r\n\r\n\r\n  const dateHour = (date,hour)=>{\r\n\t\tlet datetimeA = moment(date + \" \" + hour);\r\n\t\treturn datetimeA.toISOString()\r\n\t}\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (date === \"\") {\r\n      setDateError(\"Date required\")\r\n    } else if (startTime === \"\") {\r\n      setStartTimeError(\"Time Required\")\r\n    } else if (!service) {\r\n      setServiceError(\"Please Select Service\")\r\n    } else if (requiredTime === \"\") {\r\n      setRequiredTimeError(\"Time Required\")\r\n    } else if (name === \"\") {\r\n      setNameError(\"Please enter name\")\r\n    } else if (email === \"\") {\r\n      setEmailError(\"Please enter email\")\r\n    } else if(!validateEmail(email)){\r\n      setEmailError(\"Please enter valid email\")\r\n    }else if (phone === \"\") {\r\n      setPhoneError(\"Please enter phone no.\")\r\n    } else if (gender === \"\") {\r\n      setGenderError(\"Please enter your gender\")\r\n    } else {\r\n      const data = {\r\n        \"name\": name,\r\n        \"appointmentDate\": dateHour(moment(date).format('l'),moment(startTime, \"hh:mm\").format(\"HH:mm\")),\r\n        \"stylistId\": stylistId,\r\n        \"salon\": salon,\r\n        \"user\": userId,\r\n        \"isNewUser\": userId ? false : true,\r\n        // \"salon\": \"61c305ce3ec74d504ed67e66\",\r\n        \"email\": email,\r\n        \"gender\": gender,\r\n        \"mobile\": unMasking(phone),\r\n        \"time\": moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        slotId: slotId,\r\n        \"timeData\": {\r\n          \"id\": timeSlotId,\r\n          \"timeAsAString\": moment(startTime, \"hh:mm\").format('hh:mm a'),\r\n          \"timeAsADate\": moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        },\r\n        \"availability\": slotId,\r\n        \"mainService\": serviceIds.mainServiceId,\r\n        \"requiredDuration\": requiredTime,\r\n        \"subService\": serviceIds.subServiceId\r\n      }\r\n      dispatch(addAppointmentAction(data, stylistId));\r\n\r\n      setAddModalActive(false);\r\n      setDateError(\"\");\r\n      setStartTimeError('');\r\n      setServiceError('');\r\n      setRequiredTimeError('');\r\n      setNameError('');\r\n      setEmailError('');\r\n      setPhoneError('');\r\n      setBusinessHours({});\r\n      setStartTime(\"\");\r\n      setService(\"\");\r\n      setDate(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n      setRequiredTime(\"\");\r\n    }\r\n  }\r\n\r\n  const handleUpdateSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (date === \"\") {\r\n      setDateError(\"Date required\")\r\n    } else if (startTime === \"\") {\r\n      setStartTimeError(\"Time Required\")\r\n    } else if (service === \"\") {\r\n      setServiceError(\"Please Select Service\")\r\n    } else if (requiredTime === \"\") {\r\n      setRequiredTimeError(\"Time Required\")\r\n    } else if (name === \"\") {\r\n      setNameError(\"Please enter name\")\r\n    } else if (email === \"\") {\r\n      setEmailError(\"Please enter email\")\r\n    } else if(!validateEmail(email)){\r\n      setEmailError(\"Please enter valid email\")\r\n    } else if (phone === \"\") {\r\n      setPhoneError(\"Please enter phone no.\")\r\n    } else if (gender === \"\") {\r\n      setGenderError(\"Please enter your gender\")\r\n    } else {\r\n      const data = {\r\n        \"appointmentDate\": date,\r\n        \"stylistId\": stylistId,\r\n        \"user\": userId,\r\n        \"salon\": salon,\r\n        \"salon\": \"61c305ce3ec74d504ed67e66\",\r\n        \"isNewUser\": false,\r\n        \"slotStatus\": slotStatus,\r\n        \"name\": name,\r\n        \"email\": email,\r\n        \"gender\": gender,\r\n        \"mobile\": unMasking(phone),\r\n        \"id\": appointmentId,\r\n        \"availability\": slotId,\r\n        \"timeData\": {\r\n          \"id\": timeSlotId,\r\n          \"timeAsAString\": moment(startTime, \"hh:mm\").format('hh:mm a'),\r\n          \"timeAsADate\": moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        },\r\n        // \"availability\":name._id,\r\n        //\"mainService\": service._id,\r\n        \"mainService\": serviceIds.mainServiceId,\r\n        \"requiredDuration\": requiredTime,\r\n        \"subService\": serviceIds.subServiceId\r\n      }\r\n\r\n      dispatch(addAppointmentAction(data, stylistId));\r\n\r\n      setAddModalActive(false);\r\n\r\n    }\r\n  }\r\n\r\n  const convertMinutes = (str) => {\r\n    var date = new Date(str);\r\n    let time = moment(date, \"hh:mm\").format(\"HH:mm\");\r\n    return time;\r\n  };\r\n\r\n  const handleCreateSlot = (e) => {\r\n    e.preventDefault()\r\n    if (date === '') {\r\n      setDateError('Please enter a slot date')\r\n    } else if (!startTime.trim() || startTime.trim() === '') {\r\n      setStartTimeError('Please enter a slot time')\r\n\r\n    } else {\r\n\r\n      let data = {\r\n        time: startTime,\r\n        date: date\r\n      }\r\n      dispatch(addDailyAvailabilityAction(data, stylistId));\r\n    }\r\n  };\r\n\r\n  const handleUpdateSlot = (e) => {\r\n    e.preventDefault()\r\n    let data = {\r\n      time: startTime,\r\n      date: date,\r\n      slotId: slotId,\r\n      appointmentId: appointmentId,\r\n      appointmentList: appointmentList,\r\n      \"timeData\": {\r\n        \"id\": timeSlotId,\r\n        \"timeAsAString\": moment(startTime, \"hh:mm\").format('hh:mm a'),\r\n        \"timeAsADate\": moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n      },\r\n    }\r\n    dispatch(\r\n      addDailyAvailabilityAction(data, stylistId)\r\n    );\r\n  };\r\n\r\n  const unBlockHandler = (date) => {\r\n    let data = {\r\n      time: convertMinutes(date),\r\n      date: moment(date).format(\"MM-DD-YYYY\"),\r\n\r\n    }\r\n    dispatch(\r\n      addDailyAvailabilityAction(data, stylistId)\r\n    );\r\n  };\r\n\r\n  const addBuinessHoursClick = (event) => {\r\n    if (event.name === \"byWeeks\") {\r\n      setAddBuinessHoursModal(true);\r\n    }\r\n  };\r\n\r\n\r\n  const addDayAvailabilityHandler = (date) => {\r\n    let data = { date: moment(date).format(\"MM-DD-YYYY\") }\r\n    dispatch(\r\n      addDayAvailabilityAction(data, stylistId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      currentMenu={`${match.params.stylistId ? \"stylist\" : \"stylist-sessions\"}`}\r\n      headerTitle={stylistName}\r\n      addBtn={false}\r\n      addBtnText=\"Book Appointment\"\r\n      addBtnIcon=\"plus\"\r\n      addBtnClick={() => setAddModalActive(true)}\r\n      showAppointment={true}\r\n      stylistId={stylistId}\r\n      addAppointment={addAppointment}\r\n      updateAppointment={updateAppointment}\r\n      deleteAppointment={deleteAppointment}\r\n    >\r\n\r\n      <div className={StylistSessionStyles.month}>\r\n        <TempCalendar\r\n          data={{\r\n            date,\r\n            setDate,\r\n            addBuinessHoursClick,\r\n            setAddBuinessHoursModal,\r\n            match,\r\n\r\n            startTime,\r\n            setStartTime,\r\n\r\n            dispatch,\r\n            calendarRef,\r\n            calendarApi,\r\n            setCalendarApi,\r\n            appointmentId,\r\n            setAppointmentId,\r\n            getUserInfo,\r\n\r\n            store,\r\n            blankEvent,\r\n            setCreateSlotModal,\r\n            addModalActive,\r\n            setAddModalActive,\r\n\r\n            appointments,\r\n            setAppointments,\r\n            openDropdownBHours,\r\n            setOpenDropdownBHours,\r\n            businessHours,\r\n            setBusinessHours,\r\n            addDailyAvailabilitys,\r\n            addDayAvailabilitys,\r\n            setModalWaitlist,\r\n            unBlockHandler,\r\n            addDayAvailabilityHandler,\r\n            getUnblockAvailabilitys,\r\n            userLogin,\r\n            stylistId,\r\n            setDeleteModalActive,\r\n            setIsUpdate,\r\n            addAppointment,\r\n            updateAppointment,\r\n            deleteAppointment,\r\n            deleteSlot,\r\n            confirmAppointment,\r\n            publicAddAppointment, setSalon,\r\n            setAddSlotModal,\r\n            setAppointmentTime,\r\n            addDailyAvailabilitys,\r\n            addBulkAvailabilitys,\r\n            setSlotId,\r\n            setTimeSlotId,\r\n            slotId,\r\n            timeSlotId,\r\n            setAppointmentList\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <CreateSlot\r\n        data={{\r\n          createSlotModal,\r\n          handleAddModalClose,\r\n          handleCreateSlot,\r\n          date, setDate,\r\n          startTime, setStartTime,\r\n          startTimeError, setStartTimeError,\r\n          dateError, setDateError,\r\n          isUpdate, handleUpdateSlot\r\n        }}\r\n      />\r\n      <WaitlistModal\r\n        data={{\r\n          modalWaitlist,\r\n          dispatch, slotId, setAppointmentId,\r\n          availabilityAppointment, appointmentStatusList,\r\n          WaitlistModalClose, setDeleteAptModal,\r\n          setIsUpdate, setAddModalActive,\r\n          setAppointmentDetail, setUpdateWaitlistModal, setDate,\r\n          setStartTime, setService, setName, setEmail, setPhone, setGender,\r\n          setAppointmentId, serviceIds, setServiceIds, setSalon,\r\n          addAppointment, setRequiredTime, setSlotStatus, changeSlotStatus, setChangeSlotStatus, setTimeSlotId\r\n        }}\r\n      />\r\n\r\n      <AddAvailability\r\n        data={{\r\n          addModalActive,\r\n          handleAddModalClose,\r\n          handleSubmit,\r\n          selectUpdateModel,\r\n          setUserId,\r\n\r\n          date,\r\n          setDate,\r\n\r\n          dateError,\r\n          setDateError,\r\n\r\n          name,\r\n          email,\r\n          phone,\r\n\r\n          setName,\r\n          setEmail,\r\n          setPhone,\r\n\r\n          nameError,\r\n          phoneError,\r\n          emailError,\r\n\r\n          setNameError,\r\n          setPhoneError,\r\n          setEmailError,\r\n\r\n          startTime,\r\n          setStartTime,\r\n          startTimeError,\r\n          setStartTimeError,\r\n\r\n          requiredTime,\r\n          setRequiredTime,\r\n          requiredTimeError,\r\n          setRequiredTimeError,\r\n\r\n          service,\r\n          setService,\r\n          serviceError,\r\n          setServiceError,\r\n          setSelectUpdateModel,\r\n          isUpdate,\r\n          handleUpdateSubmit,\r\n          gender,\r\n          setGender,\r\n          appointmentDetail,\r\n          serviceIds,\r\n          setServiceIds,\r\n          genderError, setGenderError\r\n        }}\r\n      />\r\n      <DeleteAppointmentModal\r\n        data={{ deleteAptModal, setDeleteAptModal, appointmentId, dispatch }}\r\n      />\r\n\r\n      <DeleteAvailability\r\n        data={{\r\n\r\n          deleteModalActive,\r\n          setDeleteModalActive,\r\n          handleAddModalClose,\r\n          selectUpdateModel,\r\n          setUserId,\r\n          appointmentId,\r\n          userLogin,\r\n          dispatch,\r\n          appointmentTime\r\n        }}\r\n      />\r\n\r\n      <AddBusinessHoursWeekly\r\n        data={{\r\n          businessHourDetail,\r\n          weekDays,\r\n          setWeekDays,\r\n          stylistId,\r\n          addBuinessHoursModal,\r\n          setAddBuinessHoursModal,\r\n          addBulkAvailabilitys,\r\n          setresetHandler,\r\n          resetHandler,\r\n          setresetslot,\r\n          handleResetSlot,\r\n          recurringType, setRecurringType\r\n        }}\r\n      />\r\n\r\n      <AddSlotModal\r\n        data={{\r\n          addSlotModal,\r\n          setAddSlotModal,\r\n          handleAddModalClose,\r\n          setUserId,\r\n          appointmentId,\r\n          appointmentTime,\r\n          convertMinutes,\r\n          unBlockHandler,\r\n          userLogin,\r\n          dispatch,\r\n          isUpdate\r\n        }}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default StylistSessionScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceCategoriesScreen\\index.js",["1897","1898","1899","1900","1901","1902","1903","1904","1905"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tcreateServiceAction,\r\n\tdeleteServiceAction,\r\n\tgetAllServiceCategoriesAction,\r\n\tchangeServiceStatusAction\r\n} from '../../redux/actions/serviceActions';\r\nimport {\r\n\tADD_SERVICE_CATEGORY_RESET,\r\n\tDELETE_SERVICE_CATEGORY_RESET,\r\n\tGET_ALL_SERVICE_CATEGORY_RESET,\r\n\tSERVICE_CATEGORY_STATUS_RESET\r\n} from '../../redux/constants/serviceConstants';\r\nimport NoData from '../../website/components/NoData';\r\nimport AddService from '../ServiceScreen/AddService';\r\nimport DeleteService from '../ServiceScreen/DeleteService';\r\nimport ServiceStyle from './ServiceCategories.module.css';\r\n\r\nconst ServiceCategoriesScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\r\n\tconst getAllServiceCategories = useSelector((state) => state.getAllServiceCategories);\r\n\tconst createService = useSelector((state) => state.createService);\r\n\tconst deleteService = useSelector((state) => state.deleteService);\r\n\tconst changeServiceStatus = useSelector((state) => state.changeServiceStatus);\r\n\r\n\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\r\n\r\n\tconst [id, setServiceId] = useState('');\r\n\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [titleError, setTitleError] = useState('');\r\n\tconst [isMainService, setIsMainService] = useState(true);\r\n\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [descriptionError, setDescriptionError] = useState('');\r\n\tconst [charges, setCharges] = useState('');\r\n\tconst [chargesError, setChargesError] = useState('');\r\n\tconst [service, setService] = useState('');\r\n\tconst [serviceError, setServiceError] = useState('');\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createService && createService.category && createService.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(createService.category.message);\r\n\t\t\t\tdispatch({ type: ADD_SERVICE_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createService && createService.category && !createService.category.status) {\r\n\t\t\t\tdispatch({ type: ADD_SERVICE_CATEGORY_RESET });\r\n\t\t\t\ttoast.error(createService.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createService, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteService && deleteService.category && deleteService.category.status) {\r\n\t\t\t\ttoast.success(deleteService.category.message);\r\n\t\t\t\tdispatch({ type: SERVICE_CATEGORY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteService && deleteService.category && !deleteService.category.status) {\r\n\t\t\t\ttoast.error(deleteService.category.message);\r\n\t\t\t\tdispatch({ type: SERVICE_CATEGORY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteService, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeServiceStatus && changeServiceStatus.category && changeServiceStatus.category.status) {\r\n\t\t\t\ttoast.success(changeServiceStatus.category.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: DELETE_SERVICE_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeServiceStatus && changeServiceStatus.category && !changeServiceStatus.category.status) {\r\n\t\t\t\ttoast.error(changeServiceStatus.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_SERVICE_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeServiceStatus, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleEditButton = (d) => {\r\n\t\tsetServiceId(d._id);\r\n\t\tsetDescription(d.description);\r\n\t\tsetCharges(d.charges);\r\n\t\tsetTitle(d.title);\r\n\t\tsetSelectUpdateModel(d);\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetServiceId('');\r\n\t\tsetDescription('');\r\n\t\tsetCharges('');\r\n\t\tsetTitle('');\r\n\t\tsetDescriptionError('');\r\n\t\tsetChargesError('');\r\n\t\tsetTitleError('');\r\n\t\tsetService('');\r\n\t\tsetServiceError('');\r\n\t\tsetSelectUpdateModel('');\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (title === '' && title.trim() === '') {\r\n\t\t\tsetTitleError('Please enter title');\r\n\t\t} else {\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tdispatch(createServiceAction({ id, title, isMainService, description, charges }));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(createServiceAction({ title, isMainService, description, charges }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(\r\n\t\t\tchangeServiceStatusAction(id, {\r\n\t\t\t\tenable: enableStatus ? false : true\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteServiceAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getAllServiceCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='services'\r\n\t\t\theaderTitle='Service'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add Service'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Service...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{getAllServiceCategories && getAllServiceCategories.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{getAllServiceCategories &&\r\n\t\t\t\t\t\tgetAllServiceCategories.categories &&\r\n\t\t\t\t\t\tgetAllServiceCategories.categories.data &&\r\n\t\t\t\t\t\tgetAllServiceCategories.categories.data.result &&\r\n\t\t\t\t\t\tgetAllServiceCategories.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div className='tableContainer' style={{ height: '65vh' }}>\r\n\t\t\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Service Title</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<th>Active Status</th>\r\n\t\t\t\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{getAllServiceCategories && getAllServiceCategories.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories &&\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories.categories &&\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories.categories.data &&\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories.categories.data.result &&\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories.categories.data.result.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\tgetAllServiceCategories.categories.data.result.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.title}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(res)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit Service Details</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Service</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubTitle='We could not find any service category data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<AddService\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tselectUpdateModel,\r\n\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tdescription,\r\n\t\t\t\t\tisMainService,\r\n\t\t\t\t\tcharges,\r\n\r\n\t\t\t\t\tsetTitle,\r\n\t\t\t\t\tsetDescription,\r\n\t\t\t\t\tsetCharges,\r\n\r\n\t\t\t\t\ttitleError,\r\n\t\t\t\t\tchargesError,\r\n\t\t\t\t\tdescriptionError,\r\n\r\n\t\t\t\t\tsetTitleError,\r\n\t\t\t\t\tsetChargesError,\r\n\t\t\t\t\tsetDescriptionError,\r\n\r\n\t\t\t\t\tservice,\r\n\t\t\t\t\tsetService,\r\n\t\t\t\t\tserviceError,\r\n\t\t\t\t\tsetServiceError,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteService data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ServiceCategoriesScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\index.js",["1906","1907","1908","1909","1910","1911","1912","1913"],"import React, { useEffect, useState } from \"react\";\r\nimport ProgressForm from \"../../components/ProgressForm\";\r\nimport BusinessHours from \"./BusinessHours\";\r\nimport \"./onboarding.css\";\r\nimport Payment from \"./Payment\";\r\nimport SalonInfo from \"./SalonInfo\";\r\nimport StylistDetails from \"./StylistDetails\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onBoardNewUserAction } from \"../../redux/actions/onboardingActions\";\r\nimport \"./onboarding.css\";\r\nimport imgSrc from \"../../components/assets/check.gif\";\r\nimport Button from \"../../components/formInputs/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddStylistModal from \"./AddStylistModal\";\r\nimport Subscription from \"./Subscription\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { getEnableSubscriptionAction } from \"../../redux/actions/subscriptionAction\";\r\nimport { unMasking } from \"../../utils/validators\";\r\n\r\nconst OnBoarding = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst [currentStep, setCurrentStep] = React.useState(1);\r\n\tconst [recurringType, setRecurringType] = useState(\"month\");\r\n\tconst [state, setState] = React.useState({\r\n\t\tstep1: {\r\n\t\t\tname: { value: \"\", error: \"\" },\r\n\t\t\temail: { value: \"\", error: \"\" },\r\n\t\t\tphone: { value: \"\", error: \"\" },\r\n\t\t\tcountryCode: { value: \"\", error: \"\" },\r\n\t\t\taddress: { value: \"\", error: \"\" },\r\n\t\t\tpassword: { value: \"\", error: \"\" },\r\n\t\t\tpasswordConfirm: { value: \"\", error: \"\" },\r\n\t\t\tmultiRole: {\r\n\t\t\t\tvalue: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\t// step2: { selectedPackage: { value: {}, error: \"\" } },\r\n\t\tstep2: {\r\n\t\t\tstylist: [],\r\n\t\t\tcheckboxState: {\r\n\t\t\t\tstatus: false,\r\n\t\t\t\temail: \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tstep3: [\r\n\t\t\t{ day: \"Sun\", slot: [] },\r\n\t\t\t{ day: \"Mon\", slot: [] },\r\n\t\t\t{ day: \"Tue\", slot: [] },\r\n\t\t\t{ day: \"Wed\", slot: [] },\r\n\t\t\t{ day: \"Thu\", slot: [] },\r\n\t\t\t{ day: \"Fri\", slot: [] },\r\n\t\t\t{ day: \"Sat\", slot: [] },\r\n\t\t],\r\n\t\tstep4: { paymentData: {} },\r\n\t});\r\n\r\n\tconst onBoardComplete = useSelector((state) => state.onBoardComplete);\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [couponData, setCouponData] = useState({});\r\n\r\n\t\r\n\r\n\t// useEffect(() => {\r\n\t// \tdispatch(getEnableSubscriptionAction());\r\n\t// }, []);\r\n\r\n\r\n\tconst navigateLogin = () => {\r\n\t\thistory.push(\"/login\");\r\n\t};\r\n\r\n\tconst handleSubmit = (paymentData) => {\r\n\t\tconst salon = {\r\n\t\t\tname: state.step1.name.value,\r\n\t\t\temail: state.step1.email.value,\r\n\t\t\tphone: unMasking(state.step1.phone.value),\r\n\t\t\tcountryCode: state.step1.countryCode.value,\r\n\t\t\taddress: state.step1.address.value,\r\n\t\t\tpassword: state.step1.password.value,\r\n\t\t\tmultiRole: state.step1.multiRole.value,\r\n\t\t};\r\n\t\tlet formData = {\r\n\t\t\tsalon,\r\n\t\t\tstylist: state.step2.stylist,\r\n\t\t\t maxCalendar: 1,\r\n\t\t\tbusinessHours: state.step3,\r\n\t\t\tpayment: paymentData,\r\n\t\t\tsubscription: {\r\n\t\t\t\tpackage: state.step4.package,\r\n\t\t\t\tplan: state.step4.plan,\r\n\t\t\t\tquantity: state.step4.quantity,\r\n\t\t\t\tmaxCalendar: 1\r\n\t\t\t},\r\n\t\t};\r\n\t\tdispatch(onBoardNewUserAction(formData));\r\n\t};\r\n\r\n\t//to next screen\r\n\tconst nextStep = () => {\r\n\t\tsetCurrentStep((previousStep) => previousStep + 1);\r\n\t};\r\n\r\n\t//to previous screen\r\n\tconst prevStep = () => {\r\n\t\tsetCurrentStep((previousStep) => previousStep - 1);\r\n\t};\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\tconst multiForm = () => {\r\n\t\tswitch (currentStep) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<SalonInfo\r\n\t\t\t\t\t\tnextStep={nextStep}\r\n\t\t\t\t\t\tsetState={setState}\r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\tnavigateLogin={navigateLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t// <Payment\r\n\t\t\t\t\t// \tprevStep={prevStep}\r\n\t\t\t\t\t// \thandleSubmit={handleSubmit}\r\n\t\t\t\t\t// \tsetState={setState}\r\n\t\t\t\t\t// \tstate={state}\r\n\t\t\t\t\t// \tcouponData={couponData}\r\n\t\t\t\t\t// \tsetCouponData={setCouponData}\r\n\t\t\t\t\t// \tnavigateLogin={navigateLogin}\r\n\t\t\t\t\t// />\r\n\t\t\t\t);\r\n\r\n\t\t\t// case 2:\r\n\t\t\t// \treturn (\r\n\t\t\t// \t\t<Subscription\r\n\t\t\t// \t\t\tprevStep={prevStep}\r\n\t\t\t// \t\t\tnextStep={nextStep}\r\n\t\t\t// \t\t\trecurringType={recurringType}\r\n\t\t\t// \t\t\tsetRecurringType={setRecurringType}\r\n\t\t\t// \t\t\tsetState={setState}\r\n\t\t\t// \t\t\tstate={state}\r\n\t\t\t// \t\t\tnavigateLogin={navigateLogin}\r\n\t\t\t// \t\t/>\r\n\t\t\t// \t);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<StylistDetails\r\n\t\t\t\t\t\tnextStep={nextStep}\r\n\t\t\t\t\t\tprevStep={prevStep}\r\n\t\t\t\t\t\tsetState={setState}\r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\tnavigateLogin={navigateLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<BusinessHours\r\n\t\t\t\t\t\tprevStep={prevStep}\r\n\t\t\t\t\t\tnextStep={nextStep}\r\n\t\t\t\t\t\tdata={state.step3}\r\n\t\t\t\t\t\tnavigateLogin={navigateLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Payment\r\n\t\t\t\t\t\tprevStep={prevStep}\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\tsetState={setState}\r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\tcouponData={couponData}\r\n\t\t\t\t\t\tsetCouponData={setCouponData}\r\n\t\t\t\t\t\tnavigateLogin={navigateLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"onboarding\"\r\n\t\t\tstyle={{ backgroundImage: \"url('./assets/39084.png')\" }}\r\n\t\t>\r\n\t\t\t<div className=\"onboarding-container\">\r\n\t\t\t\t<div className=\"onboard_img\"></div>\r\n\t\t\t\t<div className=\"onboard_container\">\r\n\t\t\t\t\t{onBoardComplete && onBoardComplete.loading ? (\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{onBoardComplete &&\r\n\t\t\t\t\t\t\tonBoardComplete.data &&\r\n\t\t\t\t\t\t\tonBoardComplete.data.status ? (\r\n\t\t\t\t\t\t\t\t<div className=\"congrats_onboard_container\">\r\n\t\t\t\t\t\t\t\t\t<h1 style={{color: 'white'}}>You made it!</h1>\r\n\t\t\t\t\t\t\t\t\t<div className=\"congrats_list\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"congrats_btn_list1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sub-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 style={{color: 'white'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSalon created successfully\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={imgSrc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"50px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"congrats_btn_list2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sub-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 style={{color: 'white'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tStylist created successfully\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={imgSrc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"50px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"congrats_btn_list3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sub-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 style={{color: 'white'}}>Payment successfull</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={imgSrc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"50px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Login\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={navigateLogin}\r\n\t\t\t\t\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<ProgressForm step={currentStep} />\r\n\t\t\t\t\t\t\t\t\t{multiForm()}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<AddStylistModal\r\n\t\t\t\tprops={{\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\tstate,\r\n\t\t\t\t\tsetState,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OnBoarding;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductsList\\index.js",["1914","1915","1916","1917","1918","1919","1920","1921"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\index.js",["1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Content from \"../../components/Content/Content\";\r\nimport UsersData from \"./UsersData\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport CreateUser from \"./CreateUser\";\r\nimport {\r\n  activeUserAction,\r\n  addMessageAction,\r\n  addNotesAction,\r\n  createNewUserAction,\r\n  deleteUserAction,\r\n  getUserListAction,\r\n  getUsersAction,\r\n  logout,\r\n  logOutUserAction,\r\n} from \"../../redux/actions/userActions\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport { getStylistListAction } from \"../../redux/actions/stylistActions\";\r\nimport { STYLER_RESET } from \"../../redux/constants/stylistConstants\";\r\nimport {\r\n  ADD_MESSAGE_RESET,\r\n  ADD_NOTES_RESET,\r\n  CHANGE_PASSWORD_USER_RESET,\r\n  CHANGE_STATUS_USER_RESET,\r\n  CREATE_NEW_USER_RESET,\r\n  DELETE_USER_RESET,\r\n  LOGOUT_USER_RESET,\r\n} from \"../../redux/constants/userConstants\";\r\nimport {\r\n  inputPhoneMasking,\r\n  unMasking,\r\n  validateEmail,\r\n  validateOnlyNumber,\r\n  validatePhone,\r\n} from \"../../utils/validators\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport AddNotes from \"./AddNotes\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport NoData from \"../../website/components/NoData\";\r\nimport LogOutUser from \"../../components/Modal/LogOutUser\";\r\n\r\nconst UsersScreen = ({ showFilter = false, history }) => {\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userLogin);\r\n  const userRole = useSelector((state) => state.getUserInfo);\r\n  const userList = useSelector((state) => state.userList);\r\n  const stylistList = useSelector((state) => state.stylistList);\r\n  const createUser = useSelector((state) => state.createUser);\r\n  const deleteUser = useSelector((state) => state.deleteUser);\r\n  const changeStatusUser = useSelector((state) => state.changeStatusUser);\r\n  const changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n  const sendMessageUser = useSelector((state) => state.sendMessageUser);\r\n  const addNotesUser = useSelector((state) => state.addNotesUser);\r\n  const logOutUser = useSelector((state) => state.logOutUser);\r\n\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [modalDeleteState, setModalDeleteState] = useState(false);\r\n  const [modalDoumentState, setModalDoumentState] = useState(false);\r\n  const [selectUpdateModelUser, setSelectUpdateModelUser] = useState({});\r\n  const [addNotesModal, setAddNotesModal] = useState(false);\r\n  const [sendMessageModal, setSendMessageModal] = useState(false);\r\n  const [modalLogOutUserState, setModalLogOutUserState] = useState(false);\r\n  const [onDeleteModalClose, setOnDeleteModalClose] = useState(false);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [_id, setUserId] = useState(\"\");\r\n  const [totalPageSize, setTotalPageSize] = useState(1);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageLimit = 15;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [genderError, setGenderError] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [notesError, setNotesError] = useState(\"\");\r\n  const [messageTitle, setMessageTitle] = useState(\"\");\r\n  const [messageTitleError, setMessageTitleError] = useState(\"\");\r\n  const [messageHead, setMessageHead] = useState(\"\");\r\n  const [messageError, setMessageError] = useState(\"\");\r\n  const [stylist, setStylist] = useState(\"\");\r\n  const [stylistIdError, setStylistError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userRole &&\r\n      userRole.userInfo &&\r\n      !userRole.userInfo.status &&\r\n      userRole.userInfo.code === \"invalid_token\"\r\n    ) {\r\n      dispatch(logout());\r\n      toast.error(userRole.userInfo.message);\r\n      history.push(\"/login\");\r\n    } else if (\r\n      userRole &&\r\n      userRole.userInfo &&\r\n      !userRole.userInfo.status &&\r\n      userRole.userInfo.message === \"jwt malformed\"\r\n    ) {\r\n      dispatch(logout());\r\n      toast.error(userRole.userInfo.message);\r\n      history.push(\"/login\");\r\n    } else if (\r\n      userRole &&\r\n      userRole.userInfo &&\r\n      userRole.userInfo.data &&\r\n      userRole.userInfo.data.role === \"user\"\r\n    ) {\r\n      dispatch(logout());\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userRole, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userList &&\r\n      userList.userInfo &&\r\n      userList.userInfo.status &&\r\n      userList.userInfo.data.result.length > 0\r\n    ) {\r\n      setTotalPageSize(userList.userInfo.data.totalPageSize);\r\n    } else if (\r\n      userList &&\r\n      userList.userInfo &&\r\n      !userList.userInfo.status &&\r\n      userList.userInfo.code === \"invalid_token\"\r\n    ) {\r\n      dispatch(logout());\r\n      toast.error(userList.userInfo.message);\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userList]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.data && userInfo.data.token) {\r\n      dispatch({ type: STYLER_RESET });\r\n      dispatch(\r\n        getStylistListAction({ pageNumber: 1, pageSize: 1000, filter: \"\" })\r\n      );\r\n    } else\r\n      dispatch(\r\n        getStylistListAction({ pageNumber: 1, pageSize: 1000, filter: \"\" })\r\n      );\r\n  }, [userInfo, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (createUser && createUser.userInfo && createUser.userInfo.status) {\r\n      clearData();\r\n      setShowAddModal(false);\r\n      setSearch(\"\");\r\n      toast.success(createUser.userInfo.message);\r\n      dispatch({ type: CREATE_NEW_USER_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    } else if (\r\n      createUser &&\r\n      createUser.userInfo &&\r\n      !createUser.userInfo.status\r\n    ) {\r\n      dispatch({ type: CREATE_NEW_USER_RESET });\r\n      toast.error(createUser.userInfo.message);\r\n    }\r\n  }, [createUser, pageNumber, pageLimit, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      sendMessageUser &&\r\n      sendMessageUser.userInfo &&\r\n      sendMessageUser.userInfo.status\r\n    ) {\r\n      toast.success(sendMessageUser.userInfo.message);\r\n      clearData();\r\n      setShowAddModal(false);\r\n      dispatch({ type: ADD_MESSAGE_RESET });\r\n      handleMessageClose();\r\n    } else if (\r\n      sendMessageUser &&\r\n      sendMessageUser.userInfo &&\r\n      !sendMessageUser.userInfo.status\r\n    ) {\r\n      toast.error(sendMessageUser.userInfo.message);\r\n      clearData();\r\n      setShowAddModal(false);\r\n      dispatch({ type: ADD_MESSAGE_RESET });\r\n      handleMessageClose();\r\n    }\r\n  }, [sendMessageUser, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUser && deleteUser.userInfo && deleteUser.userInfo.status) {\r\n      toast.success(deleteUser.userInfo.message);\r\n      setSelectUpdateModelUser({});\r\n      dispatch({ type: DELETE_USER_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    } else if (\r\n      deleteUser &&\r\n      deleteUser.userInfo &&\r\n      !deleteUser.userInfo.status\r\n    ) {\r\n      toast.error(deleteUser.userInfo.message);\r\n      dispatch({ type: DELETE_USER_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    }\r\n  }, [deleteUser, pageNumber, pageLimit, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      changeStatusUser &&\r\n      changeStatusUser.userInfo &&\r\n      changeStatusUser.userInfo.status\r\n    ) {\r\n      toast.success(changeStatusUser.userInfo.message);\r\n      setSelectUpdateModelUser({});\r\n      dispatch({ type: CHANGE_STATUS_USER_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    } else if (\r\n      changeStatusUser &&\r\n      changeStatusUser.userInfo &&\r\n      !changeStatusUser.userInfo.status\r\n    ) {\r\n      toast.error(changeStatusUser.userInfo.message);\r\n      dispatch({ type: CHANGE_STATUS_USER_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    }\r\n  }, [changeStatusUser, pageNumber, pageLimit, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      changePasswordUser &&\r\n      changePasswordUser.userInfo &&\r\n      changePasswordUser.userInfo.status\r\n    ) {\r\n      toast.success(changePasswordUser.userInfo.message);\r\n      setSelectUpdateModelUser({});\r\n      dispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n    } else if (\r\n      changePasswordUser &&\r\n      changePasswordUser.userInfo &&\r\n      !changePasswordUser.userInfo.status\r\n    ) {\r\n      toast.error(changePasswordUser.userInfo.message);\r\n      dispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n    }\r\n  }, [changePasswordUser, pageNumber, pageLimit, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      sendMessageUser &&\r\n      sendMessageUser.userInfo &&\r\n      sendMessageUser.userInfo.status\r\n    ) {\r\n      toast.success(sendMessageUser.userInfo.message);\r\n      handleMessageClose();\r\n      dispatch({ type: ADD_MESSAGE_RESET });\r\n    } else if (\r\n      changePasswordUser &&\r\n      changePasswordUser.userInfo &&\r\n      !changePasswordUser.userInfo.status\r\n    ) {\r\n      toast.error(sendMessageUser.userInfo.message);\r\n      dispatch({ type: ADD_MESSAGE_RESET });\r\n      handleMessageClose();\r\n    }\r\n  }, [sendMessageUser, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (addNotesUser && addNotesUser.userInfo && addNotesUser.userInfo.status) {\r\n      toast.success(addNotesUser.userInfo.message);\r\n      handleAddNotesModalClose();\r\n      dispatch({ type: ADD_NOTES_RESET });\r\n      dispatch(\r\n        getUserListAction({\r\n          pageNumber: pageNumber,\r\n          pageSize: pageLimit,\r\n          filter: \"\",\r\n        })\r\n      );\r\n    } else if (\r\n      changePasswordUser &&\r\n      changePasswordUser.userInfo &&\r\n      !changePasswordUser.userInfo.status\r\n    ) {\r\n      toast.error(addNotesUser.userInfo.message);\r\n      dispatch({ type: ADD_NOTES_RESET });\r\n    }\r\n  }, [addNotesUser, dispatch]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (logOutUser && logOutUser.userInfo && logOutUser.userInfo.status) {\r\n        toast.success(logOutUser.userInfo.message);\r\n        setSelectUpdateModelUser({});\r\n        dispatch({ type: LOGOUT_USER_RESET });\r\n      } else if (\r\n        logOutUser &&\r\n        logOutUser.userInfo &&\r\n        !logOutUser.userInfo.status\r\n      ) {\r\n        toast.error(logOutUser.userInfo.message);\r\n        dispatch({ type: LOGOUT_USER_RESET });\r\n      }\r\n    },\r\n    // eslint-disable-next-line\r\n    [logOutUser, dispatch]\r\n  );\r\n\r\n  const handleAddModalClose = () => {\r\n    clearData();\r\n    setShowAddModal(false);\r\n  };\r\n\r\n  const handleAddNotesModalClose = () => {\r\n    setAddNotesModal(false);\r\n  };\r\n\r\n  const clearData = () => {\r\n    setSelectUpdateModelUser({});\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setStylist(\"\");\r\n    setName(\"\");\r\n    setStylist(\"\");\r\n    setGender(\"\");\r\n    setEmailError(\"\");\r\n    setPhoneError(\"\");\r\n    setStylistError(\"\");\r\n    setNameError(\"\");\r\n    setNotes(\"\");\r\n    setNotesError(\"\");\r\n    // setAge('');\r\n    // setAgeError('');\r\n    // setDOB('');\r\n    // setDOBError('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\" && name.trim() === \"\") {\r\n      setNameError(\"Please enter name\");\r\n    } else if (email === \"\" && email.trim() === \"\") {\r\n      setEmailError(\"Please enter email address\");\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError(\"Please enter valid email\");\r\n    } else if (phone === \"\" && phone.trim() === \"\") {\r\n      setPhoneError(\"Please enter phone\");\r\n    } else if (!validatePhone(unMasking(phone))) {\r\n      setPhoneError(\"Phone number must be 10 digits\");\r\n    } else if (gender === \"\" && gender.trim() === \"\") {\r\n      setGenderError(\"Please select gender.\");\r\n    }\r\n    // else if (stylist === '' && stylist.trim() === '') {\r\n    // \tsetStylistError('Please select stylist');\r\n    // }\r\n    // else if (notes === '' && notes.trim() === '') {\r\n    // \tsetNotesError('Please add Notes');\r\n    // }\r\n    else {\r\n      if (_id !== \"\") {\r\n        dispatch(\r\n          createNewUserAction({\r\n            _id,\r\n            name,\r\n            email,\r\n            gender,\r\n            phone: unMasking(phone),\r\n            stylist,\r\n            clientNote: notes,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          createNewUserAction({\r\n            name,\r\n            email,\r\n            gender,\r\n            phone: unMasking(phone),\r\n            stylist,\r\n            clientNote: notes,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //Add Notes Handler\r\n  // const handleNoteModal = (d) => {\r\n  //   // setAddNotesModal(true)\r\n  //   setUserId(d);\r\n  // };\r\n\r\n  // const handleNotesSubmit = useCallback(\r\n  //   (id) => {\r\n  //     if (notes === \"\") {\r\n  //       setNotesError(\"Please add notes\");\r\n  //     } else {\r\n  //       let data = {\r\n  //         userNote: notes,\r\n  //       };\r\n  //       dispatch(addNotesAction(id, data))\r\n  //         .then(() => {\r\n  //           dispatch(\r\n  //             getUserListAction({\r\n  //               pageNumber: pageNumber,\r\n  //               pageSize: pageLimit,\r\n  //               filter: \"\",\r\n  //             })\r\n  //           );\r\n  //         })\r\n  //         .catch((error) => {\r\n  //           console.error(\"Error adding notes:\", error);\r\n  //         });\r\n  //     }\r\n  //   },\r\n  //   [dispatch, notes, pageNumber]\r\n  // );\r\n\r\n  //Add Message Handler\r\n  const handleMessageClose = () => {\r\n    setSendMessageModal(false);\r\n    setMessageHead(\"\");\r\n    setMessageTitle(\"\");\r\n    setMessageError(\"\");\r\n    setMessageTitleError(\"\");\r\n    setUserId(\"\");\r\n  };\r\n\r\n  const handleMessageModal = (d) => {\r\n    setUserId(d._id);\r\n    setSendMessageModal(true);\r\n  };\r\n\r\n  const handleMessageSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (messageHead === \"\") {\r\n      setMessageError(\"Please Enter Message\");\r\n    } else {\r\n      let data = {\r\n        userId: _id,\r\n        message: messageHead,\r\n      };\r\n\r\n      dispatch(addMessageAction(data));\r\n    }\r\n  };\r\n\r\n  //Add Notes Handler\r\n  const handleNoteModal = (d) => {\r\n    // setAddNotesModal(true)\r\n    setUserId(d);\r\n  };\r\n  const handleNotesSubmit = (e, id) => {\r\n    e.preventDefault();\r\n    if (notes === \"\") {\r\n      setNotesError(\"Please add notes\");\r\n    } else {\r\n      // let data = {\r\n      // \tuserNote: notes,\r\n      // }\r\n      dispatch(\r\n        addNotesAction(id, {\r\n          userNote: notes,\r\n        })\r\n      )\r\n        .then(() => {\r\n          dispatch(\r\n            getUserListAction({\r\n              pageNumber: pageNumber,\r\n              pageSize: pageLimit,\r\n              filter: \"\",\r\n            })\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding notes:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onDeleteUserClose = () => {\r\n    setModalDeleteState(false);\r\n  };\r\n\r\n  const onDeleteHandler = () => {\r\n    dispatch(deleteUserAction(selectUpdateModelUser._id));\r\n    setModalDeleteState();\r\n  };\r\n\r\n  const onFormHandler = () => {\r\n    setModalDoumentState(false);\r\n  };\r\n\r\n  const onFormModalClose = () => {\r\n    setModalDoumentState(false);\r\n    setSelectUpdateModelUser({});\r\n  };\r\n\r\n  // const onChangePwdUserHandler = () => {\r\n  // \tlet d = selectUpdateModelUser;\r\n  // \tlet type = 'byAdmin';\r\n  // \tdispatch(changePasswordUserAction({ 'id': d._id, type, 'email': d.email }));\r\n  // \tonChangePwdModalClose();\r\n  // };\r\n\r\n  const handlePageChange = async (currentPage) => {\r\n    const selectedPage = currentPage.selected;\r\n    dispatch(\r\n      getUserListAction({\r\n        pageNumber: selectedPage + 1,\r\n        pageSize: pageLimit,\r\n        filter: \"\",\r\n      })\r\n    );\r\n    setPageNumber(selectedPage + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersAction());\r\n  }, []);\r\n\r\n  const handleEditModalUser = (d) => {\r\n    setUserId(d._id);\r\n    setEmail(d.email);\r\n    setPhone(inputPhoneMasking(d.phone));\r\n    setName(d.name);\r\n    // setStylist(d.stylist._id);\r\n    setGender(d.gender);\r\n    setSelectUpdateModelUser(d);\r\n    setNotes(d.clientNote);\r\n    // setAge(d.age);\r\n    // setDOB(d.dob);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const onChangeHandler = (d) => {\r\n    dispatch(\r\n      activeUserAction(d._id, {\r\n        enable: d.active ? true : false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSearchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n    if (search.trim !== \"\" && search.length > 0) {\r\n      setPageNumber(1);\r\n    }\r\n    dispatch(\r\n      getUserListAction({\r\n        pageNumber: pageNumber,\r\n        pageSize: pageLimit,\r\n        filter: event.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onLogOutUserClose = () => {\r\n    setModalLogOutUserState(false);\r\n  };\r\n\r\n  const onLogOutUserHandler = () => {\r\n    let d = selectUpdateModelUser;\r\n    let type = \"byAdmin\";\r\n    dispatch(logOutUserAction({ id: d._id, type, email: d.email }));\r\n    onLogOutUserClose();\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      currentMenu=\"users\"\r\n      headerTitle=\"Users\"\r\n      addBtn={true}\r\n      addBtnText=\"Add User\"\r\n      addBtnIcon=\"plus\"\r\n      addBtnClick={() => setShowAddModal(true)}\r\n      search={true}\r\n      searchPlaceholder=\"Search Users...\"\r\n      searchIcon=\"search\"\r\n      searchvalue={search}\r\n      searchOnChange={onSearchHandler}\r\n    >\r\n      {userList.loading ? (\r\n        <Spinner />\r\n      ) : userList &&\r\n        userList.userInfo &&\r\n        userList.userInfo.status &&\r\n        userList.userInfo.data.result &&\r\n        userList.userInfo.data.result.length > 0 ? (\r\n        <div>\r\n          <UsersData\r\n            data={userList.userInfo.data.result}\r\n            showFilter={showFilter}\r\n            notes={notes}\r\n            setNotes={setNotes}\r\n            setModalDeleteState={setModalDeleteState}\r\n            setSelectUpdateModelUser={setSelectUpdateModelUser}\r\n            handleEditModalUser={handleEditModalUser}\r\n            onChangeHandler={onChangeHandler}\r\n            setModalDoumentState={setModalDoumentState}\r\n            addNotesModal={addNotesModal}\r\n            setAddNotesModal={setAddNotesModal}\r\n            sendMessageModal={sendMessageModal}\r\n            setSendMessageModal={setSendMessageModal}\r\n            handleNoteModal={handleNoteModal}\r\n            handleMessageModal={handleMessageModal}\r\n            setUserId={setUserId}\r\n            setModalLogOutUserState={setModalLogOutUserState}\r\n          />\r\n          {totalPageSize > 1 && (\r\n            <div className=\"tableContainer--paginater\">\r\n              <Pagination\r\n                list={userList.userInfo}\r\n                onPageChange={handlePageChange}\r\n                rowsPerPage={pageLimit}\r\n                totalPageSize={totalPageSize}\r\n                pageNumber={pageNumber}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <NoData\r\n          title=\"No Data Found!\"\r\n          subTitle=\"We could not find any user data.\"\r\n          height=\"40vh\"\r\n        />\r\n      )}\r\n\r\n      <CreateUser\r\n        data={{\r\n          showAddModal,\r\n          handleAddModalClose,\r\n          handleSubmit,\r\n          name,\r\n          email,\r\n          phone,\r\n          setName,\r\n          setEmail,\r\n          setPhone,\r\n          nameError,\r\n          phoneError,\r\n          emailError,\r\n          setNameError,\r\n          setPhoneError,\r\n          setEmailError,\r\n          gender,\r\n          setGender,\r\n          setGenderError,\r\n          genderError,\r\n          // dob,\r\n          // dobError,\r\n          // setDOB,\r\n          // setDOBError,\r\n          // age,\r\n          // setAge,\r\n          // setAgeError,\r\n          // ageError,\r\n          stylist,\r\n          setStylist,\r\n          setStylistError,\r\n          stylistIdError,\r\n          stylistList,\r\n          selectUpdateModelUser,\r\n          setSelectUpdateModelUser,\r\n          notes,\r\n          setNotes,\r\n          notesError,\r\n        }}\r\n      />\r\n      <DeleteUser\r\n        data={{ modalDeleteState, onDeleteUserClose, onDeleteHandler }}\r\n      />\r\n      <LogOutUser\r\n        data={{ modalLogOutUserState, onLogOutUserClose, onLogOutUserHandler }}\r\n      />\r\n\r\n      <AddNotes\r\n        data={{\r\n          _id,\r\n          addNotesModal,\r\n          handleAddNotesModalClose,\r\n          notes,\r\n          setNotes,\r\n          notesError,\r\n          handleNotesSubmit,\r\n        }}\r\n      />\r\n      <SendMessage\r\n        data={{\r\n          messageHead,\r\n          setMessageHead,\r\n          messageTitle,\r\n          setMessageTitle,\r\n          messageError,\r\n          messageTitleError,\r\n          handleMessageClose,\r\n          handleMessageSubmit,\r\n          sendMessageModal,\r\n          setSendMessageModal,\r\n        }}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UsersScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\index.js",["1933","1934"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Content from '../../components/Content/Content';\r\nimport DeleteSalonUser from './DeleteSalonUser';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validateOnlyNumber, validatePassword, validatePhone } from '../../utils/validators';\r\nimport SalonStaffData from './SalonStaffData';\r\nimport CreateSalonStaffUser from './CreateSalonStaffUser';\r\nimport {\r\n\tCHANGE_STATUS_SALON_STAFF_RESET,\r\n\tCREATE_NEW_SALON_STAFF_RESET,\r\n\tDELETE_SALON_STAFF_RESET\r\n} from '../../redux/constants/salonStaffConstants';\r\nimport {\r\n\tchangeStatusSalonStaffAction,\r\n\tcreateNewStaffSalonAction,\r\n\tdeleteSalonStaffAction,\r\n\tgetSalonStaffListAction\r\n} from '../../redux/actions/salonStaffActions';\r\nimport { changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport { getAllEnabledSalonListAction } from '../../redux/actions/salonActions';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst SalonStaffScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst staffList = useSelector((state) => state.salonStaffList);\r\n\tconst userData = useSelector((state) => state.getUserInfo);\r\n\tconst salonList = useSelector((state) => state.salonEnabledList);\r\n\r\n\tconst createSalonStaff = useSelector((state) => state.createSalonStaff);\r\n\tconst deleteSalonStaff = useSelector((state) => state.deleteSalonStaff);\r\n\tconst changeStatusSalonStaff = useSelector((state) => state.changeStatusSalonStaff);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [id, setUserId] = useState('');\r\n\tconst [roleList, setRoleList] = useState([]);\r\n\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tconst [role, setRole] = useState('');\r\n\tconst [roleError, setRoleError] = useState('');\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [userType, setUserType] = useState('');\r\n\r\n\tconst [salonId, setSalonId] = useState('');\r\n\tconst [salonError, setSalonIdError] = useState('');\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tuserData &&\r\n\t\t\t\tuserData.userInfo &&\r\n\t\t\t\tuserData.userInfo.data &&\r\n\t\t\t\t(userData.userInfo.data.role === 'superadmin' || userData.userInfo.data.role === 'admin')\r\n\t\t\t) {\r\n\t\t\t\tsetUserType(userData.userInfo.data.role);\r\n\t\t\t\tsetRoleList([\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \t_id: 1,\r\n\t\t\t\t\t// \tname: 'Super Admin',\r\n\t\t\t\t\t// \tvalue: 'superadmin'\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_id: 2,\r\n\t\t\t\t\t\tname: 'Manager',\r\n\t\t\t\t\t\tvalue: 'manager'\r\n\t\t\t\t\t}\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tdispatch(getAllEnabledSalonListAction());\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tsetTotalPageSize(staffList.totalPageSize);\r\n\t\t\t} else if (userData && userData.userInfo && userData.userInfo.data && userData.userInfo.data.role === 'salon') {\r\n\t\t\t\tsetUserType(userData.userInfo.data.role);\r\n\t\t\t\tsetRoleList([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_id: 2,\r\n\t\t\t\t\t\tname: 'Manager',\r\n\t\t\t\t\t\tvalue: 'manager'\r\n\t\t\t\t\t}\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tdispatch(getAllEnabledSalonListAction());\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\tsetTotalPageSize(staffList.totalPageSize);\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userInfo, userData, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createSalonStaff && createSalonStaff.userInfo && createSalonStaff.userInfo.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\ttoast.success(createSalonStaff.userInfo.message);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_STAFF_RESET });\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createSalonStaff && createSalonStaff.userInfo && !createSalonStaff.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_STAFF_RESET });\r\n\t\t\t\ttoast.error(createSalonStaff.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createSalonStaff, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteSalonStaff && deleteSalonStaff.userInfo && deleteSalonStaff.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteSalonStaff.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: DELETE_SALON_STAFF_RESET });\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteSalonStaff && deleteSalonStaff.userInfo && !deleteSalonStaff.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteSalonStaff.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_SALON_STAFF_RESET });\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteSalonStaff, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatusSalonStaff && changeStatusSalonStaff.userInfo && changeStatusSalonStaff.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatusSalonStaff.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_STAFF_RESET });\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatusSalonStaff && changeStatusSalonStaff.userInfo && !changeStatusSalonStaff.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatusSalonStaff.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_STAFF_RESET });\r\n\t\t\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeStatusSalonStaff, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changePasswordUser, pageNumber, pageLimit, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetEmail('');\r\n\t\tsetName('');\r\n\t\tsetPhone('');\r\n\t\tsetRole('');\r\n\t\tsetAddress('');\r\n\t\tsetPassword('');\r\n\t\tsetRoleError('');\r\n\t\tsetNameError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetEmailError('');\r\n\t\tsetPasswordError('');\r\n\t\tsetAddressError('');\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (id === '' && !validatePassword(password)) {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t} else if (role === '' && role.trim() === '') {\r\n\t\t\tsetRoleError('Please select role');\r\n\t\t} else if (userType === 'admin' && salonId === '' && salonId.trim() === '') {\r\n\t\t\tsetSalonIdError('Please select salon');\r\n\t\t} else {\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tdispatch(createNewStaffSalonAction({ id, name, email, address, phone: unMasking(phone), role, salonId: salonId }));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(createNewStaffSalonAction({ name, email, password, address, phone: unMasking(phone), role, salonId: salonId }));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteSalonStaffAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getSalonStaffListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst handleEditModalUser = (d) => {\r\n\t\tsetSelectUpdateModel(d);\r\n\t\tsetUserId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetAddress(d.address);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetRole(d.role);\r\n\t\tif (userType === 'admin') {\r\n\t\t\tsetSalonId(d.salon);\r\n\t\t} else {\r\n\t\t\tsetSalonId(null);\r\n\t\t}\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeStatusSalonStaffAction(d._id, {\r\n\t\t\t\tenable: d.active ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ id: d._id, type, email: d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getSalonStaffListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='salonstaff'\r\n\t\t\theaderTitle='Salon Staff'\r\n\t\t\taddBtn={true}\r\n\t\t\taddBtnText='Add Salon User'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Salon'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{staffList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : staffList &&\r\n\t\t\t\tstaffList.userInfo &&\r\n\t\t\t\tstaffList.userInfo.status &&\r\n\t\t\t\tstaffList.userInfo.data.result &&\r\n\t\t\t\tstaffList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SalonStaffData\r\n\t\t\t\t\t\tdata={staffList.userInfo.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\thandleEditModalUser={handleEditModalUser}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={staffList.userInfo}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any salon staff data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateSalonStaffUser\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tphone,\r\n\t\t\t\t\taddress,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\trole,\r\n\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tsetRole,\r\n\t\t\t\t\tsetAddress,\r\n\t\t\t\t\tsetPassword,\r\n\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\temailError,\r\n\t\t\t\t\taddressError,\r\n\t\t\t\t\tpasswordError,\r\n\t\t\t\t\troleError,\r\n\r\n\t\t\t\t\tsetRoleError,\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetEmailError,\r\n\t\t\t\t\tsetAddressError,\r\n\t\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\t\tuserType,\r\n\t\t\t\t\tsalonId,\r\n\t\t\t\t\tsetSalonId,\r\n\t\t\t\t\tsalonError,\r\n\t\t\t\t\tsetSalonIdError,\r\n\r\n\t\t\t\t\troleList,\r\n\t\t\t\t\tsalonList,\r\n\t\t\t\t\tselectUpdateModel\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DeleteSalonUser data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t{/* <ChangePassword data={{\r\n\t\t\t\tselectUpdateModel,\r\n\t\t\t\tsetSelectUpdateModel,\r\n\t\t\t\tmodalChangePasswordState,\r\n\t\t\t\tsetModalChangePasswordState,\r\n\t\t\t}} /> */}\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default SalonStaffScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\index.js",["1935","1936","1937","1938","1939","1940","1941","1942","1943"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content/Content'\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { addSubscriptionAction, changeStatusSubscriptionAction, createPlanAction, deletePlanAction, deleteSubscriptionAction, getSubscriptionAction, updatePlanAction } from '../../redux/actions/subscriptionAction';\r\nimport { CREATE_NEW_SUBSCRIPTION_RESET, DELETE_SUBSCRIPTION_RESET, SUBSCRIPTION_STATUS_RESET } from '../../redux/constants/SubscriptionConstants';\r\nimport CreateSubscription from './CreateSubscription';\r\nimport DeleteSubscription from './DeleteSubscription';\r\nimport AllPackages from './AllPackages'\r\nimport AddPriceModal from './AddPriceModal';\r\n\r\n\r\nconst SubscriptionScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const addSubscription = useSelector((state) => state.addSubscription);\r\n    const getSubscription = useSelector((state) => state.getSubscription);\r\n    const changeStatusSubscription = useSelector((state) => state.changeStatusSubscription);\r\n    const deleteSubscription = useSelector((state) => state.deleteSubscription);\r\n\r\n    const [addPackageModal, setAddPackageModal] = useState(false);\r\n    const [deletePackageModal, setDeletePackageModal] = useState(false);\r\n    const [editPackageModal, setEditPackageModal] = useState({ data: '', status: false });\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [descriptionError, setDescriptionError] = useState(\"\");\r\n    const [monthlyPrice, setMonthlyPrice] = useState(\"\");\r\n    const [monthlyPriceError, setMonthlyPriceError] = useState(\"\");\r\n    const [annualPrice, setAnnualPrice] = useState(\"\");\r\n    const [annualPriceError, setAnnualPriceError] = useState(\"\");\r\n    const [maxCalendar, setMaxCalendar] = useState(1);\r\n    const [maxCalendarError, setMaxCalendarError] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getSubscriptionAction())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (addSubscription && addSubscription.data && addSubscription.data.status) {\r\n            toast.success(addSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: CREATE_NEW_SUBSCRIPTION_RESET });\r\n            handleSubsModalClose();\r\n        } else if (addSubscription && addSubscription.data && !addSubscription.data.status) {\r\n            toast.error(addSubscription.data.message);\r\n            dispatch({ type: CREATE_NEW_SUBSCRIPTION_RESET });\r\n            handleSubsModalClose();\r\n        }\r\n    }, [addSubscription])\r\n\r\n    useEffect(() => {\r\n        if (changeStatusSubscription && changeStatusSubscription.data && changeStatusSubscription.data.status) {\r\n            toast.success(changeStatusSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: SUBSCRIPTION_STATUS_RESET });\r\n        } else if (changeStatusSubscription && changeStatusSubscription.data && !changeStatusSubscription.data.status) {\r\n            toast.error(changeStatusSubscription.data.message);\r\n            dispatch({ type: SUBSCRIPTION_STATUS_RESET });\r\n        }\r\n    }, [changeStatusSubscription])\r\n\r\n    useEffect(() => {\r\n        if (deleteSubscription && deleteSubscription.data && deleteSubscription.data.status) {\r\n            toast.success(deleteSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: DELETE_SUBSCRIPTION_RESET });\r\n            handleDeleteModalClose();\r\n        } else if (deleteSubscription && deleteSubscription.data && !deleteSubscription.data.status) {\r\n            toast.error(deleteSubscription.data.message)\r\n            dispatch({ type: DELETE_SUBSCRIPTION_RESET });\r\n            handleDeleteModalClose();\r\n        }\r\n\r\n    }, [deleteSubscription])\r\n\r\n\r\n\r\n    const getSubscriptionPackages = async () => {\r\n        const data = await dispatch(getSubscriptionAction());\r\n        // setPackages(data);\r\n    };\r\n\r\n\r\n    const handleSubsModalClose = () => {\r\n        setAddPackageModal(false)\r\n        setEditPackageModal({ data: '', status: false })\r\n        setName(\"\");\r\n        setNameError(\"\");\r\n        setDescription(\"\");\r\n        setDescriptionError(\"\");\r\n        setMaxCalendar(1);\r\n        setMaxCalendarError(\"\");\r\n        setMonthlyPrice(\"\");\r\n        setMonthlyPriceError(\"\");\r\n        setAnnualPrice(\"\");\r\n        setAnnualPriceError(\"\");\r\n    }\r\n\r\n    const handleDeleteModalClose = () => {\r\n        setDeletePackageModal(false);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!name.trim() || name.trim() === \"\") {\r\n            setNameError(\"Please Enter Name\")\r\n        } else if (name.length > 10) {\r\n            setNameError(\"Name cannot exceed 10 characters\")\r\n        } else if (!description.trim() || description.trim() === \"\") {\r\n            setDescriptionError(\"Description Required\")\r\n        } else if (!editPackageModal.status && (!monthlyPrice.trim() || monthlyPrice.trim() === \"\")) {\r\n            setMonthlyPriceError(\"Monthly Price Required\")\r\n        } else if (!editPackageModal.status && (!annualPrice.trim() || annualPrice.trim() === \"\")) {\r\n            setAnnualPriceError(\"Annual Price Required\")\r\n        } else {\r\n            const formData = {\r\n                name: name,\r\n                description: description,\r\n                metadata: {\r\n                    users: maxCalendar,\r\n                    calendars: maxCalendar\r\n                }\r\n            };\r\n\r\n            const plans = [\r\n                 {\r\n                    amount: monthlyPrice,\r\n                    interval: 'month'\r\n                },\r\n                {\r\n                    amount: annualPrice,\r\n                    interval: 'year'\r\n                }\r\n            ];\r\n\r\n            if (editPackageModal && editPackageModal.data && editPackageModal.data.id) {\r\n                dispatch(addSubscriptionAction({ ...formData, id: editPackageModal.data.id  }))\r\n            } else {\r\n                dispatch(addSubscriptionAction({ ...formData, plans: plans }))\r\n            }\r\n        }\r\n    }\r\n\r\n    const editPackageHandler = (d) => {\r\n        setName(d.name);\r\n        setDescription(d.description);\r\n        setMaxCalendar(d.metadata.calendars);\r\n    }\r\n\r\n\r\n    const onChangeHandler = async (dataObj) => {\r\n        if (dataObj && dataObj.id) {\r\n            const data = await dispatch(\r\n                changeStatusSubscriptionAction(dataObj.id, { active: !dataObj.active })\r\n            );\r\n            if (data && data.status === true) {\r\n                toast.success('Package status changed');\r\n                handleToggleModalClose();\r\n                getSubscriptionPackages();\r\n            } else if (data && data.status === 'fail') {\r\n                toast.error(data.msg);\r\n                handleToggleModalClose();\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDeleteHandler = () => {\r\n        if (deletePackageModal && deletePackageModal.data && deletePackageModal.data.id) {\r\n            dispatch(deleteSubscriptionAction(deletePackageModal.data.id));\r\n            handleDeleteModalClose();\r\n        }\r\n    };\r\n\r\n    const handleToggleModalClose = () => {\r\n        // setTogglePackageModal(false);\r\n        setDeletePackageModal({ data: {}, status: false });\r\n    };\r\n\r\n    return (\r\n        <Content\r\n            currentMenu='subscription'\r\n            headerTitle='Subscription'\r\n            addBtn={true}\r\n            addBtnText='Add Subscription'\r\n            addBtnIcon='plus'\r\n            addBtnClick={() => { setAddPackageModal(true) }}\r\n        >\r\n            {\r\n                getSubscription.loading ? <Spinner />\r\n                    :\r\n                    <AllPackages\r\n                        packages={getSubscription}\r\n                        getPackages={getSubscriptionPackages}\r\n                        setEditPackageModal={setEditPackageModal}\r\n                        editPackageHandler={editPackageHandler}\r\n                        setDeletePackageModal={setDeletePackageModal}\r\n                        onChangeHandler={onChangeHandler}\r\n                    />\r\n            }\r\n\r\n\r\n            <DeleteSubscription data={{ deletePackageModal, handleDeleteModalClose, onDeleteHandler }} />\r\n\r\n\r\n            <CreateSubscription\r\n                addPackageModal={addPackageModal || editPackageModal.status}\r\n                data={{\r\n                    editPackageModal,\r\n                    handleSubsModalClose,\r\n\r\n                    name,\r\n                    setName,\r\n                    nameError,\r\n                    setNameError,\r\n\r\n                    description,\r\n                    setDescription,\r\n                    descriptionError,\r\n                    setDescriptionError,\r\n\r\n                    maxCalendar,\r\n                    setMaxCalendar,\r\n                    maxCalendarError,\r\n                    setMaxCalendarError,\r\n\r\n                    monthlyPrice,\r\n                    setMonthlyPrice,\r\n                    monthlyPriceError,\r\n                    setMonthlyPriceError,\r\n\r\n                    annualPrice,\r\n                    setAnnualPrice,\r\n                    annualPriceError,\r\n                    setAnnualPriceError,\r\n\r\n                    handleSubmit\r\n                }} />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default SubscriptionScreen\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\index.js",["1944","1945","1946","1947","1948","1949","1950","1951"],"import React, { useEffect, useState } from 'react';\r\nimport DownloadButton from './DownloadButton';\r\nimport ServiceCard from './Services/ServiceCard';\r\nimport Content from '../components/WebsiteContent/Content';\r\nimport BookAnAppointmentModal from './BookAnAppointmentModal';\r\nimport { Calendar, DateObject } from 'react-multi-date-picker';\r\nimport './BookAppointment.css';\r\nimport moment from 'moment';\r\nimport { addPublicAppointmentAction, getPublicAppointmentAction, getSylistAppointmentAction } from '../../redux/actions/appointmentAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { ADD_PUBLIC_APPOINTMENT_RESET } from '../../redux/constants/appointmentConstants';\r\nimport PublicAppointmentSkeleton from '../../components/Skeletons/PublicAppointmentSkeleton';\r\nimport { unMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport salonProfile from '../../components/assets/favicon.png';\r\nimport { GET_USER_BY_TOKEN_RESET } from '../../redux/constants/userConstants';\r\nimport { getUserByTokenAction } from '../../redux/actions/userActions';\r\nimport { getWebsiteSettingAction } from '../../redux/actions/websiteSettingAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_WEBSITE_SETTING_RESET } from '../../redux/constants/websiteSettingConstant'; \r\n\r\nconst BookAppointment = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { salonId } = useParams();\r\n\tconst [modalState, setModalState] = useState(false);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst publicAddAppointment = useSelector((state) => state.publicAddAppointment);\r\n\tconst getPublicAppointment = useSelector((state) => state.getPublicAppointment);\r\n\tconst getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\tconst getStylistAppointment = useSelector((state) => state.getStylistAppointment);\r\n\tconst [stylistName, setStylistName] = useState(\"\");\r\n\r\n\tconst [name, setName] = useState({ value: '', error: '' });\r\n\tconst [email, setEmail] = useState({ value: '', error: '' });\r\n\tconst [phone, setPhone] = useState({ value: '', error: '' });\r\n\tconst [gender, setGender] = useState({ value: '', error: '' })\r\n\tconst [comments, setComments] = useState({ value: '', error: '' });\r\n\tconst [value, setValue] = useState(new DateObject());\r\n\tconst [info, setInfo] = useState();\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUserByTokenAction());\r\n\t}, [dispatch])\r\n\r\n\tconst onClose = () => {\r\n\t\tsetName({ value: '', error: '' });\r\n\t\tsetEmail({ value: '', error: '' });\r\n\t\tsetPhone({ value: '', error: '' });\r\n\t\tsetComments({ value: '', error: '' })\r\n\t\tsetGender({ value: '', error: '' })\r\n\t\tsetModalState(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getWebsiteSettingAction(salonId));\r\n\t}, [salonId])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data) {\r\n\t\t\tdispatch(getSylistAppointmentAction())\r\n\t\t} else if (getPublicWebsite && getPublicWebsite.websiteInfo && !getPublicWebsite.websiteInfo.status) {\r\n\t\t\ttoast.error(getPublicWebsite.websiteInfo.message);\r\n\t\t\t// setTimeout(() => {\r\n\t\t\t// \twindow.location.replace('https://bookb.io');\r\n\t\t\t// }, 2500)\r\n\t\t\tdispatch({ type: GET_WEBSITE_SETTING_RESET });\r\n\t\t}\r\n\t}, [getPublicWebsite, dispatch])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getUserInfo && getUserInfo.userInfo && getUserInfo.userInfo.status) {\r\n\t\t\tsetName({ value: getUserInfo.userInfo.data.name });\r\n\t\t\tsetEmail({ value: getUserInfo.userInfo.data.email });\r\n\t\t\tsetPhone({ value: getUserInfo.userInfo.data.phone });\r\n\t\t\tsetGender({ value: getUserInfo.userInfo.data.gender });\r\n\t\t} else {\r\n\t\t\tdispatch({ type: GET_USER_BY_TOKEN_RESET })\r\n\t\t}\r\n\t}, [userLogin, modalState])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tpublicAddAppointment &&\r\n\t\t\tpublicAddAppointment.session &&\r\n\t\t\tpublicAddAppointment.session.status\r\n\t\t) {\r\n\t\t\ttoast.success(publicAddAppointment.session.message);\r\n\t\t\tsetModalState(false)\r\n\t\t\tdispatch({ type: ADD_PUBLIC_APPOINTMENT_RESET });\r\n\t\t\tonClose();\r\n\t\t} else if (\r\n\t\t\tpublicAddAppointment &&\r\n\t\t\tpublicAddAppointment.session &&\r\n\t\t\t!publicAddAppointment.session.status\r\n\t\t) {\r\n\t\t\ttoast.error(publicAddAppointment.session.message);\r\n\t\t\tdispatch({ type: ADD_PUBLIC_APPOINTMENT_RESET });\r\n\t\t\tonClose();\r\n\t\t}\r\n\t}, [publicAddAppointment]);\r\n\r\n\tconst dateHour = (date, hour) => {\r\n\t\tlet datetimeA = moment(date + \" \" + hour);\r\n\t\treturn datetimeA.toISOString()\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite) {\r\n\t\t\tlet formData = {\r\n\t\t\t\t\"requestDate\": value.format('MM-DD-YYYY'),\r\n\t\t\t\t\"salon\": getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id,\r\n\t\t\t\tstylistId: stylistName ? stylistName : null,\r\n\t\t\t}\r\n\t\t\tdispatch(getPublicAppointmentAction(formData))\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}, [dispatch, value, publicAddAppointment, getPublicWebsite, stylistName])\r\n\r\n\r\n\tconst handleBookAppointment = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name.value === \"\") {\r\n\t\t\tsetName({ error: \"Please enter your Name\" })\r\n\t\t} else if (email.value === \"\") {\r\n\t\t\tsetEmail({ error: \"Please enter your Email\" })\r\n\t\t} else if (!validateEmail(email.value)) {\r\n\t\t\tsetEmail({ error: \"Invalid Email\" })\r\n\t\t} else if (phone.value === \"\") {\r\n\t\t\tsetPhone({ error: \"Please enter your phone number.\" })\r\n\t\t} else if (!validatePhone(unMasking(phone.value))) {\r\n\t\t\tsetPhone({ error: \"Phone number must be of 10 digits.\" })\r\n\t\t} else if (gender.value === \"\") {\r\n\t\t\tsetGender({ error: \"Please select your gender\" })\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst appointmentData = {\r\n\t\t\t\tname: name.value,\r\n\t\t\t\temail: email.value,\r\n\t\t\t\tmobile: unMasking(phone.value),\r\n\t\t\t\tcomment: comments.value,\r\n\t\t\t\tgender: gender.value,\r\n\t\t\t\tavailability: info.availableTime,\r\n\t\t\t\t// appointmentDate:info.dateAsAString,\r\n\t\t\t\tappointmentDate: dateHour(info.dateAsAString, info.timeAsADate),\r\n\t\t\t\trequiredDuration: info.requiredTime,\r\n\t\t\t\tisNewUser: true,\r\n\t\t\t\tmainService: info.serviceId,\r\n\t\t\t\tsubService: info.subServiceId,\r\n\t\t\t\tsalon: info.salon,\r\n\t\t\t\tstylistId: info.stylist,\r\n\t\t\t\ttimeData: {\r\n\t\t\t\t\tid: info._id,\r\n\t\t\t\t\ttimeAsAString: info.timeAsAString,\r\n\t\t\t\t\ttimeAsADate: info.timeAsADate,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t\tdispatch(addPublicAppointmentAction(appointmentData))\r\n\t\t}\r\n\t}\r\n\r\n\tconst clearData = () => {\r\n\t\tsetName({ value: '', error: '' });\r\n\t\tsetEmail({ value: '', error: '' });\r\n\t\tsetPhone({ value: '', error: '' });\r\n\t\tsetComments({ value: '', error: '' })\r\n\t\tsetGender({ value: '', error: '' })\r\n\t\tsetModalState(false)\r\n\t}\r\n\treturn (\r\n\t\t<Content getPublicWebsite={getPublicWebsite}>\r\n\t\t\t<div className=\"grid-container\">\r\n\t\t\t\t<div className=\"item1\">\r\n\t\t\t\t\t<Calendar value={value} onChange={setValue} minDate={moment().format()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"item2\">\r\n\t\t\t\t\t<div className=\"appointment-box1\">\r\n\t\t\t\t\t\t<img src={\r\n\t\t\t\t\t\t\tgetPublicWebsite &&\r\n\t\t\t\t\t\t\t\tgetPublicWebsite.websiteInfo &&\r\n\t\t\t\t\t\t\t\tgetPublicWebsite.websiteInfo.data &&\r\n\t\t\t\t\t\t\t\tgetPublicWebsite.websiteInfo.data.salon &&\r\n\t\t\t\t\t\t\t\tgetPublicWebsite.websiteInfo.data.salon.photo ?\r\n\t\t\t\t\t\t\t\tgetPublicWebsite.websiteInfo.data.salon.photo : salonProfile\r\n\t\t\t\t\t\t} className=\"barber_image1\" />\r\n\t\t\t\t\t\t<div className=\"salon_info_name\">\r\n\t\t\t\t\t\t\t<h1 className=\"salon_heading2\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}</h1>\r\n\t\t\t\t\t\t\t{/* <p className=\"appointment_subheading1\">This is a description about salon</p> */}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"appointment-box3\">\r\n\t\t\t\t\t\t<div className=\"stylist-detail-icon\">\r\n\t\t\t\t\t\t\t<svg className=\"appointment-icon\">\r\n\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-email`} />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t<a type='email' className=\"appointment_subheading1\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.email}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"appointment-box3\">\r\n\r\n\t\t\t\t\t\t<div className=\"stylist-detail-icon\">\r\n\t\t\t\t\t\t\t<svg className=\"appointment-icon\">\r\n\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-call`} />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t<a type='phone' className=\"appointment_subheading1\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.phone}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"appointment-box2\">\r\n\t\t\t\t\t\t<div className=\"stylist-detail-icon\">\r\n\t\t\t\t\t\t\t<p style={{ textAlign: 'center' }} className=\"appointment_subheading1\">\r\n\t\t\t\t\t\t\t\t<svg className=\"appointment-icon\">\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-location`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp; {getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.address}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <div className=\"item3\">\r\n\t\t\t\t\t<OfferCard\r\n\t\t\t\t\t\tofferTitle=\"New year offer on haircut, color services\"\r\n\t\t\t\t\t\tofferSubTitle=\"lorem ipsum dolor sit amet, consectetur adispiscing elit, sed do lorem ipsum dolor sit amet, consectetur\r\n\t\t\t\tadispiscing elit, sed do\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<div className=\"item4\">\r\n\t\t\t\t\t<div className=\"download_options\">\r\n\t\t\t\t\t\t<h1 className=\"appointment_heading3\" style={{ textAlign: 'center' }}>Track your booking and more on our app</h1>\r\n\t\t\t\t\t\t<div className=\"download_options_inner\"> \r\n\t\t\t\t\t\t\t<img src='./assets/play.png' alt='play store' style={{ height: '6vh' }} onClick={() => window.open(`https://play.google.com/store/apps/details?id=${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.packageName}`)} />\r\n\t\t\t\t\t\t\t<img src='./assets/ios-icon.png' alt='apple store' style={{ height: '6vh' }} onClick={() => window.open(`https://apps.apple.com/tt/app/bookb/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.appID}`)} />\r\n\r\n\t\t\t\t\t\t\t{/* <DownloadButton\r\n\t\t\t\t\t\t\t\tbuttonTitle=\"Download on the\"\r\n\t\t\t\t\t\t\t\tbuttonSubTitle=\"App Store\"\r\n\t\t\t\t\t\t\t\tbuttonIcon=\"apple\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<DownloadButton\r\n\t\t\t\t\t\t\t\tbuttonTitle=\"Get it on\"\r\n\t\t\t\t\t\t\t\tbuttonSubTitle=\"Play Store\"\r\n\t\t\t\t\t\t\t\tbuttonIcon=\"play-store\"\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"item5\">\r\n\t\t\t\t\t<div className=\"servies_top\">\r\n\t\t\t\t\t\t<h1 className=\"appointment_header1\">Services</h1>\r\n\t\t\t\t\t\t<div className='legend-container'>\r\n\t\t\t\t\t\t\t<div className='box-legend'>\r\n\t\t\t\t\t\t\t\t<div className='box-available'></div>\r\n\t\t\t\t\t\t\t\t<p>Available</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='box-legend'>\r\n\t\t\t\t\t\t\t\t<div className='box-confirmed'></div>\r\n\t\t\t\t\t\t\t\t<p>Confirmed</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='box-legend'>\r\n\t\t\t\t\t\t\t\t<div className='box-waiting'></div>\r\n\t\t\t\t\t\t\t\t<p>Waiting</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div className='box-legend'>\r\n\t\t\t\t\t\t\t\t<div className='box-canceled'></div>\r\n\t\t\t\t\t\t\t\t<p>Canceled</p>\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='appointment_select'>\r\n\t\t\t\t\t\t\t<p className=\"appointment_subheading1\">Filter by stylist</p>\r\n\t\t\t\t\t\t\t<select value={stylistName} onChange={(e) => setStylistName(e.target.value)}>\r\n\t\t\t\t\t\t\t\t<option value=\"\">All</option>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgetStylistAppointment &&\r\n\t\t\t\t\t\t\t\t\tgetStylistAppointment.session &&\r\n\t\t\t\t\t\t\t\t\tgetStylistAppointment.session.data &&\r\n\t\t\t\t\t\t\t\t\tgetStylistAppointment.session.data.result &&\r\n\t\t\t\t\t\t\t\t\tgetStylistAppointment.session.data.result.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<option value={item._id} key={index}>{item.name}</option>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"services_outer\">\r\n\t\t\t\t\t\t{getPublicAppointment &&\r\n\t\t\t\t\t\t\tgetPublicAppointment.loading ?\r\n\t\t\t\t\t\t\t<PublicAppointmentSkeleton /> :\r\n\t\t\t\t\t\t\tgetPublicAppointment.session && getPublicAppointment.session.data\r\n\t\t\t\t\t\t\t&& getPublicAppointment.session.data.result &&\r\n\t\t\t\t\t\t\tgetPublicAppointment.session.data.result.map((d) =>\r\n\t\t\t\t\t\t\t\t<ServiceCard key={d._id} data={d} setInfo={setInfo} setModalState={setModalState} />)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<BookAnAppointmentModal\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tmodalState,\r\n\t\t\t\t\tsetModalState,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tphone,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tcomments,\r\n\t\t\t\t\tsetComments,\r\n\t\t\t\t\tinfo,\r\n\t\t\t\t\tgender,\r\n\t\t\t\t\tsetGender,\r\n\t\t\t\t\thandleBookAppointment,\r\n\t\t\t\t\tpublicAddAppointment,\r\n\t\t\t\t\tdateHour,\r\n\t\t\t\t\tgetUserInfo,\r\n\t\t\t\t\tuserLogin\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default BookAppointment;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\index.js",["1952","1953","1954","1955","1956","1957","1958","1959"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content'\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { addSubscriptionAction, changeStatusSubscriptionAction, createPlanAction, deletePlanAction, deleteSubscriptionAction, getSubscriptionAction, updatePlanAction } from '../../redux/actions/subscriptionAction';\r\nimport { CREATE_NEW_SUBSCRIPTION_RESET, DELETE_SUBSCRIPTION_RESET, SUBSCRIPTION_STATUS_RESET } from '../../redux/constants/SubscriptionConstants';\r\nimport CreateSubscription from './CreateSubscription';\r\nimport DeleteSubscription from './DeleteSubscription';\r\nimport AllPackages from './AllPackages'\r\n\r\n\r\nconst SubscriptionScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const addSubscription = useSelector((state) => state.addSubscription);\r\n    const getSubscription = useSelector((state) => state.getSubscription);\r\n    const changeStatusSubscription = useSelector((state) => state.changeStatusSubscription);\r\n    const deleteSubscription = useSelector((state) => state.deleteSubscription);\r\n\r\n    const [addPackageModal, setAddPackageModal] = useState(false);\r\n    const [deletePackageModal, setDeletePackageModal] = useState(false);\r\n    const [editPackageModal, setEditPackageModal] = useState({ data: '', status: false });\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [descriptionError, setDescriptionError] = useState(\"\");\r\n    const [monthlyPrice, setMonthlyPrice] = useState(\"\");\r\n    const [monthlyPriceError, setMonthlyPriceError] = useState(\"\");\r\n    const [annualPrice, setAnnualPrice] = useState(\"\");\r\n    const [annualPriceError, setAnnualPriceError] = useState(\"\");\r\n    const [maxCalendar, setMaxCalendar] = useState(1);\r\n    const [maxCalendarError, setMaxCalendarError] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getSubscriptionAction())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (addSubscription && addSubscription.data && addSubscription.data.status) {\r\n            toast.success(addSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: CREATE_NEW_SUBSCRIPTION_RESET });\r\n            handleSubsModalClose();\r\n        } else if (addSubscription && addSubscription.data && !addSubscription.data.status) {\r\n            toast.error(addSubscription.data.message);\r\n            dispatch({ type: CREATE_NEW_SUBSCRIPTION_RESET });\r\n            handleSubsModalClose();\r\n        }\r\n    }, [addSubscription])\r\n\r\n    useEffect(() => {\r\n        if (changeStatusSubscription && changeStatusSubscription.data && changeStatusSubscription.data.status) {\r\n            toast.success(changeStatusSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: SUBSCRIPTION_STATUS_RESET });\r\n        } else if (changeStatusSubscription && changeStatusSubscription.data && !changeStatusSubscription.data.status) {\r\n            toast.error(changeStatusSubscription.data.message);\r\n            dispatch({ type: SUBSCRIPTION_STATUS_RESET });\r\n        }\r\n    }, [changeStatusSubscription])\r\n\r\n    useEffect(() => {\r\n        if (deleteSubscription && deleteSubscription.data && deleteSubscription.data.status) {\r\n            toast.success(deleteSubscription.data.message);\r\n            getSubscriptionPackages()\r\n            dispatch({ type: DELETE_SUBSCRIPTION_RESET });\r\n            handleDeleteModalClose();\r\n        } else if (deleteSubscription && deleteSubscription.data && !deleteSubscription.data.status) {\r\n            toast.error(deleteSubscription.data.message)\r\n            dispatch({ type: DELETE_SUBSCRIPTION_RESET });\r\n            handleDeleteModalClose();\r\n        }\r\n\r\n    }, [deleteSubscription])\r\n\r\n\r\n\r\n    const getSubscriptionPackages = async () => {\r\n        const data = await dispatch(getSubscriptionAction());\r\n        // setPackages(data);\r\n    };\r\n\r\n\r\n    const handleSubsModalClose = () => {\r\n        setAddPackageModal(false)\r\n        setEditPackageModal({ data: '', status: false })\r\n        setName(\"\");\r\n        setNameError(\"\");\r\n        setDescription(\"\");\r\n        setDescriptionError(\"\");\r\n        setMaxCalendar(1);\r\n        setMaxCalendarError(\"\");\r\n        setMonthlyPrice(\"\");\r\n        setMonthlyPriceError(\"\");\r\n        setAnnualPrice(\"\");\r\n        setAnnualPriceError(\"\");\r\n    }\r\n\r\n    const handleDeleteModalClose = () => {\r\n        setDeletePackageModal(false);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!name.trim() || name.trim() === \"\") {\r\n            setNameError(\"Please Enter Name\")\r\n        } else if (name.length > 10) {\r\n            setNameError(\"Name cannot exceed 10 characters\")\r\n        } else if (!description.trim() || description.trim() === \"\") {\r\n            setDescriptionError(\"Description Required\")\r\n        } else if (!editPackageModal.status && (!monthlyPrice.trim() || monthlyPrice.trim() === \"\")) {\r\n            setMonthlyPriceError(\"Monthly Price Required\")\r\n        } else if (!editPackageModal.status && (!annualPrice.trim() || annualPrice.trim() === \"\")) {\r\n            setAnnualPriceError(\"Annual Price Required\")\r\n        } else {\r\n            const formData = {\r\n                name: name,\r\n                description: description,\r\n                metadata: {\r\n                    users: maxCalendar,\r\n                    calendars: maxCalendar\r\n                }\r\n            };\r\n\r\n            const plans = [\r\n                {\r\n                    amount: monthlyPrice,\r\n                    interval: 'month'\r\n                },\r\n                {\r\n                    amount: annualPrice,\r\n                    interval: 'year'\r\n                }\r\n            ];\r\n\r\n            if (editPackageModal && editPackageModal.data && editPackageModal.data.id) {\r\n                dispatch(addSubscriptionAction({ ...formData, id: editPackageModal.data.id }))\r\n            } else {\r\n                dispatch(addSubscriptionAction({ ...formData, plans: plans }))\r\n            }\r\n        }\r\n    }\r\n\r\n    const editPackageHandler = (d) => {\r\n        setName(d.name);\r\n        setDescription(d.description);\r\n        setMaxCalendar(d.metadata.calendars);\r\n    }\r\n\r\n\r\n    const onChangeHandler = async (dataObj) => {\r\n        if (dataObj && dataObj.id) {\r\n            const data = await dispatch(\r\n                changeStatusSubscriptionAction(dataObj.id, { active: !dataObj.active })\r\n            );\r\n            if (data && data.status === true) {\r\n                toast.success('Package status changed');\r\n                handleToggleModalClose();\r\n                getSubscriptionPackages();\r\n            } else if (data && data.status === 'fail') {\r\n                toast.error(data.msg);\r\n                handleToggleModalClose();\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDeleteHandler = () => {\r\n        if (deletePackageModal && deletePackageModal.data && deletePackageModal.data.id) {\r\n            dispatch(deleteSubscriptionAction(deletePackageModal.data.id));\r\n            handleDeleteModalClose();\r\n        }\r\n    };\r\n\r\n    const handleToggleModalClose = () => {\r\n        // setTogglePackageModal(false);\r\n        setDeletePackageModal({ data: {}, status: false });\r\n    };\r\n\r\n    return (\r\n        <Content\r\n            currentMenu='subscription'\r\n            headerTitle='Subscription'\r\n            addBtn={true}\r\n            addBtnText='Add Subscription'\r\n            addBtnIcon='plus'\r\n            addBtnClick={() => { setAddPackageModal(true) }}\r\n        >\r\n            {\r\n                getSubscription.loading ? <Spinner />\r\n                    :\r\n                    <AllPackages\r\n                        packages={getSubscription}\r\n                        getPackages={getSubscriptionPackages}\r\n                        setEditPackageModal={setEditPackageModal}\r\n                        editPackageHandler={editPackageHandler}\r\n                        setDeletePackageModal={setDeletePackageModal}\r\n                        onChangeHandler={onChangeHandler}\r\n                    />\r\n            }\r\n\r\n\r\n            <DeleteSubscription data={{ deletePackageModal, handleDeleteModalClose, onDeleteHandler }} />\r\n\r\n\r\n            <CreateSubscription\r\n                addPackageModal={addPackageModal || editPackageModal.status}\r\n                data={{\r\n                    editPackageModal,\r\n                    handleSubsModalClose,\r\n\r\n                    name,\r\n                    setName,\r\n                    nameError,\r\n                    setNameError,\r\n\r\n                    description,\r\n                    setDescription,\r\n                    descriptionError,\r\n                    setDescriptionError,\r\n\r\n                    maxCalendar,\r\n                    setMaxCalendar,\r\n                    maxCalendarError,\r\n                    setMaxCalendarError,\r\n\r\n                    monthlyPrice,\r\n                    setMonthlyPrice,\r\n                    monthlyPriceError,\r\n                    setMonthlyPriceError,\r\n\r\n                    annualPrice,\r\n                    setAnnualPrice,\r\n                    annualPriceError,\r\n                    setAnnualPriceError,\r\n\r\n                    handleSubmit\r\n                }} />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default SubscriptionScreen\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\index.js",["1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\UserSignUp\\index.js",["1991"],"import React from 'react'\r\nimport Button from '../../components/formInputs/Button'\r\nimport \"./userSignUp.css\"\r\n\r\nconst UserSignUp = () => {\r\n  return (\r\n    <div className='usersignup-container' style={{ backgroundImage: \"url('./assets/39084.png')\" }}>\r\n        <div className='userSP_box'>\r\n        <div className='form_container' >\r\n        <div className='form_section' style={{justifyContent:\"center\"}}>\r\n        <img src=\"./assets/logo.png\" style={{width:\"60px\"}}/>\r\n        </div>\r\n            <div className='form_section' style={{justifyContent:\"center\"}}>\r\n            <h1>Set a new password</h1>\r\n            </div>\r\n                <div className='form_section'>\r\n                    <div className='onboard_input'>\r\n                        <label>New Password</label>\r\n                        <input type='text' placeholder='•••••••••••••' \r\n                        // value={salon.name}\r\n                        // onChange={(e)=>{handleChange('name',e);setNameError(\"\")}}\r\n                        />\r\n                        {/* <p className='onboard_error'>{nameError}</p> */}\r\n                    </div>\r\n                </div>\r\n                <div className='form_section'>\r\n                    <div className='onboard_input'>\r\n                        <label>Re-enter Password</label>\r\n                        <input placeholder='•••••••••••••' \r\n                        // value={salon.address}\r\n                        // onChange={(e)=>{handleChange('address',e);setAddressError(\"\")}} \r\n                        />\r\n                        {/* <p className='onboard_error'>{addressError}</p> */}\r\n                    </div>\r\n                </div>\r\n                <Button style={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n                                marginTop:'1rem',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}} \r\n                            // onClick={handleSubmit} \r\n                            label='Sign Up' \r\n                            icon='arrow_right' />\r\n       \r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UserSignUp","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\login\\index.js",["1992","1993","1994","1995","1996"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Content from '../components/WebsiteContent/Content';\r\nimport './Login.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport LoginSkeleton from '../../components/Skeletons/LoginSkeleton';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Button from '../../components/formInputs/Button';\r\nimport InputsSections from '../../components/Modal/InputsSection1';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport PublicAppointmentSkeleton from '../../components/Skeletons/PublicAppointmentSkeleton';\r\nimport SubHeadingContent from '../components/SubHeadingContent/SubHeadingContent';\r\nimport { forgotPasswordUserAction, getWebsiteSettingAction, getWebsiteSettingActionById, registerUserAction, webLogin } from '../../redux/actions/websiteSettingAction';\r\nimport { CHANGE_PASSWORD_USER_RESET, CREATE_NEW_USER_RESET } from '../../redux/constants/userConstants';\r\nimport { getUserByTokenAction } from '../../redux/actions/userActions';\r\nimport ChangePwdUser from './ChangePwdUser';\r\nimport InputBox from '../components/InputBox';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_WEBSITE_SETTING_RESET } from '../../redux/constants/websiteSettingConstant';\r\n\r\nconst Login = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { salonId } = useParams();\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo, loading, error } = userLogin;\r\n\r\n\tconst createUser = useSelector((state) => state.createUser);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\r\n\tconst getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\r\n\tconst [email, setEmail] = useState({ value: '', error: '' });\r\n\tconst [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n\r\n\tconst [name, setName] = useState({ value: '', error: '' });\r\n\tconst [registerEmail, setRegisterEmail] = useState({ value: '', error: '' });\r\n\tconst [registerPassword, setRegisterPassword] = useState({ value: '', error: '' });\r\n\tconst [phone, setPhone] = useState({ value: '', error: '' });\r\n\tconst [emailFPwd, setEmailFPwd] = useState({ value: '', error: '' });\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && !getPublicWebsite.websiteInfo) {\r\n\t\t\tdispatch(getWebsiteSettingActionById(salonId));\r\n\t\t}\r\n\r\n\t\t// return () => {\r\n\t\t// \tdispatch({ type: GET_WEBSITE_SETTING_RESET })\r\n\t\t// }\r\n\t}, [dispatch])\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserByTokenAction());\r\n\t\t\tif (userInfo && userInfo.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\thistory.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}#banner`)\r\n\t\t\t} else if (userInfo && !userInfo.status) {\r\n\t\t\t\tsetPassword({ ...password, error: userInfo.message });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userInfo, error, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createUser && createUser.userInfo && createUser.userInfo.status) {\r\n\t\t\t\ttoast.success(createUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_USER_RESET });\r\n\t\t\t\tdispatch(webLogin(registerEmail.value, registerPassword.value));\r\n\t\t\t} else if (createUser && createUser.userInfo && !createUser.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_USER_RESET });\r\n\t\t\t\ttoast.error(createUser.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createUser]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tonChangePwdModalClose();\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (email.value === '' && email.value.trim() === '') {\r\n\t\t\tsetEmail({ ...email, error: 'Please enter email address' });\r\n\t\t} else if (password.value === '' && password.value.trim() === '') {\r\n\t\t\tsetPassword({ ...password, error: 'Please enter your password' });\r\n\t\t} else if (password.value.length < 7) {\r\n\t\t\tsetPassword({ ...password, error: 'Password must be at least 8 characters' });\r\n\t\t} else {\r\n\t\t\tsetEmail({ ...email, error: '' });\r\n\t\t\tsetPassword({ ...password, error: '' });\r\n\t\t\tdispatch(webLogin(email.value, password.value));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst registerUserHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name.value === \"\") {\r\n\t\t\tsetName({ error: \"Please enter your Name\" })\r\n\t\t} else if (registerEmail.value === \"\") {\r\n\t\t\tsetRegisterEmail({ error: \"Please enter your Email\" })\r\n\t\t} else if (!validateEmail(registerEmail.value)) {\r\n\t\t\tsetRegisterEmail({ error: \"Invalid Email\" })\r\n\t\t} else if (phone.value === \"\") {\r\n\t\t\tsetPhone({ error: \"Please enter your phone number.\" })\r\n\t\t} else if (!validatePhone(unMasking(phone.value))) {\r\n\t\t\tsetPhone({ error: \"Phone number must be of 10 digits.\" })\r\n\t\t} else if (registerPassword.value === \"\") {\r\n\t\t\tsetRegisterPassword({ error: \"Please select your gender\" })\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst formData = {\r\n\t\t\t\tname: name.value,\r\n\t\t\t\temail: registerEmail.value,\r\n\t\t\t\tphone: unMasking(phone.value),\r\n\t\t\t\tpassword: registerPassword.value\r\n\t\t\t}\r\n\t\t\tdispatch(registerUserAction(formData))\r\n\t\t}\r\n\t}\r\n\r\n\tconst clearData = () => {\r\n\t\tsetEmail({ value: '', error: '' });\r\n\t\tsetPassword({ value: '', error: '' });\r\n\t\tsetName({ value: '', error: '' });\r\n\t\tsetRegisterEmail({ value: '', error: '' });\r\n\t\tsetPhone({ value: '', error: '' });\r\n\t\tsetRegisterPassword({ value: '', error: '' })\r\n\t}\r\n\r\n\tconst onChangePwdUserHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (emailFPwd.value === \"\") {\r\n\t\t\tsetEmailFPwd({ error: \"Please enter your Email\" })\r\n\t\t} else if (!validateEmail(emailFPwd.value)) {\r\n\t\t\tsetEmailFPwd({ error: \"Invalid Email\" })\r\n\t\t} else {\r\n\t\t\tdispatch(forgotPasswordUserAction({ email: emailFPwd.value }));\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Content getPublicWebsite={getPublicWebsite}>\r\n\t\t\t\t<SubHeadingContent\r\n\t\t\t\t\ttitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarText}\r\n\t\t\t\t\tsubTitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarPara}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"login-container\">\r\n\t\t\t\t\t<div className=\"login-container-left\">\r\n\t\t\t\t\t\t<div className='login-left-inside' >\r\n\t\t\t\t\t\t\t<div className='login-left-inside'>\r\n\t\t\t\t\t\t\t\t<h1 className='login_container__heading'>Sign in</h1>\r\n\t\t\t\t\t\t\t\t<h3 className='login_container__subheading'>Enter your credentials to log into your account.</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<LoginSkeleton />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem' }}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\terrorMessage={email.error}\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='•••••••••••••'\r\n\t\t\t\t\t\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem' }}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPassword({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\terrorMessage={password.error}\r\n\t\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"forgot-password\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '25rem',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalChangePasswordState(true)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tForgot Password\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t{loading && <Spinner />}\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '25rem',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t\t\tlabel='Login'\r\n\t\t\t\t\t\t\t\t\t\ticon='arrow_right'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"login-container-right\">\r\n\t\t\t\t\t\t<div className='login-left-inside' >\r\n\t\t\t\t\t\t\t<h1 className='login_container__heading'>Create Account</h1>\r\n\t\t\t\t\t\t\t<h3 className='login_container__subheading'>Enter your information to create your account.</h3>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<PublicAppointmentSkeleton />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ModalForm onSubmit={handleSubmit} style={{flexDirection: 'column', margin: '1rem -2rem' }}>\r\n\t\t\t\t\t\t\t\t\t<InputsSections style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"eg, John Doe\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem', marginBottom:'2rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetName({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={name.error}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"eg, johndoe@example.com\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem', marginBottom:'2rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={registerEmail.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetRegisterEmail({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={registerEmail.error}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</InputsSections>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputsSections style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"eg, 123 456 7890\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem', marginBottom:'2rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetPhone({ value: inputPhoneMasking(event.target.value), error: '' });\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={phone.error}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='•••••••••••••'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={registerPassword.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', height: '5rem', marginBottom:'2rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRegisterPassword({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={registerPassword.error}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</InputsSections>\r\n\t\t\t\t\t\t\t\t\t<InputsSections>\r\n\t\t\t\t\t\t\t\t\t\t{loading && <Spinner />}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '25rem',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={registerUserHandler}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Create Account'\r\n\t\t\t\t\t\t\t\t\t\t\ticon='arrow_right'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</InputsSections>\r\n\t\t\t\t\t\t\t\t</ModalForm>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler, emailFPwd, setEmailFPwd }} />\r\n\r\n\t\t\t</Content>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewPromotionCodeScreen\\index.js",["1997","1998","1999"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport Content from '../../components/Content/Content'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { getAllCouponsAction } from '../../redux/actions/couponBookBActions'\r\nimport { activatePromoCodesAction, createNewPromoCodeAction, getAllPromoCodesAction } from '../../redux/actions/PromoCodeAction'\r\nimport { GET_ALL_COUPONS_BOOKB_RESET } from '../../redux/constants/couponBookBConstants'\r\nimport { ACTIVATE_PROMO_CODES_RESET, ADD_PROMO_CODES_RESET } from '../../redux/constants/promoCodesConstant'\r\nimport CreatePromoCode from './CreatePromoCode'\r\nimport PromoCodeStyles from './PromoCodes.module.css';\r\n\r\nconst PromoCodeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [promoCodesList, setPromoCodesList] = useState(\"\")\r\n    const [promoCode, setPromoCode] = useState({ value: \"\", error: '' })\r\n    const [coupon, setCoupon] = useState({ value: \"\", error: '' })\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const activatePromoCodes = useSelector((state) => state.activatePromoCodes);\r\n    const addPromCodes = useSelector((state) => state.addPromCodes);\r\n\r\n    // addPromCodes\r\n    useEffect(() => {\r\n        dispatch(getAllCouponsAction())\r\n\r\n        return () => {\r\n            dispatch({ type: GET_ALL_COUPONS_BOOKB_RESET })\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    const handleCreateModal = () => {\r\n        setCreateModal(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCoupons = async () => {\r\n            setLoading(true)\r\n            const data = await dispatch(getAllPromoCodesAction());\r\n            setPromoCodesList(data);\r\n            if (data && data.status) {\r\n                setLoading(false)\r\n            }\r\n        };\r\n        getCoupons();\r\n    }, [activatePromoCodes, addPromCodes])\r\n\r\n    const handleCloseModal = () => {\r\n        setCreateModal(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (addPromCodes && addPromCodes.data && addPromCodes.data.status) {\r\n            toast.success(addPromCodes.data.message)\r\n            dispatch({ type: ADD_PROMO_CODES_RESET })\r\n            setCreateModal(false)\r\n        } else if (addPromCodes && addPromCodes.data && addPromCodes.data.message) {\r\n            toast.error(addPromCodes && addPromCodes.data && addPromCodes.data.message)\r\n            dispatch({ type: ADD_PROMO_CODES_RESET })\r\n            setCreateModal(false)\r\n        }\r\n    }, [addPromCodes, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.status) {\r\n            toast.success(activatePromoCodes.data.message)\r\n            dispatch({ type: ACTIVATE_PROMO_CODES_RESET })\r\n        } else if (activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.message) {\r\n            toast.error(activatePromoCodes && activatePromoCodes.data && activatePromoCodes.data.message)\r\n            dispatch({ type: ACTIVATE_PROMO_CODES_RESET })\r\n        }\r\n    }, [activatePromoCodes, dispatch])\r\n\r\n    const onChangeHandler = (item) => {\r\n        let status = {\r\n            active: !item.active\r\n        }\r\n        dispatch(activatePromoCodesAction(item.id, status))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (promoCode.value == \"\") {\r\n            setPromoCode({ value: \"\", error: 'Please enter promotional code' })\r\n        } else if (promoCode.value.length > 10) {\r\n            setPromoCode({ value: \"\", error: 'Promotional code cannot exceed 10 characters' })\r\n        } else if (coupon.value == \"\") {\r\n            setCoupon({ value: \"\", error: 'Please select coupon' })\r\n        } else {\r\n            let formData = {\r\n                \"code\": promoCode.value,\r\n                \"coupon\": coupon.value\r\n            }\r\n\r\n            dispatch(createNewPromoCodeAction(formData))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Content currentMenu='promo-code' headerTitle='Promotional Codes'\r\n            addBtn={true}\r\n            addBtnText='New Promo-Code'\r\n            addBtnIcon='plus'\r\n            addBtnClick={handleCreateModal}\r\n        >\r\n\r\n            <div className={PromoCodeStyles.card__Container}>\r\n                {loading ? <Spinner /> :\r\n                    promoCodesList && promoCodesList.data && promoCodesList.data.promotionCodes && promoCodesList.data.promotionCodes.length > 0 &&\r\n                    promoCodesList.data.promotionCodes.map((promoCode, index) => (\r\n                        <div className={PromoCodeStyles.single__discountCard} key={index + 1}>\r\n                            <div className='card--coupons' style={{ borderBottom: '1px solid #ccc' }}>\r\n                                <h1>{promoCode.code}</h1>\r\n                                {promoCode.coupon && (\r\n                                    <Fragment>\r\n                                        <h4 className={PromoCodeStyles.promoCodeCard_validity}>Coupon Name: {promoCode.coupon.name}</h4>\r\n                                        <h4 className={PromoCodeStyles.promoCodeCard_validity}>\r\n                                            Duration: {promoCode.coupon.duration}{' '}\r\n                                            {promoCode.coupon.duration === 'repeating' ? (\r\n                                                ' | ' + promoCode.coupon.duration_in_months + ' months'\r\n                                            ) : (\r\n                                                ''\r\n                                            )}\r\n                                        </h4>\r\n                                        <p className={PromoCodeStyles.promoCodeCard_code}>\r\n                                            Discount:{' '}\r\n                                            {promoCode.coupon.percent_off ? (\r\n                                                <span>{promoCode.coupon.percent_off + '%'}</span>\r\n                                            ) : (\r\n                                                <span>{'$' + promoCode.coupon.amount_off}</span>\r\n                                            )}\r\n                                        </p>\r\n                                    </Fragment>\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className='coupon--card_bottom' style={{ justifyContent: 'center' }}>\r\n                                <label className='switch'>\r\n                                    <input\r\n                                        checked={promoCode.active}\r\n                                        onChange={() => { onChangeHandler(promoCode) }}\r\n                                        type='checkbox'\r\n                                        className='checkbox'\r\n                                        name='active'\r\n                                    />\r\n                                    <span className='slider round' />\r\n                                </label>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <CreatePromoCode\r\n                data={{\r\n                    promoCode,\r\n                    setPromoCode,\r\n                    coupon,\r\n                    setCoupon,\r\n                    createModal,\r\n                    setCreateModal,\r\n                    handleCreateModal,\r\n                    handleCloseModal,\r\n                    handleSubmit\r\n                }}\r\n            />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default PromoCodeScreen","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\index.js",["2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Content from \"../../components/Content/Content\";\r\nimport AddAvailability from \"./AddAvailability\";\r\nimport StylistSessionStyles from \"./StylistAvailability.module.css\";\r\nimport AddBusinessHoursWeekly from \"./AddBusinessHoursWeekly\";\r\nimport { WeekDaysArray } from \"./calendarData\";\r\nimport {\r\n  addBulkAvailabilityAction,\r\n  addDailyAvailabilityAction,\r\n  addDayAvailabilityAction,\r\n  getUnBlockAvailabilitysAction,\r\n  blockAppointmentAction,\r\n} from \"../../redux/actions/availabilityActions\";\r\n\r\nimport {\r\n  ADD_BULK_AVAILABILITYS_RESET,\r\n  ADD_DAILY_AVAILABILITYS_RESET,\r\n  ADD_DAY_AVAILABILITYS_RESET,\r\n  DEL_BLOCK_AVAILABILITYS_RESET,\r\n  GET_UNBLOCK_AVAILABILITYS_RESET,\r\n} from \"../../redux/constants/availabilityConstants\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport TempCalendar from \"../../components/Calender/Temp\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addAppointmentAction,\r\n  availabilityAppointmentAction,\r\n  changeAppointmentAction,\r\n  getAppointmentAction,\r\n  getBusinessHourAction,\r\n  updateAppointmentAction,\r\n} from \"../../redux/actions/appointmentAction\";\r\nimport {\r\n  ADD_APPOINTMENT_RESET,\r\n  APPOINTMENT_AVAILIBILITY_RESET,\r\n  APPOINTMENT_STATUS_LIST_RESET,\r\n  CHANGE_APPOINTMENT_RESET,\r\n  DELETE_APPOINTMENT_RESET,\r\n  DELETE_SLOT_RESET,\r\n  UPDATE_APPOINTMENT_RESET,\r\n  UPDATE_APPOINTMENT_STATUS_RESET,\r\n} from \"../../redux/constants/appointmentConstants\";\r\nimport DeleteAvailability from \"./DeleteAvailability\";\r\nimport WaitlistModal from \"../Waitlist/WaitlistModal\";\r\nimport AddSlotModal from \"./AddSlotModal\";\r\nimport CreateSlot from \"./CreateSlotModal\";\r\nimport { unMasking, validateEmail } from \"../../utils/validators\";\r\nimport DeleteAppointmentModal from \"../Waitlist/DeleteAppointmentModal\";\r\nimport { createStylistSettingsAction } from \"../../redux/actions/stylistActions\";\r\n\r\nconst NewStylistSessionScreen = ({ history, match, location, socket }) => {\r\n  const { stylistName, stylistId } = useParams();\r\n  const refreshRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const calendarRef = useRef(null);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [calendarApi, setCalendarApi] = useState(null);\r\n\r\n  const store = useSelector((state) => state.calendar);\r\n  const getUnblockAvailabilitys = useSelector(\r\n    (state) => state.getUnblockAvailabilitys\r\n  );\r\n  const addDailyAvailabilitys = useSelector(\r\n    (state) => state.addDailyAvailabilitys\r\n  );\r\n  const addBulkAvailabilitys = useSelector(\r\n    (state) => state.addBulkAvailabilitys\r\n  );\r\n  const addDayAvailabilitys = useSelector((state) => state.addDayAvailabilitys);\r\n  const availabilityAppointment = useSelector(\r\n    (state) => state.availabilityAppointment\r\n  );\r\n  const appointmentStatusList = useSelector(\r\n    (state) => state.appointmentStatusList\r\n  );\r\n  const changeAppointmentStatus = useSelector(\r\n    (state) => state.changeAppointmentStatus\r\n  );\r\n  const delBlockAvailabilitys = useSelector(\r\n    (state) => state.delBlockAvailabilitys\r\n  );\r\n  const addAppointment = useSelector((state) => state.addAppointment);\r\n  const updateAppointment = useSelector((state) => state.updateAppointment);\r\n  const deleteAppointment = useSelector((state) => state.deleteAppointment);\r\n  const deleteSlot = useSelector((state) => state.deleteSlot);\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n  const confirmAppointment = useSelector((state) => state.confirmAppointment);\r\n  const publicAddAppointment = useSelector(\r\n    (state) => state.publicAddAppointment\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const getBusinessHour = useSelector((state) => state.getBusinessHour);\r\n\r\n  const [openDropdownBHours, setOpenDropdownBHours] = useState(false);\r\n  const [businessHours, setBusinessHours] = useState({});\r\n\r\n  const [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n  const [updateWaitlistModal, setUpdateWaitlistModal] = useState(false);\r\n  const [getLatestData, setGetlatestData] = useState(false);\r\n  const [createSlotModal, setCreateSlotModal] = useState(false);\r\n  const [modalWaitlist, setModalWaitlist] = useState(false);\r\n  const [deleteAptModal, setDeleteAptModal] = useState(false);\r\n  const [addModalActive, setAddModalActive] = useState(false);\r\n  const [deleteModalActive, setDeleteModalActive] = useState(false);\r\n  const [addBuinessHoursModal, setAddBuinessHoursModal] = useState(false);\r\n  const [addSlotModal, setAddSlotModal] = useState(false);\r\n  const [businessHourDetail, setBusinessHourDetail] = useState(\"\");\r\n  const [weekDays, setWeekDays] = useState(WeekDaysArray);\r\n  const [resetHandler, setresetHandler] = useState(true);\r\n  const [resetslot, setresetslot] = useState(false);\r\n  const [appointmentDetail, setAppointmentDetail] = useState();\r\n\r\n  const [name, setName] = useState();\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [slotId, setSlotId] = useState(\"\");\r\n  const [startTimeError, setStartTimeError] = useState(\"\");\r\n  const [requiredTime, setRequiredTime] = useState(\"\");\r\n  const [requiredTimeError, setRequiredTimeError] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n  const [serviceError, setServiceError] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [dateError, setDateError] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [appointmentId, setAppointmentId] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [salon, setSalon] = useState();\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [timeSlotId, setTimeSlotId] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [genderError, setGenderError] = useState(\"\");\r\n  const [slotStatus, setSlotStatus] = useState(\"\");\r\n  const [changeSlotStatus, setChangeSlotStatus] = useState(\"\");\r\n  const [appointmentList, setAppointmentList] = useState(\"\");\r\n  const [recurringType, setRecurringType] = useState({\r\n    value: \"custom\",\r\n    error: \"\",\r\n  });\r\n\r\n  const [serviceIds, setServiceIds] = useState({\r\n    mainServiceId: \"\",\r\n    subServiceId: \"\",\r\n  });\r\n\r\n  const [totalPageSize, setTotalPageSize] = useState(1);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageLimit = 20;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userLogin &&\r\n      userLogin.userInfo &&\r\n      userLogin.userInfo.data &&\r\n      !userLogin.userInfo.data.token\r\n    ) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userLogin, history]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addDailyAvailabilitys &&\r\n      addDailyAvailabilitys.session &&\r\n      addDailyAvailabilitys.session.status\r\n    ) {\r\n      toast.success(addDailyAvailabilitys.session.message);\r\n      setCreateSlotModal(false);\r\n      setDate(\"\");\r\n      setStartTime(\"\");\r\n      dispatch({ type: ADD_DAILY_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addDailyAvailabilitys &&\r\n      addDailyAvailabilitys.session &&\r\n      !addDailyAvailabilitys.session.status\r\n    ) {\r\n      toast.error(addDailyAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAILY_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addDailyAvailabilitys]);\r\n\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     addAppointment &&\r\n  //     addAppointment.session &&\r\n  //     addAppointment.session.status\r\n  //   ) {\r\n  //     toast.success(addAppointment.session.message);\r\n  //     dispatch({ type: ADD_APPOINTMENT_RESET });\r\n  //   } else if (\r\n  //     addAppointment &&\r\n  //     addAppointment.session &&\r\n  //     !addAppointment.session.status\r\n  //   ) {\r\n  //     toast.error(addAppointment.session.message);\r\n  //     dispatch({ type: ADD_APPOINTMENT_RESET });\r\n  //   }\r\n  // }, [addAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      updateAppointment &&\r\n      updateAppointment.session &&\r\n      updateAppointment.session.status\r\n    ) {\r\n      toast.success(updateAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_RESET });\r\n    } else if (\r\n      updateAppointment &&\r\n      updateAppointment.session &&\r\n      !updateAppointment.session.status\r\n    ) {\r\n      toast.error(updateAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_RESET });\r\n    }\r\n  }, [updateAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      availabilityAppointment &&\r\n      availabilityAppointment.session &&\r\n      availabilityAppointment.session.status === true\r\n    ) {\r\n      setAppointmentId(\r\n        availabilityAppointment.session.result &&\r\n          availabilityAppointment.session.result.appointmentId\r\n      );\r\n    }\r\n  }, [availabilityAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      deleteAppointment &&\r\n      deleteAppointment.session &&\r\n      deleteAppointment.session.status\r\n    ) {\r\n      toast.success(deleteAppointment.session.message);\r\n      setDeleteModalActive(false);\r\n      dispatch({ type: DELETE_APPOINTMENT_RESET });\r\n      dispatch(availabilityAppointmentAction(slotId));\r\n    } else if (\r\n      deleteAppointment &&\r\n      deleteAppointment.session &&\r\n      !deleteAppointment.session.status\r\n    ) {\r\n      toast.error(deleteAppointment.session.message);\r\n      dispatch({ type: DELETE_APPOINTMENT_RESET });\r\n    }\r\n  }, [deleteAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (deleteSlot && deleteSlot.session && deleteSlot.session.status) {\r\n      toast.success(deleteSlot.session.message);\r\n      dispatch({ type: DELETE_SLOT_RESET });\r\n    } else if (deleteSlot && deleteSlot.session && !deleteSlot.session.status) {\r\n      toast.error(deleteSlot.session.message);\r\n      dispatch({ type: DELETE_SLOT_RESET });\r\n    }\r\n  }, [deleteSlot]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      confirmAppointment &&\r\n      confirmAppointment.session &&\r\n      confirmAppointment.session.status\r\n    ) {\r\n      toast.success(confirmAppointment.session.message);\r\n      setBusinessHours({});\r\n      setStartTime(\"\");\r\n      setService(\"\");\r\n      setDate(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n      setRequiredTime(\"\");\r\n      setAddModalActive(false);\r\n      dispatch({ type: UPDATE_APPOINTMENT_STATUS_RESET });\r\n    } else if (\r\n      confirmAppointment &&\r\n      confirmAppointment.session &&\r\n      !confirmAppointment.session.status\r\n    ) {\r\n      toast.error(confirmAppointment.session.message);\r\n      dispatch({ type: UPDATE_APPOINTMENT_STATUS_RESET });\r\n    }\r\n  }, [confirmAppointment]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addBulkAvailabilitys &&\r\n      addBulkAvailabilitys.session &&\r\n      addBulkAvailabilitys.session.status\r\n    ) {\r\n      toast.success(addBulkAvailabilitys.session.message);\r\n      dispatch({ type: ADD_BULK_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addBulkAvailabilitys &&\r\n      addBulkAvailabilitys.session &&\r\n      !addBulkAvailabilitys.session.status\r\n    ) {\r\n      toast.error(addBulkAvailabilitys.session.message);\r\n      dispatch({ type: ADD_BULK_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addBulkAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addDayAvailabilitys &&\r\n      addDayAvailabilitys.session &&\r\n      addDayAvailabilitys.session.status\r\n    ) {\r\n      toast.success(addDayAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAY_AVAILABILITYS_RESET });\r\n    } else if (\r\n      addDayAvailabilitys &&\r\n      addDayAvailabilitys.session &&\r\n      !addDayAvailabilitys.session.status\r\n    ) {\r\n      toast.error(addDayAvailabilitys.session.message);\r\n      dispatch({ type: ADD_DAY_AVAILABILITYS_RESET });\r\n    }\r\n  }, [addDayAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      delBlockAvailabilitys &&\r\n      delBlockAvailabilitys.sessions &&\r\n      delBlockAvailabilitys.sessions.status\r\n    ) {\r\n      toast.success(delBlockAvailabilitys.sessions.message);\r\n      dispatch({ type: DEL_BLOCK_AVAILABILITYS_RESET });\r\n    } else if (\r\n      delBlockAvailabilitys &&\r\n      delBlockAvailabilitys.sessions &&\r\n      !delBlockAvailabilitys.sessions.status\r\n    ) {\r\n      toast.error(delBlockAvailabilitys.sessions.message);\r\n      dispatch({ type: DEL_BLOCK_AVAILABILITYS_RESET });\r\n    }\r\n  }, [delBlockAvailabilitys]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getBusinessHour &&\r\n      getBusinessHour.session &&\r\n      getBusinessHour.session.status &&\r\n      getBusinessHour.session.data &&\r\n      getBusinessHour.session.data.slots.length > 0\r\n    ) {\r\n      setBusinessHourDetail(getBusinessHour.session.data);\r\n      setWeekDays(getBusinessHour.session.data.slots);\r\n    } else {\r\n      setWeekDays(WeekDaysArray);\r\n      setBusinessHourDetail(\r\n        getBusinessHour &&\r\n          getBusinessHour.session &&\r\n          getBusinessHour.session.status &&\r\n          getBusinessHour.session.data\r\n      );\r\n    }\r\n  }, [getBusinessHour]);\r\n\r\n  const handleResetSlot = (e) => {\r\n    e.preventDefault();\r\n    setresetHandler(true);\r\n    if (\r\n      getBusinessHour &&\r\n      getBusinessHour.session &&\r\n      getBusinessHour.session.status &&\r\n      getBusinessHour.session.data &&\r\n      getBusinessHour.session.data.slots.length > 0\r\n    ) {\r\n      setBusinessHourDetail(getBusinessHour.session.data);\r\n      setWeekDays(getBusinessHour.session.data.slots);\r\n      setRecurringType({\r\n        value:\r\n          getBusinessHour.session.data &&\r\n          getBusinessHour.session.data.stylist &&\r\n          getBusinessHour.session.data.stylist.recurringType,\r\n      });\r\n    } else {\r\n      setWeekDays(WeekDaysArray);\r\n      setBusinessHourDetail(\r\n        getBusinessHour &&\r\n          getBusinessHour.session &&\r\n          getBusinessHour.session.status &&\r\n          getBusinessHour.session.data\r\n      );\r\n    }\r\n    // setresetslot(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getBusinessHourAction(stylistId));\r\n  }, [addBuinessHoursModal]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      changeAppointmentStatus &&\r\n      changeAppointmentStatus.session &&\r\n      changeAppointmentStatus.session.status === true\r\n    ) {\r\n      toast.success(changeAppointmentStatus.session.message);\r\n      dispatch(availabilityAppointmentAction(slotId));\r\n      dispatch({ type: CHANGE_APPOINTMENT_RESET });\r\n    }\r\n  }, [changeAppointmentStatus, dispatch]);\r\n\r\n  useEffect(() => {}, [addDailyAvailabilitys, addDayAvailabilitys]);\r\n\r\n  //Change Slot Status\r\n  useEffect(() => {\r\n    if (changeSlotStatus) {\r\n      const formData = {\r\n        slotId: slotId,\r\n        status: changeSlotStatus,\r\n        timeDataId: timeSlotId,\r\n      };\r\n      dispatch(changeAppointmentAction(formData, appointmentId));\r\n    }\r\n  }, [changeSlotStatus]);\r\n\r\n  const handleAddModalClose = () => {\r\n    setBusinessHours({});\r\n    setStartTime(\"\");\r\n    setService(\"\");\r\n    setName(\"\");\r\n    setDate(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setRequiredTime(\"\");\r\n    setName(\"\");\r\n    setGender(\"\");\r\n    setAddModalActive(false);\r\n    setAddBuinessHoursModal(false);\r\n    setDeleteModalActive(false);\r\n    setDeleteAptModal(false);\r\n    setIsUpdate(false);\r\n    setCreateSlotModal(false);\r\n    setAddSlotModal(false);\r\n    setDateError(\"\");\r\n    setStartTimeError(\"\");\r\n    setServiceError(\"\");\r\n    setRequiredTimeError(\"\");\r\n    setNameError(\"\");\r\n    setEmailError(\"\");\r\n    setPhoneError(\"\");\r\n  };\r\n  const WaitlistModalClose = () => {\r\n    setIsUpdate(false);\r\n    setModalWaitlist(false);\r\n    setStartTime(\"\");\r\n    setService(\"\");\r\n    setDate(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setRequiredTime(\"\");\r\n    setName(\"\");\r\n    setGender(\"\");\r\n    setTimeSlotId(\"\");\r\n    dispatch({ type: APPOINTMENT_AVAILIBILITY_RESET });\r\n    dispatch({ type: APPOINTMENT_STATUS_LIST_RESET });\r\n  };\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    allDay: false,\r\n    url: \"\",\r\n    extendedProps: {\r\n      calendar: \"\",\r\n      guests: [],\r\n      location: \"\",\r\n      description: \"\",\r\n    },\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //   if (recurringType.value === '' && recurringType.value.trim() === '') {\r\n  // \t\tsetRecurringType({ ...recurringType, error: 'Please select recurring type' });\r\n  //   }else{\r\n  //     dispatch(createStylistSettingsAction({id:stylistId,recurringType: recurringType.value}))\r\n  //   }\r\n  // },[recurringType.value])\r\n\r\n  const dateHour = (date, hour) => {\r\n    let datetimeA = moment(date + \" \" + hour);\r\n    return datetimeA.toISOString();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (date === \"\") {\r\n      setDateError(\"Date required\");\r\n    } else if (startTime === \"\") {\r\n      setStartTimeError(\"Time Required\");\r\n    } else if (!service) {\r\n      setServiceError(\"Please Select Service\");\r\n    } else if (requiredTime === \"\") {\r\n      setRequiredTimeError(\"Time Required\");\r\n    } else if (name === \"\") {\r\n      setNameError(\"Please enter name\");\r\n    } else if (email === \"\") {\r\n      setEmailError(\"Please enter email\");\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError(\"Please enter valid email\");\r\n    } else if (phone === \"\") {\r\n      setPhoneError(\"Please enter phone no.\");\r\n    } else if (gender === \"\") {\r\n      setGenderError(\"Please enter your gender\");\r\n    } else {\r\n      const data = {\r\n        name: name,\r\n        appointmentDate: dateHour(\r\n          moment(date).format(\"l\"),\r\n          moment(startTime, \"hh:mm\").format(\"HH:mm\")\r\n        ),\r\n        stylistId: stylistId,\r\n        salon: salon,\r\n        user: userId,\r\n        isNewUser: userId ? false : true,\r\n        // \"salon\": \"61c305ce3ec74d504ed67e66\",\r\n        email: email,\r\n        gender: gender,\r\n        mobile: unMasking(phone),\r\n        time: moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        slotId: slotId,\r\n        timeData: {\r\n          id: timeSlotId,\r\n          timeAsAString: moment(startTime, \"hh:mm\").format(\"hh:mm a\"),\r\n          timeAsADate: moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        },\r\n        availability: slotId,\r\n        mainService: serviceIds.mainServiceId,\r\n        requiredDuration: requiredTime,\r\n        subService: serviceIds.subServiceId,\r\n      };\r\n      dispatch(addAppointmentAction(data, stylistId));\r\n\r\n      setAddModalActive(false);\r\n      setDateError(\"\");\r\n      setStartTimeError(\"\");\r\n      setServiceError(\"\");\r\n      setRequiredTimeError(\"\");\r\n      setName(\"\");\r\n      setNameError(\"\");\r\n      setEmailError(\"\");\r\n      setPhoneError(\"\");\r\n      setBusinessHours({});\r\n      setStartTime(\"\");\r\n      setService(\"\");\r\n      setDate(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n      setRequiredTime(\"\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (date === \"\") {\r\n      setDateError(\"Date required\");\r\n    } else if (startTime === \"\") {\r\n      setStartTimeError(\"Time Required\");\r\n    } else if (service === \"\") {\r\n      setServiceError(\"Please Select Service\");\r\n    } else if (requiredTime === \"\") {\r\n      setRequiredTimeError(\"Time Required\");\r\n    } else if (name === \"\") {\r\n      setNameError(\"Please enter name\");\r\n    } else if (email === \"\") {\r\n      setEmailError(\"Please enter email\");\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError(\"Please enter valid email\");\r\n    } else if (phone === \"\") {\r\n      setPhoneError(\"Please enter phone no.\");\r\n    } else if (gender === \"\") {\r\n      setGenderError(\"Please enter your gender\");\r\n    } else {\r\n      const data = {\r\n        appointmentDate: date,\r\n        stylistId: stylistId,\r\n        user: userId,\r\n        salon: salon,\r\n        salon: \"61c305ce3ec74d504ed67e66\",\r\n        isNewUser: false,\r\n        slotStatus: slotStatus,\r\n        name: name,\r\n        email: email,\r\n        gender: gender,\r\n        mobile: unMasking(phone),\r\n        id: appointmentId,\r\n        availability: slotId,\r\n        timeData: {\r\n          id: timeSlotId,\r\n          timeAsAString: moment(startTime, \"hh:mm\").format(\"hh:mm a\"),\r\n          timeAsADate: moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n        },\r\n        // \"availability\":name._id,\r\n        //\"mainService\": service._id,\r\n        mainService: serviceIds.mainServiceId,\r\n        requiredDuration: requiredTime,\r\n        subService: serviceIds.subServiceId,\r\n      };\r\n\r\n      dispatch(addAppointmentAction(data, stylistId));\r\n\r\n      setAddModalActive(false);\r\n    }\r\n  };\r\n\r\n  let eventData = {\r\n    fromDate: startDate,\r\n    toDate: endDate,\r\n    stylistId: stylistId,\r\n    endDate: \"00:30:00\",\r\n    salon:\r\n      getUserInfo &&\r\n      getUserInfo.userInfo &&\r\n      getUserInfo.userInfo.data &&\r\n      getUserInfo.userInfo.data._id,\r\n  };\r\n\r\n  const getList = () => {\r\n    getAppointmentAction(eventData, userLogin)\r\n  }\r\n\r\n  const convertMinutes = (str) => {\r\n    var date = new Date(str);\r\n    let time = moment(date, \"hh:mm\").format(\"HH:mm\");\r\n    return time;\r\n  };\r\n\r\n  const handleCreateSlot = (e) => {\r\n    e.preventDefault();\r\n    if (date === \"\") {\r\n      setDateError(\"Please enter a slot date\");\r\n    } else if (!startTime.trim() || startTime.trim() === \"\") {\r\n      setStartTimeError(\"Please enter a slot time\");\r\n    } else {\r\n      let data = {\r\n        time: startTime,\r\n        date: date,\r\n      };\r\n      dispatch(addDailyAvailabilityAction(data, stylistId));\r\n    }\r\n  };\r\n\r\n  const handleUpdateSlot = (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      time: startTime,\r\n      date: date,\r\n      slotId: slotId,\r\n      appointmentId: appointmentId,\r\n      appointmentList: appointmentList,\r\n      timeData: {\r\n        id: timeSlotId,\r\n        timeAsAString: moment(startTime, \"hh:mm\").format(\"hh:mm a\"),\r\n        timeAsADate: moment(startTime, \"hh:mm\").format(\"HH:mm\"),\r\n      },\r\n    };\r\n    dispatch(addDailyAvailabilityAction(data, stylistId));\r\n  };\r\n\r\n  const unBlockHandler = (date) => {\r\n    let data = {\r\n      time: convertMinutes(date),\r\n      date: moment(date).format(\"MM-DD-YYYY\"),\r\n    };\r\n    dispatch(addDailyAvailabilityAction(data, stylistId));\r\n  };\r\n\r\n  const addBuinessHoursClick = (event) => {\r\n    if (event.name === \"byWeeks\") {\r\n      setAddBuinessHoursModal(true);\r\n    }\r\n  };\r\n\r\n  const addDayAvailabilityHandler = (date) => {\r\n    let data = { date: moment(date).format(\"MM-DD-YYYY\") };\r\n    dispatch(addDayAvailabilityAction(data, stylistId));\r\n  };\r\n\r\n  const childFunctionRef = useRef();\r\n\r\nconst handleRefresh = () =>{\r\n  childFunctionRef.current();\r\n}\r\n\r\n  return (\r\n    <Content\r\n      containerStyle={{ height: \"92vh\" }}\r\n      headerTitle={\"My Availability\"}\r\n      currentMenu={`${stylistId ? \"stylist\" : \"stylist-sessions\"}`}\r\n      addBtn={false}\r\n      addBtnText=\"Book Appointment\"\r\n      addBtnIcon=\"plus\"\r\n      addBtnClick={() => setAddModalActive(true)}\r\n      showAppointment={false}\r\n      stylistId={stylistId}\r\n      addAppointment={addAppointment}\r\n      updateAppointment={updateAppointment}\r\n      deleteAppointment={deleteAppointment}\r\n    >\r\n      <div className={StylistSessionStyles.month}>\r\n        <TempCalendar\r\n       childFunctionRef={childFunctionRef}  \r\n          data={{\r\n            date,\r\n            setGetlatestData,\r\n            setDate,\r\n            addBuinessHoursClick,\r\n            setAddBuinessHoursModal,\r\n            match,\r\n            socket,\r\n            startTime,\r\n            setStartTime,\r\n            setEndDate,\r\n            endDate,\r\n            setStartDate,\r\n            startDate,\r\n            dispatch,\r\n            calendarRef,\r\n            calendarApi,\r\n            setCalendarApi,\r\n            appointmentId,\r\n            setAppointmentId,\r\n            getUserInfo,\r\n\r\n            store,\r\n            blankEvent,\r\n            setCreateSlotModal,\r\n            addModalActive,\r\n            setAddModalActive,\r\n\r\n            appointments,\r\n            setAppointments,\r\n            openDropdownBHours,\r\n            setOpenDropdownBHours,\r\n            businessHours,\r\n            setBusinessHours,\r\n            addDailyAvailabilitys,\r\n            addDayAvailabilitys,\r\n            setModalWaitlist,\r\n            unBlockHandler,\r\n            addDayAvailabilityHandler,\r\n            getUnblockAvailabilitys,\r\n            userLogin,\r\n            stylistId,\r\n            setDeleteModalActive,\r\n            setIsUpdate,\r\n            addAppointment,\r\n            updateAppointment,\r\n            deleteAppointment,\r\n            deleteSlot,\r\n            confirmAppointment,\r\n            publicAddAppointment,\r\n            setSalon,\r\n            setAddSlotModal,\r\n            setAppointmentTime,\r\n            addDailyAvailabilitys,\r\n            addBulkAvailabilitys,\r\n            setSlotId,\r\n            setTimeSlotId,\r\n            slotId,\r\n            timeSlotId,\r\n            setAppointmentList,\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <CreateSlot\r\n        data={{\r\n          createSlotModal,\r\n          handleAddModalClose,\r\n          handleCreateSlot,\r\n          date,\r\n          setDate,\r\n          startTime,\r\n          setStartTime,\r\n          startTimeError,\r\n          setStartTimeError,\r\n          dateError,\r\n          setDateError,\r\n          isUpdate,\r\n          handleUpdateSlot,\r\n        }}\r\n      />\r\n      <WaitlistModal\r\n        data={{\r\n          modalWaitlist,\r\n          dispatch,\r\n          slotId,\r\n          setAppointmentId,\r\n          availabilityAppointment,\r\n          appointmentStatusList,\r\n          WaitlistModalClose,\r\n          setDeleteAptModal,\r\n          setIsUpdate,\r\n          setAddModalActive,\r\n          setAppointmentDetail,\r\n          setUpdateWaitlistModal,\r\n          setDate,\r\n          setStartTime,\r\n          setService,\r\n          setName,\r\n          setEmail,\r\n          setPhone,\r\n          setGender,\r\n          setAppointmentId,\r\n          serviceIds,\r\n          setServiceIds,\r\n          setSalon,\r\n          addAppointment,\r\n          setRequiredTime,\r\n          setSlotStatus,\r\n          changeSlotStatus,\r\n          setChangeSlotStatus,\r\n          setTimeSlotId,\r\n        }}\r\n      />\r\n\r\n      <AddAvailability\r\n        data={{\r\n          addModalActive,\r\n          handleAddModalClose,\r\n          handleSubmit,\r\n          selectUpdateModel,\r\n          setUserId,\r\n\r\n          date,\r\n          setDate,\r\n\r\n          dateError,\r\n          setDateError,\r\n\r\n          name,\r\n          email,\r\n          phone,\r\n\r\n          setName,\r\n          setEmail,\r\n          setPhone,\r\n\r\n          nameError,\r\n          phoneError,\r\n          emailError,\r\n\r\n          setNameError,\r\n          setPhoneError,\r\n          setEmailError,\r\n\r\n          startTime,\r\n          setStartTime,\r\n          startTimeError,\r\n          setStartTimeError,\r\n\r\n          requiredTime,\r\n          setRequiredTime,\r\n          requiredTimeError,\r\n          setRequiredTimeError,\r\n\r\n          service,\r\n          setService,\r\n          serviceError,\r\n          setServiceError,\r\n          setSelectUpdateModel,\r\n          isUpdate,\r\n          handleUpdateSubmit,\r\n          gender,\r\n          setGender,\r\n          appointmentDetail,\r\n          serviceIds,\r\n          setServiceIds,\r\n          genderError,\r\n          setGenderError,\r\n        }}\r\n      />\r\n      <DeleteAppointmentModal\r\n        data={{\r\n          deleteAptModal,\r\n          setDeleteAptModal,\r\n          appointmentId,\r\n          dispatch,\r\n        }}\r\n      />\r\n\r\n      <DeleteAvailability\r\n        data={{\r\n          deleteModalActive,\r\n          setDeleteModalActive,\r\n          handleAddModalClose,\r\n          selectUpdateModel,\r\n          setUserId,\r\n          appointmentId,\r\n          userLogin,\r\n          dispatch,\r\n          appointmentTime,\r\n        }}\r\n      />\r\n\r\n      <AddBusinessHoursWeekly\r\n        data={{\r\n          businessHourDetail,\r\n          weekDays,\r\n          setWeekDays,\r\n          handleRefresh,\r\n          stylistId,\r\n          getList,\r\n          addBuinessHoursModal,\r\n          setAddBuinessHoursModal,\r\n          addBulkAvailabilitys,\r\n          setGetlatestData,\r\n          setresetHandler,\r\n          resetHandler,\r\n          setresetslot,\r\n          handleResetSlot,\r\n          recurringType,\r\n          setRecurringType,\r\n        }}\r\n      />\r\n\r\n      {/* <AddSlotModal\r\n        data={{\r\n          addSlotModal,\r\n          setAddSlotModal,\r\n          handleAddModalClose,\r\n          setUserId,\r\n          appointmentId,\r\n          appointmentTime,\r\n          convertMinutes,\r\n          unBlockHandler,\r\n          userLogin,\r\n          dispatch,\r\n          isUpdate\r\n        }}\r\n      />  */}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewStylistSessionScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\index.js",["2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewNotificationsScreen\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\OrderHistory\\index.js",["2046","2047","2048","2049","2050","2051"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\index.js",["2052","2053","2054"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport {\r\n\tchangeStatusStylistAction,\r\n\tcreateNewStylistAction,\r\n\tcreateStylistSettingsAction,\r\n\tdeleteStylistAction,\r\n\tgetStylistListAction,\r\n\tgetStylistSettingsAction\r\n} from '../../redux/actions/stylistActions';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport { addNotesAction, changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport {\r\n\tSTYLER_RESET,\r\n\tCHANGE_STATUS_STYLER_RESET,\r\n\tCREATE_NEW_STYLER_RESET,\r\n\tDELETE_STYLER_RESET,\r\n\tCREATE_STYLIST_SETTINGS_RESET\r\n} from '../../redux/constants/stylistConstants';\r\nimport CreateStylist from './CreateStylist';\r\nimport DeleteStylist from './DeleteStylist';\r\nimport StylistData from './StylistData';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport Pagination from '../../components/Pagination';\r\nimport StylistSettings from './StylistSettings';\r\nimport NoData from '../../website/components/NoData';\r\nimport AddNotes from './AddNotes';\r\n\r\nconst StylistsScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst stylistList = useSelector((state) => state.stylistList);\r\n\tconst createStylist = useSelector((state) => state.createStylist);\r\n\tconst changeStatustylist = useSelector((state) => state.changeStatustylist);\r\n\tconst deleteStylist = useSelector((state) => state.deleteStylist);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst addStylistSettings = useSelector((state) => state.addStylistSettings);\r\n\tconst getStylistSettings = useSelector((state) => state.getStylistSettings);\r\n\r\n\tconst [uploadFileData, setUploadFileData] = useState('');\r\n\tconst [uploadFileDataError, setUploadFileDataError] = useState('');\r\n\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [stylistSettingsModal, setStylistSettingsModal] = useState(false);\r\n\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tconst [id, setUserId] = useState('');\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\r\n\r\n\tconst [addNotesModal, setAddNotesModal] = useState(false);\r\n\tconst [notes, setNotes] = useState('');\r\n\tconst [notesError, setNotesError] = useState('');\r\n\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [imageSrcError, setImageSrcError] = useState('');\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\t//stylist settings\r\n\tconst [serviceArray, setServiceArray] = useState({ value: '', error: '' });\r\n\tconst [recurringType, setRecurringType] = useState({ value: 'month', error: '' });\r\n\tconst [startTime, setStartTime] = useState({ value: '', error: '' });\r\n\tconst [endTime, setEndTime] = useState({ value: '', error: '' });\r\n\tconst [intervalTime, setIntervalTime] = useState({ value: '', error: '' });\r\n\tconst [isCompulsory, setIsCompulsory] = useState(false);\r\n\tconst [isCompulsoryError, setIsCompulsoryError] = useState('');\r\n\t// const [endTimeError, setEndTimeError] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'admin' ||\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: STYLER_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createStylist && createStylist.userInfo && createStylist.userInfo.status) {\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.success(createStylist.userInfo.message);\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createStylist && createStylist.userInfo && !createStylist.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_STYLER_RESET });\r\n\t\t\t\ttoast.error(createStylist.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[createStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addStylistSettings && addStylistSettings.userInfo && addStylistSettings.userInfo.status) {\r\n\t\t\t\tclearDataSettings();\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.success(addStylistSettings.userInfo.message);\r\n\t\t\t} else if (addStylistSettings && addStylistSettings.userInfo && !addStylistSettings.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_STYLIST_SETTINGS_RESET });\r\n\t\t\t\ttoast.error(addStylistSettings.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[addStylistSettings, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteStylist && deleteStylist.userInfo && deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteStylist && deleteStylist.userInfo && !deleteStylist.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteStylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[deleteStylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatustylist && changeStatustylist.userInfo && changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatustylist.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatustylist && changeStatustylist.userInfo && !changeStatustylist.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatustylist.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_STYLER_RESET });\r\n\t\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeStatustylist, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (id === '' && password === '') {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileDataError('Please select files to upload');\r\n\t\t} else {\r\n\t\t\tlet fileData = new FormData();\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tfileData.append('id', id);\r\n\t\t\t} else {\r\n\t\t\t\tfileData.append('password', password);\r\n\t\t\t}\r\n\r\n\t\t\tfileData.append('name', name);\r\n\t\t\tfileData.append('email', email);\r\n\t\t\tfileData.append('address', address);\r\n\t\t\tfileData.append('phone', unMasking(phone));\r\n\t\t\tfor (let i = 0; i < uploadFileData.length; i++) {\r\n\t\t\t\tfileData.append('image', uploadFileData[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(createNewStylistAction(fileData));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst handleAddNotesModalClose = () => {\r\n\t\tsetAddNotesModal(false)\r\n\t}\r\n\r\n\t//Add Notes Handler\r\n\tconst handleNoteModal = (d) => {\r\n\t\t// setAddNotesModal(true)\r\n\t\tsetUserId(d)\r\n\t}\r\n\tconst handleNotesSubmit = (id) => {\r\n\t\t// e.preventDefault()\r\n\t\tif (notes === '') {\r\n\t\t\tsetNotesError(\"Please add notes\")\r\n\t\t} else {\r\n\t\t\tlet data = {\r\n\t\t\t\tuserNote: notes,\r\n\t\t\t}\r\n\t\t\tdispatch(addNotesAction(id, data))\r\n\t\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tclearDataSettings();\r\n\t};\r\n\r\n\tconst clearDataSettings = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetStartTime({ value: '', error: '' })\r\n\t\tsetEndTime({ value: '', error: '' })\r\n\t\tsetRecurringType({ value: '', error: '' })\r\n\t\tsetServiceArray({ value: '', error: '' })\r\n\t\tsetIntervalTime({ value: '', error: '' })\r\n\t\tsetIsCompulsory('');\r\n\t\tsetIsCompulsoryError('');\r\n\t\tsetStylistSettingsModal(false);\r\n\t}\r\n\r\n\tconst settingsSubmitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet services = serviceArray.value;\r\n\t\tif (startTime.value === '' && startTime.value === '') {\r\n\t\t\tsetStartTime({ value: '', error: 'Please enter start time' });\r\n\t\t} else if (endTime.value === '' && endTime.value.trim() === '') {\r\n\t\t\tsetEndTime({ value: '', error: 'Please enter end time' });\r\n\t\t} else if (recurringType.value === '' && recurringType.value.trim() === '') {\r\n\t\t\tsetRecurringType({ ...recurringType, error: 'Please select recurring type' });\r\n\t\t} else if (intervalTime.value === '' && intervalTime.value.trim() === '') {\r\n\t\t\tsetIntervalTime({ value: '', error: 'Please enter interval time' });\r\n\t\t} else if (services === '' && !services.length) {\r\n\t\t\tsetServiceArray('Please select services');\r\n\t\t} else {\r\n\t\t\tlet serviceArrayTmp = [];\r\n\t\t\tfor (let i = 0; i < services.length; i++) {\r\n\t\t\t\tserviceArrayTmp.push(services[i]._id);\r\n\t\t\t}\r\n\t\t\t// makePublic: makePublic.value,\r\n\t\t\tdispatch(createStylistSettingsAction({\r\n\t\t\t\tid: selectUpdateModel._id,\r\n\t\t\t\trecurringType: recurringType.value,\r\n\t\t\t\tintervalTime: intervalTime.value,\r\n\t\t\t\tstartTime: startTime.value,\r\n\t\t\t\tendTime: endTime.value,\r\n\t\t\t\tservices: serviceArrayTmp.toString(),\r\n\t\t\t\tisBreakTimeCompulsory: isCompulsory\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = (d) => {\r\n\t\tdispatch(deleteStylistAction(selectUpdateModel._id));\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getStylistListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeStatusStylistAction(d._id, {\r\n\t\t\t\tenable: d.active ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetUserId('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPasswordError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetImageSrc('');\r\n\t\tsetImageSrcError('');\r\n\t\t// setCompany('');\r\n\t\t// setCompanyError('');\r\n\t};\r\n\r\n\tconst handleEditModalStylist = (d) => {\r\n\t\tsetUserId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetImageSrc(d.photo);\r\n\t\t// setCompany(d.company);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ id: d._id, type, email: d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getStylistListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='stylist'\r\n\t\t\theaderTitle='Stylist'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'manager' ||\r\n\t\t\t\t\t\tgetUserInfo.userInfo.data.role === 'superadmin') ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Stylist'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Stylists...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{stylistList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : stylistList &&\r\n\t\t\t\tstylistList.userInfo &&\r\n\t\t\t\tstylistList.userInfo.status &&\r\n\t\t\t\tstylistList.userInfo.data.result &&\r\n\t\t\t\tstylistList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<StylistData\r\n\t\t\t\t\t\tdata={stylistList.userInfo.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tsetNotes={setNotes}\r\n\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\thandleEditModalStylist={handleEditModalStylist}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t\tsetStylistSettingsModal={setStylistSettingsModal}\r\n\t\t\t\t\t\taddNotesModal={addNotesModal}\r\n\t\t\t\t\t\tsetAddNotesModal={setAddNotesModal}\r\n\t\t\t\t\t\thandleNoteModal={handleNoteModal}\r\n\t\t\t\t\t\tsetUserId={setUserId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={stylistList.userInfo}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any stylist data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<CreateStylist\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\taddress,\r\n\t\t\t\t\tphone,\r\n\r\n\t\t\t\t\tsetUserId,\r\n\t\t\t\t\tsetEmail,\r\n\t\t\t\t\tsetPhone,\r\n\t\t\t\t\tsetName,\r\n\t\t\t\t\tsetAddress,\r\n\t\t\t\t\tsetPassword,\r\n\r\n\t\t\t\t\temailError,\r\n\t\t\t\t\tphoneError,\r\n\t\t\t\t\tnameError,\r\n\t\t\t\t\tpasswordError,\r\n\t\t\t\t\taddressError,\r\n\r\n\t\t\t\t\tsetEmailError,\r\n\t\t\t\t\tsetPhoneError,\r\n\t\t\t\t\tsetNameError,\r\n\t\t\t\t\tsetAddressError,\r\n\t\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\t\t// companyList,\r\n\t\t\t\t\t// company,\r\n\t\t\t\t\t// setCompany,\r\n\t\t\t\t\t// companyError,\r\n\r\n\t\t\t\t\tshowAddModal,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\r\n\t\t\t\t\timageSrc,\r\n\t\t\t\t\tsetImageSrc,\r\n\t\t\t\t\timageSrcError,\r\n\t\t\t\t\tsetImageSrcError,\r\n\t\t\t\t\tsetUploadFileData,\r\n\t\t\t\t\tuploadFileDataError,\r\n\t\t\t\t\tsetUploadFileDataError,\r\n\r\n\t\t\t\t\tnotes,\r\n\t\t\t\t\tsetNotes,\r\n\t\t\t\t\tnotesError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DeleteStylist data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t<StylistSettings\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tstartTime, setStartTime,\r\n\t\t\t\t\tendTime, setEndTime,\r\n\t\t\t\t\trecurringType, setRecurringType,\r\n\t\t\t\t\tintervalTime, setIntervalTime,\r\n\t\t\t\t\tserviceArray, setServiceArray,\r\n\t\t\t\t\tselectUpdateModel,\r\n\t\t\t\t\tgetStylistSettings,\r\n\t\t\t\t\tstylistSettingsModal,\r\n\t\t\t\t\thandleSettingsModalClose,\r\n\t\t\t\t\tsettingsSubmitHandler,\r\n\t\t\t\t\tisCompulsory,\r\n\t\t\t\t\tsetIsCompulsory,\r\n\t\t\t\t\tisCompulsoryError,\r\n\t\t\t\t\tsetIsCompulsoryError\r\n\t\t\t\t}} />\r\n\r\n\t\t\t<AddNotes data={{ id, addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit }} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default StylistsScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\OrderSummary\\index.js",["2055"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { getOrderHistoryAction } from '../../redux/actions/productActions' \r\nimport SubHeadingContent from '../components/SubHeadingContent/SubHeadingContent'\r\nimport Content from '../components/WebsiteContent/Content'\r\nimport moment from 'moment'\r\n\r\nconst OrderSummary = () => {\r\n    const { salonId, orderId } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n    const getOrderHistory = useSelector((state) => state.getOrderHistory);\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n \r\n    useEffect(\r\n        () => {\r\n            if (userLogin && !userLogin.userInfo) {\r\n                history.push(`/salon/${salonId}/login`);\r\n            }\r\n        },\r\n        [history, userLogin, dispatch]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(getOrderHistoryAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Content getPublicWebsite={getPublicWebsite}>\r\n            <SubHeadingContent\r\n                title={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarText}\r\n                subTitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarPara}\r\n            />\r\n            <div className='order_history' style={{ height: 'auto' }}>\r\n                <h2 style={{ textDecoration: 'underline', cursor: 'pointer' }} onClick={() => history.push(`/salon/${salonId}/order-history`)}> {`GO BACK`}</h2>\r\n                {getOrderHistory && getOrderHistory.loading ?\r\n                    <div className='shpping--address' style={{ height: '40vh' }}>\r\n                        <Spinner />\r\n                    </div>\r\n                    :\r\n                    getOrderHistory && getOrderHistory.categories && getOrderHistory.categories.data && getOrderHistory.categories.data.result && getOrderHistory.categories.data.result.length > 0 &&\r\n                    getOrderHistory.categories.data.result.filter(item => item._id === orderId).map((data, index) =>\r\n                    (\r\n                        <div className='shpping--address'>\r\n                            <h2>Order Id: {data.orderId}</h2>\r\n                            <div className='shipping_detail' style={{ marginTop: '1rem', justifyContent: 'space-between' }}>\r\n                                <div className='ship1'>\r\n                                    <span className='shipping--header'>Summery</span>\r\n                                    {/* <div className='sub_span'>\r\n                                                <span className='item-name_new1'>Order ID:</span>\r\n                                                <p className='item-name_new1'>853599852255</p>\r\n                                            </div> */}\r\n                                    <div className='sub_span'>\r\n                                        <span className='item-name_new1'>Order Date:</span>\r\n                                        <p className='item-name_new1'>{moment().format(\"MMM Do YY\")}</p>\r\n                                    </div>\r\n                                    <div className='sub_span'>\r\n                                        <span className='item-name_new1'>Order Total:</span>\r\n                                        <p className='item-name_new1'>${data.totalAmount ? data.totalAmount : \"NA\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className='ship1'>\r\n                                    <span className='shipping--header'>Shipping Address</span>\r\n                                    <div className='sub_span'>\r\n                                        <span className='item-name_new1'>{data.billingAddress.address ? data.billingAddress.address : \"NA\"}</span>\r\n\r\n                                    </div>\r\n                                    <div className='sub_span'>\r\n                                        <span className='item-name_new1'>{data.billingAddress.state ? data.billingAddress.state : \"NA\"}</span>\r\n\r\n                                    </div>\r\n                                    <div className='sub_span'>\r\n                                        <span className='item-name_new1'>{data.billingAddress.zipcode ? data.billingAddress.zipcode : \"NA\"}</span>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                            <h2>Product Details</h2>\r\n                            <div>\r\n                                {data.items && data.items.map((item, i) => (\r\n                                    <div className=\"cart__product-listContainer\" key={i + 1}>\r\n                                        <div className='order-image'>\r\n                                            <img src={item.productImageURL} alt='img' />\r\n                                        </div>\r\n                                        <div className='cart--productDetail__container' style={{ gap: '0.2rem', padding: '0' }}>\r\n\r\n                                            <div className='cart__product--nameContainer'>\r\n                                                {/* <img className=\"cart-product_image\" src={item.productImageURL} alt={item.productImageKey} /> */}\r\n                                                <p className=\"item-name_new\"> {item.productName}</p>\r\n                                            </div>\r\n                                            <div className='cart__product--countContainer'>\r\n                                                <span className=\"item-price\">{item.quantity}  &#215; ${item.productPrice}</span>\r\n                                                <span className=\"item-price\">$ {item.quantity * item.productPrice}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                <div className='summary-items'>\r\n                                    {/* <div className='summary--content'>\r\n                                    <p>Items ({totalItems})</p>\r\n                                    <p>${markedPrice}</p>\r\n                                </div>\r\n                                <div className='summary--content'>\r\n                                    <p>Discount</p>\r\n                                    <p>-${discountPrice}</p>\r\n                                </div> */}\r\n                                    <div className='summary--content'>\r\n                                        <p>Shipping</p>\r\n                                        <p>Free</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='total--price'>\r\n                                    <p>Total</p>\r\n                                    <p>${data.totalAmount}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default OrderSummary","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\MyProfileScreen_New\\index.js",["2056","2057","2058","2059","2060","2061","2062","2063"],"import React, { useEffect, useState } from \"react\";\r\nimport Styles from \"./MyProfileScreen.module.css\";\r\nimport Content from \"../../components/Content/Content\";\r\nimport UserIconComponent from \"../../components/UserIconComponent/UserIconComponent\";\r\nimport MyProfileInputComponent from \"../../components/MyProfileInputComponent/MyProfileInputComponent\";\r\nimport BaseButton from \"../../components/BaseButton/BaseButton\";\r\nimport moment from \"moment\";\r\nimport TextBox from \"../../components/formInputs/MultiDatePicker/TextBox.module.css\";\r\nimport { Calendar } from \"react-multi-date-picker\";\r\nimport TimeDurationComponent from \"../../components/TimeDurationComponent/TimeDurationComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getMyProfileDeatilsAction,\r\n  getUserByTokenAction,\r\n  updateMyProfile,\r\n} from \"../../redux/actions/userActions\";\r\nimport PasswordChangeComponent from \"../../components/PasswordChangeComponent/PasswordChangeComponent\";\r\nimport MyProfileSkeleton from \"../../components/Skeletons/MyProfileSkeleton\";\r\nimport RewardsModal from \"../../components/RewardModal/RewardModal\";\r\n\r\nconst MyProfileScreenNew = ({ value, onChange }) => {\r\n  const [name, setName] = useState({ value: \"\", error: \"\" });\r\n  const [textArea, setTextArea] = useState({ value: \"\", error: \"\" });\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [phoneNo, setPhoneNo] = useState({ value: \"\", error: \"\" });\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [previewURL, setPreviewURL] = useState(null);\r\n  const [showGoalsModal, setShowGoalsModal] = useState(false);\r\n  // const [lunchTime, setLunchTime] = useState({\r\n  //   lunchStartTime: { value: '', error: '' },\r\n  //   lunchEndTime: { value: '', error: '' },\r\n  // });\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  // const [loading, setLoading] = useState(true)\r\n  const dispatch = useDispatch(false);\r\n  const myProfileDetails = useSelector((state) => state.myProfileDetails);\r\n  const { loading } = myProfileDetails;\r\n  const initialLunchStartTime =\r\n    myProfileDetails.userInfo && myProfileDetails.userInfo.data\r\n      ? myProfileDetails.userInfo.data.lunchStartTime || \"\"\r\n      : \"\";\r\n  const initialLunchEndTime =\r\n    myProfileDetails.userInfo && myProfileDetails.userInfo.data\r\n      ? myProfileDetails.userInfo.data.lunchEndTime || \"\"\r\n      : \"\";\r\n  const [lunchTime, setLunchTime] = useState({\r\n    lunchStartTime: { value: initialLunchStartTime, error: \"\" },\r\n    lunchEndTime: { value: initialLunchEndTime, error: \"\" },\r\n  });\r\n  // console.log(initialLunchStartTime , initialLunchEndTime)\r\n  React.useEffect(() => {\r\n    if (\r\n      myProfileDetails &&\r\n      myProfileDetails.userInfo &&\r\n      myProfileDetails.userInfo.data &&\r\n      myProfileDetails.userInfo.data.name\r\n    ) {\r\n      setName({\r\n        ...name,\r\n        value: myProfileDetails.userInfo.data.name,\r\n        error: \"\",\r\n      });\r\n      setEmail({\r\n        ...email,\r\n        value: myProfileDetails.userInfo.data.email,\r\n        error: \"\",\r\n      });\r\n      setPhoneNo({\r\n        ...phoneNo,\r\n        value: myProfileDetails.userInfo.data.phone,\r\n        error: \"\",\r\n      });\r\n      setTextArea({\r\n        ...textArea,\r\n        value: myProfileDetails.userInfo.data.description,\r\n        error: \"\",\r\n      });\r\n    }\r\n  }, [myProfileDetails]);\r\n  useEffect(() => {\r\n    if (\r\n      myProfileDetails &&\r\n      myProfileDetails.userInfo &&\r\n      myProfileDetails.userInfo.data\r\n    ) {\r\n      const { lunchStartTime, lunchEndTime } = myProfileDetails.userInfo.data;\r\n      setLunchTime({\r\n        lunchStartTime: { value: lunchStartTime || \"\", error: \"\" },\r\n        lunchEndTime: { value: lunchEndTime || \"\", error: \"\" },\r\n      });\r\n    }\r\n  }, [myProfileDetails]);\r\n\r\n  React.useEffect(() => {\r\n    // console.log(myProfileDetails);\r\n    if (\r\n      myProfileDetails &&\r\n      !myProfileDetails.loading &&\r\n      myProfileDetails.userInfo &&\r\n      myProfileDetails.userInfo.status\r\n    ) {\r\n      dispatch(getUserByTokenAction());\r\n    }\r\n  }, [myProfileDetails, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      myProfileDetails &&\r\n      myProfileDetails.userInfo &&\r\n      myProfileDetails.userInfo.data &&\r\n      myProfileDetails.userInfo.data.photo\r\n    ) {\r\n      setImageSrc(myProfileDetails.userInfo.data.photo);\r\n      setPreviewURL(myProfileDetails.userInfo.data.photo);\r\n    }\r\n  }, [myProfileDetails]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyProfileDeatilsAction());\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (e, updateData) => {\r\n    e.preventDefault();\r\n\r\n    if (name.value === \"\" && name.value.trim() === \"\") {\r\n      setName({ ...name, error: \"Please enter your name\" });\r\n    }\r\n    if (phoneNo.value === \"\" && phoneNo.value.trim() === \"\") {\r\n      setPhoneNo({ ...phoneNo, error: \"Please enter phone no.\" });\r\n    }\r\n    if (email.value === \"\" && email.value.trim() === \"\") {\r\n      setEmail({ ...email, error: \"Please enter your email\" });\r\n    } else {\r\n      setName({ ...name, error: \"\" });\r\n      setPhoneNo({ ...phoneNo, error: \"\" });\r\n      setEmail({ ...email, error: \"\" });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name.value)\r\n      formData.append(\"phone\", phoneNo.value)\r\n      formData.append(\"photo\", imageSrc)\r\n      formData.append(\"email\", email.value)\r\n      formData.append(\"lunchStartTime\", lunchTime.lunchStartTime.value)\r\n      formData.append(\"lunchEndTime\", lunchTime.lunchEndTime.value)\r\n      formData.append(\"description\", textArea.value)\r\n\r\n      dispatch(updateMyProfile(formData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      containerStyle={{\r\n        paddingTop: \"10rem\",\r\n        marginTop: \"0rem\",\r\n        height: \"89vh\",\r\n      }}\r\n      headerTitle={\"My Profile\"}\r\n      currentMenu={\"My-Profile\"}\r\n    >\r\n      {loading ? (\r\n        <MyProfileSkeleton />\r\n      ) : (\r\n        <>\r\n          {showChangePassword ? (\r\n            <PasswordChangeComponent\r\n              setShowChangePassword={setShowChangePassword}\r\n              imageSrc={imageSrc}\r\n              setImageSrc={setImageSrc}\r\n            />\r\n          ) : (\r\n            <div className={Styles.container}>\r\n              <div className={Styles.content}>\r\n                <UserIconComponent\r\n                  imageSrc={imageSrc}\r\n                  previewURL={previewURL}\r\n                  setPreviewURL={setPreviewURL}\r\n                  setImageSrc={setImageSrc}\r\n                />\r\n                <div className={Styles.text_input}>\r\n                  <MyProfileInputComponent\r\n                    title={\"Name :\"}\r\n                    placeholder={\"Reds Barber\"}\r\n                    value={name.value}\r\n                    onChange={(e) =>\r\n                      setName({\r\n                        ...name,\r\n                        value: e.target.value,\r\n                        error: \"\",\r\n                      })\r\n                    }\r\n                    errorMessage={name.error}\r\n                  />\r\n                  <MyProfileInputComponent\r\n                    type={\"textarea\"}\r\n                    title={\"Description :\"}\r\n                    value={textArea.value}\r\n                    onChange={(e) =>\r\n                      setTextArea({\r\n                        ...textArea,\r\n                        value: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <MyProfileInputComponent\r\n                    title={\"Phone no:\"}\r\n                    placeholder={\"123456789\"}\r\n                    value={phoneNo.value}\r\n                    onChange={(e) =>\r\n                      setPhoneNo({\r\n                        ...phoneNo,\r\n                        value: e.target.value,\r\n                        error: \"\",\r\n                      })\r\n                    }\r\n                    errorMessage={phoneNo.error}\r\n                    countryCode= {myProfileDetails?.userInfo?.data?.countryCode}\r\n                      />           \r\n                      <div className={Styles.coinSection}>\r\n                  <MyProfileInputComponent\r\n                    title={\"Email :\"}\r\n                    placeholder={\"test@gmail.com\"}\r\n                    value={email.value}\r\n                    onChange={(e) =>\r\n                      setEmail({\r\n                        ...email,\r\n                        value: e.target.value,\r\n                        error: \"\",\r\n                      })\r\n                    }\r\n                    errorMessage={email.error}\r\n                        />\r\n                  {/* <svg className={Styles.coinIcon}>\r\n\t\t                   <use xlinkHref={`/assets/sprite.svg#icon-reward-coins`} />\r\n\t                </svg> */}\r\n                  {/* <MyProfileInputComponent\r\n                    title={\"Coins:\"}\r\n                          placeholder={\"Number of coins\"}\r\n                  />\r\n                        <svg className={Styles.iconInfo}\r\n                          onClick={() => setShowGoalsModal(true)}\r\n                        >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`/assets/sprite.svg#icon-info`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n                        </svg>\r\n                        <RewardsModal\r\n                          showModal={showGoalsModal}\r\n                          onClose={() => setShowGoalsModal(false)}\r\n                        /> */}\r\n                      </div>\r\n                </div>\r\n                {/* <div className={Styles.timeDurationComponent}>\r\n                 <TimeDurationComponent lunchTime={lunchTime} setLunchTime={setLunchTime} />\r\n                 \r\n                </div> */}\r\n                <span\r\n                  className={Styles.change_password_text}\r\n                  onClick={() =>\r\n                    setShowChangePassword((prevState) => !prevState)\r\n                  }\r\n                >\r\n                  Change Password\r\n                </span>\r\n                <div className={Styles.update_profile_button}>\r\n                  <BaseButton\r\n                    type={\"Submit\"}\r\n                    className={Styles.update_button}\r\n                    title={\"Update\"}\r\n                    onClick={handleSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default MyProfileScreenNew;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\PageNotFound\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\index.js",["2064","2065","2066","2067","2068","2069","2070","2071","2072"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Content from '../../components/Content/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { changeStatusSalonAction, createNewSalonAction, deleteSalonAction, getSalonListAction } from '../../redux/actions/salonActions';\r\nimport DeleteSalon from './DeleteSalon';\r\nimport SalonData from './SalonData';\r\nimport CreateEditSalon from './CreateEditSalon';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport SalonsStyle from './Salon.module.css';\r\nimport { CHANGE_MENU_SETTINGS_RESET, CHANGE_STATUS_SALON_RESET, CREATE_NEW_SALON_RESET, DELETE_SALON_RESET, SALON_RESET } from '../../redux/constants/salonConstants';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validateOnlyNumber, validatePassword, validatePhone } from '../../utils/validators';\r\nimport ChangePwdUser from '../UsersScreen/ChangePwdUser';\r\nimport { changePasswordUserAction } from '../../redux/actions/userActions';\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants';\r\nimport MenuSettingUser from './MenuSettingUser';\r\nimport { changeMenuSettingsAction } from '../../redux/actions/salonActions';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../website/components/NoData';\r\nimport { cancelSubscriptionAction } from '../../redux/actions/subscriptionAction';\r\nimport CancelSubscription from './CancelSubscription';\r\nimport { GET_CANCEL_SUBSCRIPTION_RESET } from '../../redux/constants/SubscriptionConstants';\r\n\r\n\r\n\r\nconst SalonScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst createSalon = useSelector((state) => state.createSalon);\r\n\tconst changeStatusSalon = useSelector((state) => state.changeStatusSalon);\r\n\tconst deleteSalon = useSelector((state) => state.deleteSalon);\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\tconst changeAppMenuSetting = useSelector((state) => state.changeAppMenuSetting);\r\n\tconst cancelSubscription = useSelector((state) => state.cancelSubscription);\r\n\r\n\tconst salonList = useSelector((state) => state.salonList);\r\n\tconst [showAddModal, setShowAddModal] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [modalChangePasswordState, setModalChangePasswordState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [uploadFileData, setUploadFileData] = useState('');\r\n\tconst [uploadFileDataError, setUploadFileDataError] = useState('');\r\n\tconst [id, setSalonId] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [imageSrcError, setImageSrcError] = useState('');\r\n\tconst [modalSettingState, setModalSettingState] = useState(false);\r\n\tconst [appMenu, setAppMenu] = useState({});\r\n\tconst [modalCancelSubscription, setModalCancelSubscription] = useState(false);\r\n\r\n\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\r\n\tconst [name, setName] = useState('');\r\n\tconst [nameError, setNameError] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailError, setEmailError] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [passwordError, setPasswordError] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [addressError, setAddressError] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [phoneError, setPhoneError] = useState('');\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (getUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'admin')) {\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: SALON_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (salonList &&\r\n\t\t\t\tsalonList.userInfo &&\r\n\t\t\t\tsalonList.userInfo.status &&\r\n\t\t\t\tsalonList.userInfo.data.result.length > 0) {\r\n\t\t\t\tsetTotalPageSize(salonList.userInfo.data.totalPageSize)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salonList]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createSalon && createSalon.userInfo && createSalon.userInfo.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetShowAddModal(false);\r\n\t\t\t\tsetSearch('');\r\n\t\t\t\ttoast.success(createSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createSalon && createSalon.userInfo && !createSalon.userInfo.status) {\r\n\t\t\t\tdispatch({ type: CREATE_NEW_SALON_RESET });\r\n\t\t\t\ttoast.error(createSalon.userInfo.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteSalon && deleteSalon.userInfo && deleteSalon.userInfo.status) {\r\n\t\t\t\ttoast.success(deleteSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteSalon && deleteSalon.userInfo && !deleteSalon.userInfo.status) {\r\n\t\t\t\ttoast.error(deleteSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: DELETE_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeStatusSalon && changeStatusSalon.userInfo && changeStatusSalon.userInfo.status) {\r\n\t\t\t\ttoast.success(changeStatusSalon.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeStatusSalon && changeStatusSalon.userInfo && !changeStatusSalon.userInfo.status) {\r\n\t\t\t\ttoast.error(changeStatusSalon.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_STATUS_SALON_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t[changeStatusSalon, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeAppMenuSetting && changeAppMenuSetting.userInfo && changeAppMenuSetting.userInfo.status) {\r\n\t\t\t\ttoast.success(changeAppMenuSetting.userInfo.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tdispatch({ type: CHANGE_MENU_SETTINGS_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeAppMenuSetting && changeAppMenuSetting.userInfo && !changeAppMenuSetting.userInfo.status) {\r\n\t\t\t\ttoast.error(changeAppMenuSetting.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_MENU_SETTINGS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeAppMenuSetting, dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cancelSubscription && cancelSubscription.data && cancelSubscription.data.status) {\r\n\t\t\t\ttoast.success(cancelSubscription.data.message);\r\n\t\t\t\tsetSelectUpdateModel({});\r\n\t\t\t\tsetModalCancelSubscription(false);\r\n\t\t\t\tdispatch({ type: GET_CANCEL_SUBSCRIPTION_RESET });\r\n\t\t\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (cancelSubscription && cancelSubscription.data && !cancelSubscription.data.status) {\r\n\t\t\t\ttoast.error(cancelSubscription.data.message);\r\n\t\t\t\tdispatch({ type: GET_CANCEL_SUBSCRIPTION_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cancelSubscription, dispatch]\r\n\t);\r\n\r\n\r\n\r\n\tconst clearData = () => {\r\n\t\tsetSalonId('');\r\n\t\tsetEmail('');\r\n\t\tsetPhone('');\r\n\t\tsetAddress('');\r\n\t\tsetName('');\r\n\t\tsetEmailError('');\r\n\t\tsetPassword('');\r\n\t\tsetPasswordError('');\r\n\t\tsetPhoneError('');\r\n\t\tsetAddressError('');\r\n\t\tsetNameError('');\r\n\t\tsetImageSrc('');\r\n\t\tsetImageSrcError('');\r\n\t\tsetSelectUpdateModel({})\r\n\t}\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetShowAddModal(false);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (name === '' && name.trim() === '') {\r\n\t\t\tsetNameError('Please enter name');\r\n\t\t} else if (email === '' && email.trim() === '') {\r\n\t\t\tsetEmailError('Please enter email address');\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError('Please enter valid email address');\r\n\t\t} else if (phone === '' && phone.trim() === '') {\r\n\t\t\tsetPhoneError('Please enter phone');\r\n\t\t} else if (!validatePhone(unMasking(phone))) {\r\n\t\t\tsetPhoneError('Phone number must be 10 digits');\r\n\t\t} else if (address === '' && address.trim() === '') {\r\n\t\t\tsetAddressError('Please enter address');\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileDataError('Please select files to upload');\r\n\t\t} else if (id === '' && !validatePassword(password)) {\r\n\t\t\tsetPasswordError('Please enter password');\r\n\t\t} else if (id === '' && password.length < 7) {\r\n\t\t\tsetPasswordError('Password must be at least 8 characters');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet fileData = new FormData();\r\n\t\t\tif (id !== '') {\r\n\t\t\t\tfileData.append('id', id);\r\n\t\t\t} else {\r\n\t\t\t\tfileData.append('password', password);\r\n\t\t\t}\r\n\r\n\t\t\tfileData.append('name', name);\r\n\t\t\tfileData.append('email', email);\r\n\t\t\tfileData.append('address', address);\r\n\t\t\tfileData.append('phone', unMasking(phone));\r\n\r\n\t\t\tfor (let i = 0; i < uploadFileData.length; i++) {\r\n\t\t\t\tfileData.append('image', uploadFileData[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(createNewSalonAction(fileData));\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteSalonAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getSalonListAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(changeStatusSalonAction(d._id, {\r\n\t\t\t\"enable\": d.active ? true : false,\r\n\t\t}));\r\n\t};\r\n\r\n\r\n\tconst onCancelSubscriptionHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tdispatch(cancelSubscriptionAction(d._id));\r\n\t};\r\n\r\n\tconst onCancelSubscriptionModalClose = () => {\r\n\t\tsetSelectUpdateModel({});\r\n\t\tsetModalCancelSubscription(false);\r\n\t};\r\n\r\n\tconst handleEditModalSalon = (d) => {\r\n\t\tsetSalonId(d._id);\r\n\t\tsetEmail(d.email);\r\n\t\tsetPhone(inputPhoneMasking(d.phone));\r\n\t\tsetName(d.name);\r\n\t\tsetAddress(d.address);\r\n\t\tsetImageSrc(d.photo);\r\n\t\tsetShowAddModal(true);\r\n\t};\r\n\r\n\r\n\tconst onChangePwdModalClose = () => {\r\n\t\tsetModalChangePasswordState(false);\r\n\t};\r\n\r\n\tconst onChangePwdUserHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tlet type = 'byAdmin';\r\n\t\tdispatch(changePasswordUserAction({ 'id': d._id, type, 'email': d.email }));\r\n\t\tonChangePwdModalClose();\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onSettingHandler = () => {\r\n\t\tlet d = selectUpdateModel;\r\n\t\tonSettingModalClose(false);\r\n\t\tdispatch(changeMenuSettingsAction(d._id, appMenu));\r\n\t};\r\n\r\n\r\n\tconst onSettingModalClose = () => {\r\n\t\tsetModalSettingState(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getSalonListAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='salon'\r\n\t\t\theaderTitle='Salon'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\t(getUserInfo.userInfo.data.role === 'admin') ? true : false\r\n\t\t\t}\r\n\t\t\taddBtnText='Add New Salon'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setShowAddModal(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search salon...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tsalonList.loading ?\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tsalonList &&\r\n\t\t\t\t\t\tsalonList.userInfo &&\r\n\t\t\t\t\t\tsalonList.userInfo.status &&\r\n\t\t\t\t\t\tsalonList.userInfo.data.result &&\r\n\t\t\t\t\t\tsalonList.userInfo.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<SalonData\r\n\t\t\t\t\t\t\t\tdata={salonList.userInfo.data.result}\r\n\t\t\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\t\t\tsetShowAddModal={setShowAddModal}\r\n\t\t\t\t\t\t\t\tsetSelectUpdateModel={setSelectUpdateModel}\r\n\t\t\t\t\t\t\t\tsetModalDeleteState={setModalDeleteState}\r\n\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\thandleEditModalSalon={handleEditModalSalon}\r\n\t\t\t\t\t\t\t\tsetModalChangePasswordState={setModalChangePasswordState}\r\n\t\t\t\t\t\t\t\tsetModalSettingState={setModalSettingState}\r\n\t\t\t\t\t\t\t\tsetAppMenu={setAppMenu}\r\n\t\t\t\t\t\t\t\tsetModalCancelSubscription={setModalCancelSubscription}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{totalPageSize > 1 &&\r\n\t\t\t\t\t\t\t\t<div className=\"tableContainer--paginater\">\r\n\t\t\t\t\t\t\t\t\t<Pagination list={salonList.userInfo} onPageChange={handlePageChange} rowsPerPage={pageLimit} totalPageSize={totalPageSize} pageNumber={pageNumber} />\r\n\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\t\tsubTitle='We could not find any salon data.'\r\n\t\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\t<CreateEditSalon data={{\r\n\t\t\t\tshowAddModal,\r\n\t\t\t\thandleAddModalClose,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\taddress,\r\n\t\t\t\tphone,\r\n\t\t\t\tsetName,\r\n\t\t\t\tsetEmail,\r\n\t\t\t\tsetPhone,\r\n\t\t\t\tsetAddress,\r\n\t\t\t\tnameError,\r\n\t\t\t\taddressError,\r\n\t\t\t\tphoneError,\r\n\t\t\t\temailError,\r\n\r\n\t\t\t\tsetNameError,\r\n\t\t\t\tsetAddressError,\r\n\t\t\t\tsetPhoneError,\r\n\t\t\t\tsetEmailError,\r\n\t\t\t\tselectUpdateModel,\r\n\t\t\t\tsetSelectUpdateModel,\r\n\r\n\t\t\t\tpassword,\r\n\t\t\t\tsetPassword,\r\n\t\t\t\tpasswordError,\r\n\t\t\t\tsetPasswordError,\r\n\r\n\t\t\t\timageSrc,\r\n\t\t\t\tsetImageSrc,\r\n\t\t\t\timageSrcError,\r\n\t\t\t\tsetImageSrcError,\r\n\t\t\t\tsetUploadFileData,\r\n\t\t\t\tuploadFileDataError,\r\n\t\t\t\tsetUploadFileDataError,\r\n\t\t\t}} />\r\n\r\n\t\t\t<DeleteSalon data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\r\n\t\t\t<ChangePwdUser data={{ modalChangePasswordState, onChangePwdModalClose, onChangePwdUserHandler }} />\r\n\r\n\t\t\t<MenuSettingUser data={{ appMenu, setAppMenu, modalSettingState, onSettingModalClose, onSettingHandler }} />\r\n\r\n\t\t\t<CancelSubscription data={{ modalCancelSubscription, onCancelSubscriptionModalClose, onCancelSubscriptionHandler }} />\r\n\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default SalonScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\index.js",["2073","2074","2075","2076","2077"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport AddAppVersion from './AddAppVersion';\r\nimport {\r\n\tchangeAppVersionStatusAction,\r\n\tcreateAppVersionAction,\r\n\tdeleteAppVersionAction,\r\n\tgetAllAppVersionAction\r\n} from '../../redux/actions/appVersionActions';\r\nimport {\r\n\tADD_APP_VERSION_RESET,\r\n\tCHANGE_APP_VERSION_STATUS_RESET,\r\n\tDELETE_APP_VERSION_RESET\r\n} from '../../redux/constants/appVersionConstants';\r\nimport DeleteAppVersion from './DeleteAppVersion';\r\nimport Pagination from '../../components/Pagination';\r\nimport NoData from '../../components/NoData';\r\nimport { getAllEnabledSalonListAction } from '../../redux/actions/salonActions';\r\nimport Styles from './Appversion.module.css'\r\n\r\nconst AppVersionScreen = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\r\n\tconst appVersionList = useSelector((state) => state.appVersionList);\r\n\tconst createAppVersion = useSelector((state) => state.createAppVersion);\r\n\tconst changeAppVersionStatus = useSelector((state) => state.changeAppVersionStatus);\r\n\tconst deleteAppVersion = useSelector((state) => state.deleteAppVersion);\r\n\tconst salonEnabledList = useSelector((state) => state.salonEnabledList);\r\n\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [salonList, setSalonList] = useState([]);\r\n\r\n\tconst [versionTitleAndroid, setVersionTitleAndroid] = useState('');\r\n\tconst [versionTitleAndroidError, setVersionTitleAndroidError] = useState('');\r\n\r\n\tconst [androidStoreURL, setAndroidStoreURL] = useState('');\r\n\tconst [androidStoreURLError, setAndroidStoreURLError] = useState('');\r\n\r\n\tconst [versionTitleIOS, setVersionTitleIOS] = useState('');\r\n\tconst [versionTitleIOSError, setVersionTitleIOSError] = useState('');\r\n\r\n\tconst [iosStoreURL, setIOSStoreURL] = useState('');\r\n\tconst [iosStoreURLError, setIOSStoreURLError] = useState('');\r\n\r\n\tconst [versionDescription, setVersionDescription] = useState('');\r\n\tconst [versionDescriptionError, setVersionDescriptionError] = useState('');\r\n\tconst [isCompulsory, setIsCompulsory] = useState(false);\r\n\tconst [isCompulsoryError, setIsCompulsoryError] = useState('');\r\n\r\n\tconst [salon, setSalonId] = useState('');\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\tgetUserInfo.userInfo.data.role === 'admin'\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getAllEnabledSalonListAction());\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, getUserInfo, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tsalonEnabledList &&\r\n\t\t\t\tsalonEnabledList.userInfo &&\r\n\t\t\t\tsalonEnabledList.userInfo.data &&\r\n\t\t\t\tsalonEnabledList.userInfo.data.result &&\r\n\t\t\t\tsalonEnabledList.userInfo.data.result.length > 0\r\n\t\t\t) {\r\n\t\t\t\tlet tmparr = salonEnabledList.userInfo.data.result.map((item) => ({ ...item, label: item.name, value: item._id }));\r\n\t\t\t\tsetSalonList(tmparr);\r\n\t\t\t\tif (salonList && salonList.length > 0) {\r\n\t\t\t\t\tsetSalonId(salonList[0]._id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salonEnabledList, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (salon && salon.trim() !== '') {\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[salon, dispatch, pageNumber]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createAppVersion && createAppVersion.category && createAppVersion.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(createAppVersion.category.message);\r\n\t\t\t\tdispatch({ type: ADD_APP_VERSION_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (createAppVersion && createAppVersion.category && !createAppVersion.category.status) {\r\n\t\t\t\tdispatch({ type: ADD_APP_VERSION_RESET });\r\n\t\t\t\ttoast.error(createAppVersion.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createAppVersion, dispatch, pageNumber]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeAppVersionStatus && changeAppVersionStatus.category && changeAppVersionStatus.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(changeAppVersionStatus.category.message);\r\n\t\t\t\tdispatch({ type: CHANGE_APP_VERSION_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (changeAppVersionStatus && changeAppVersionStatus.category && !changeAppVersionStatus.category.status) {\r\n\t\t\t\tdispatch({ type: CHANGE_APP_VERSION_STATUS_RESET });\r\n\t\t\t\ttoast.error(changeAppVersionStatus.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[changeAppVersionStatus, dispatch, pageNumber]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteAppVersion && deleteAppVersion.category && deleteAppVersion.category.status) {\r\n\t\t\t\tclearData();\r\n\t\t\t\tsetAddModalActive(false);\r\n\t\t\t\ttoast.success(deleteAppVersion.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_APP_VERSION_RESET });\r\n\t\t\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t} else if (deleteAppVersion && deleteAppVersion.category && !deleteAppVersion.category.status) {\r\n\t\t\t\tdispatch({ type: DELETE_APP_VERSION_RESET });\r\n\t\t\t\ttoast.error(deleteAppVersion.category.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteAppVersion, dispatch, pageNumber]\r\n\t);\r\n\r\n\tconst clearData = () => {\r\n\t\tsetVersionTitleAndroid('');\r\n\t\tsetVersionTitleAndroidError('');\r\n\t\tsetVersionTitleIOS('');\r\n\t\tsetVersionTitleIOSError('');\r\n\t\tsetVersionDescription('');\r\n\t\tsetVersionDescriptionError('');\r\n\t\tsetIsCompulsory(false);\r\n\t\tsetIsCompulsoryError('');\r\n\t\tsetSelectUpdateModel({});\r\n\r\n\t\tsetAndroidStoreURL('');\r\n\t\tsetAndroidStoreURLError('');\r\n\t\tsetIOSStoreURL('');\r\n\t\tsetIOSStoreURLError('');\r\n\t};\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (versionTitleAndroid === '' && versionTitleAndroid.trim() === '') {\r\n\t\t\tsetVersionTitleAndroidError('Please enter android version number');\r\n\t\t} else if (versionTitleIOS === '' && versionTitleIOS.trim() === '') {\r\n\t\t\tsetVersionTitleIOSError('Please enter ios version number');\r\n\t\t} else if (androidStoreURL === '' && androidStoreURL.trim() === '') {\r\n\t\t\tsetAndroidStoreURLError('Please enter package name');\r\n\t\t} else if (iosStoreURL === '' && iosStoreURL.trim() === '') {\r\n\t\t\tsetIOSStoreURLError('Please enter bundle ID');\r\n\t\t} else {\r\n\t\t\tdispatch(createAppVersionAction({\r\n\t\t\t\tsalon,\r\n\t\t\t\tversionTitleIOS,\r\n\t\t\t\tversionTitleAndroid,\r\n\t\t\t\tpackageName: androidStoreURL,\r\n\t\t\t\tbundleID: iosStoreURL,\r\n\t\t\t\tversionDescription,\r\n\t\t\t\tisCompulsory\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangeHandler = (d) => {\r\n\t\tdispatch(\r\n\t\t\tchangeAppVersionStatusAction(d._id, {\r\n\t\t\t\tsalon: salon,\r\n\t\t\t\tenable: d.enable ? true : false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tclearData();\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteAppVersionAction(selectUpdateModel._id, salon));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllAppVersionAction({ salon: salon, pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSalonChange = async (item) => {\r\n\t\tsetSalonId(item);\r\n\t\t// var salon = salonList.find(item => item._id === item);\r\n\t\t// setAndroidStoreURL(salon.androidStoreURL);\r\n\t\t// setIOSStoreURL(salon.iosStoreURL);\r\n\t\t// dispatch(getAllAppVersionAction({ salon: salon, pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='appversion'\r\n\t\t\theaderTitle='App Version'\r\n\t\t\taddBtn={\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t\tgetUserInfo.userInfo.data.role === 'admin' ? (\r\n\t\t\t\t\ttrue\r\n\t\t\t\t) : (\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\taddBtnText='Add App Version'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={false}\r\n\t\t\tsearchPlaceholder=''\r\n\t\t\tsearchIcon='search'\r\n\t\t\tlistFilter={true}\r\n\t\t\tlistType={salon}\r\n\t\t\tgetTypeList={salonList}\r\n\t\t\tonTypeListChange={(e) => { onSalonChange(e) }}\r\n\t\t>\r\n\t\t\t<div className={Styles.tableContainer} style={{ height: '65vh' }}>\r\n\t\t\t\t<table className={Styles.table}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tVersion( Android &nbsp;\r\n\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-android`} />\r\n\t\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tVersion( iOS &nbsp;\r\n\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-apple`} />\r\n\t\t\t\t\t\t\t\t</svg>)\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t\t<th>Compulsory</th>\r\n\t\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{appVersionList && appVersionList.loading ? (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colSpan='7' style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t) : appVersionList &&\r\n\t\t\t\t\t\t\tappVersionList.categories &&\r\n\t\t\t\t\t\t\tappVersionList.categories.data &&\r\n\t\t\t\t\t\t\tappVersionList.categories.data.length > 0 ? (\r\n\t\t\t\t\t\t\tappVersionList.categories.data.map((res, index) => (\r\n\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.versionTitleAndroid}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.versionTitleIOS}</td>\r\n\t\t\t\t\t\t\t\t\t<td className='text_wrap_desc'>{res.versionDescription}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{res.isCompulsory ? 'Yes' : 'No'}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={res._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{!res.enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Version</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colSpan='7' style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\t\t\t\tsubTitle='We could not find any app version. Please add one'\r\n\t\t\t\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\r\n\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\tlist={appVersionList.categories}\r\n\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddAppVersion\r\n\t\t\t\tdata={{\r\n\t\t\t\t\taddModalActive,\r\n\t\t\t\t\thandleAddModalClose,\r\n\t\t\t\t\thandleSubmit,\r\n\r\n\t\t\t\t\tversionTitleAndroid,\r\n\t\t\t\t\tsetVersionTitleAndroid,\r\n\t\t\t\t\tversionTitleAndroidError,\r\n\t\t\t\t\tsetVersionTitleAndroidError,\r\n\t\t\t\t\tversionTitleIOS,\r\n\t\t\t\t\tsetVersionTitleIOS,\r\n\t\t\t\t\tversionTitleIOSError,\r\n\t\t\t\t\tsetVersionTitleIOSError,\r\n\t\t\t\t\tversionDescription,\r\n\t\t\t\t\tsetVersionDescription,\r\n\t\t\t\t\tversionDescriptionError,\r\n\t\t\t\t\tsetVersionDescriptionError,\r\n\t\t\t\t\tisCompulsory,\r\n\t\t\t\t\tsetIsCompulsory,\r\n\t\t\t\t\tisCompulsoryError,\r\n\t\t\t\t\tsetIsCompulsoryError,\r\n\r\n\t\t\t\t\tandroidStoreURL,\r\n\t\t\t\t\tsetAndroidStoreURL,\r\n\t\t\t\t\tiosStoreURL,\r\n\t\t\t\t\tsetIOSStoreURL,\r\n\t\t\t\t\tandroidStoreURLError,\r\n\t\t\t\t\tsetAndroidStoreURLError,\r\n\t\t\t\t\tiosStoreURLError,\r\n\t\t\t\t\tsetIOSStoreURLError\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteAppVersion data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default AppVersionScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\DiscountsList\\index.js",["2078","2079","2080","2081"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Content from '../components/WebsiteContent/Content'\r\nimport Pagination from '../../components/Pagination'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport NoData from '../../website/components/NoData'\r\nimport './DiscountsList.css'\r\nimport { getAllWebsiteCouponsAction, getWebsiteSettingAction, getWebsiteSettingActionById } from '../../redux/actions/websiteSettingAction'\r\nimport SubHeadingContent from '../components/SubHeadingContent/SubHeadingContent'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst DiscountsList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { salonId } = useParams()\r\n\tconst getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\tconst getAllCoupons = useSelector((state) => state.getAllCoupons);\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 12; \r\n\tconst [color,setColor] = useState(\"\")\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tif(getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.status){\r\n\t\t\tsetColor(getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.bgColor)\r\n\t\t\t}\r\n\t},[])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && !getPublicWebsite.websiteInfo) {\r\n\t\t\tdispatch(getWebsiteSettingActionById(salonId));\r\n\t\t}\r\n\t}, [dispatch])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getAllWebsiteCouponsAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }))\r\n\t}, [dispatch])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getAllCoupons && getAllCoupons.data && getAllCoupons.data.status && getAllCoupons.data.data.result.length > 0) {\r\n\t\t\tsetTotalPageSize(getAllCoupons.data.data.totalPageSize);\r\n\t\t}\r\n\t}, [getAllCoupons])\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllWebsiteCouponsAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content getPublicWebsite={getPublicWebsite}>\r\n\t\t\t<SubHeadingContent\r\n\t\t\t\ttitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarText}\r\n\t\t\t\tsubTitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarPara}\r\n\t\t\t\tstyle={{backgroundColor:color}}\r\n\t\t\t/>\r\n\r\n\t\t\t{getAllCoupons.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : getAllCoupons &&\r\n\t\t\t\tgetAllCoupons.data &&\r\n\t\t\t\tgetAllCoupons.data.status &&\r\n\t\t\t\tgetAllCoupons.data.data.result &&\r\n\t\t\t\tgetAllCoupons.data.data.result.length > 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='discount_main_container'>\r\n\t\t\t\t\t\t{getAllCoupons.data.data.result.map((item, i) => (\r\n\t\t\t\t\t\t\t<div className='couponCard' key={i}>\r\n\t\t\t\t\t\t\t\t<h1>{item.title}</h1>\r\n\t\t\t\t\t\t\t\t<p style={{color:color}}>Valid Until: &nbsp;\r\n\t\t\t\t\t\t\t\t\t{new Date(item.expireDate).toLocaleDateString('en-US', {\r\n\t\t\t\t\t\t\t\t\t\tyear: 'numeric',\r\n\t\t\t\t\t\t\t\t\t\tmonth: '2-digit',\r\n\t\t\t\t\t\t\t\t\t\tday: '2-digit'\r\n\t\t\t\t\t\t\t\t\t})}</p>\r\n\t\t\t\t\t\t\t\t<h4>Code: <span style={{ fontWeight: 'bold' }}>{item.code}</span></h4>\r\n\t\t\t\t\t\t\t\t<h3 style={{ fontWeight: 'bold' }}>{item.description} </h3>  \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='discount_main_container' style={{ justifyContent: 'center' }}>\r\n\t\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\tlist={getAllCoupons.data.data.result}\r\n\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any coupon data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t</Content>\r\n\t)\r\n}\r\n\r\nexport default DiscountsList","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\CustomHomeScreen\\index.js",["2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093"],"import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Button from '../../components/formInputs/Button';\r\nimport { addWebsiteContactUsAction, getWebsiteServiceAction, getWebsiteServiceActionById, getWebsiteSettingAction, getWebsiteSettingActionById } from '../../redux/actions/websiteSettingAction';\r\nimport Content from '../components/WebsiteContent/Content';\r\nimport RoundCards from './RoundCards';\r\nimport moment from 'moment';\r\nimport { inputPhoneMasking, validateEmail, validatePhone } from '../../utils/validators';\r\nimport { getAllProductsAction } from '../../redux/actions/productActions';\r\nimport { ADD_WEBSITE_CONTACT_US_RESET, GET_WEBSITE_SETTING_RESET } from '../../redux/constants/websiteSettingConstant';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Stars from '../components/Stars/Stars';\r\nimport './HomeScreen.css';\r\nimport SubHeadingContent from '../components/SubHeadingContent/SubHeadingContent';\r\n\r\nconst CustomHomeScreen = () => {\r\n\tconst { salonId } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\tconst getWebsiteService = useSelector((state) => state.getWebsiteService);\r\n\tconst addWebsiteContactUs = useSelector((state) => state.addWebsiteContactUs);\r\n\tconst getAllProducts = useSelector((state) => state.getAllProducts);\r\n\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [nameError, setNameError] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [emailError, setEmailError] = useState(\"\");\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\tconst [phoneError, setPhoneError] = useState(\"\");\r\n\tconst [subject, setSubject] = useState(\"\");\r\n\tconst [subjectError, setSubjectError] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [messageError, setMessageError] = useState(\"\");\r\n\tconst [categoryName, setCategoryName] = useState(null)\r\n\tconst [color,setColor] = useState(\"\")\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tif(getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.status){\r\n\t\t\tsetColor(getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.bgColor)\r\n\t\t\t}\r\n\t},[])\r\n\tuseEffect(() => {\r\n\t\tdispatch(getWebsiteSettingActionById(salonId));\r\n\t}, [salonId])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data) {\r\n\t\t\tconst formData = {\r\n\t\t\t\t\"pageNumber\": 1,\r\n\t\t\t\t\"pageSize\": 9,\r\n\t\t\t\t\"filter\": [],\r\n\t\t\t\t\"minPrice\": 10,\r\n\t\t\t\t\"maxPrice\": 10000,\r\n\t\t\t\t'name': salonId\r\n\t\t\t}\r\n\t\t\t// localStorage.setItem('salonId',salonId);\r\n\t\t\tdispatch(getWebsiteServiceActionById(salonId))\r\n\t\t\tdispatch(getAllProductsAction(formData));\r\n\t\t} else if (getPublicWebsite && getPublicWebsite.websiteInfo && !getPublicWebsite.websiteInfo.status) {\r\n\t\t\ttoast.error(getPublicWebsite.websiteInfo.message);\r\n\t\t\t// setTimeout(() => {\r\n\t\t\t// \twindow.location.replace('https://bookb.io');\r\n\t\t\t// }, 2500)\r\n\t\t\tdispatch({ type: GET_WEBSITE_SETTING_RESET });\r\n\t\t}\r\n\t}, [getPublicWebsite, dispatch])\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getWebsiteService &&\r\n\t\t\tgetWebsiteService.session &&\r\n\t\t\tgetWebsiteService.session.data &&\r\n\t\t\tgetWebsiteService.session.data.result &&\r\n\t\t\tgetWebsiteService.session.data.result.length > 0) {\r\n\t\t\tsetCategoryName(getWebsiteService.session.data.result[0].category.title)\r\n\t\t}\r\n\t}, [getWebsiteService])\r\n\r\n\tconst getFilteredList = () => {\r\n\t\tif (getWebsiteService &&\r\n\t\t\tgetWebsiteService.session &&\r\n\t\t\tgetWebsiteService.session.data &&\r\n\t\t\tgetWebsiteService.session.data.result &&\r\n\t\t\tgetWebsiteService.session.data.result.length > 0) {\r\n\t\t\tif (!categoryName) {\r\n\t\t\t\treturn getWebsiteService.session.data.result;\r\n\t\t\t}\r\n\r\n\t\t\treturn getWebsiteService.session.data.result.filter((item) => item && item.category && item.category.title === categoryName);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetFilteredList();\r\n\t}, [categoryName])\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (addWebsiteContactUs && addWebsiteContactUs.data && addWebsiteContactUs.data.status) {\r\n\t\t\t\ttoast.success(addWebsiteContactUs.data.message);\r\n\t\t\t\tclearData();\r\n\t\t\t\tdispatch({ type: ADD_WEBSITE_CONTACT_US_RESET });\r\n\t\t\t} else if (addWebsiteContactUs && addWebsiteContactUs.data && addWebsiteContactUs.data.data && !addWebsiteContactUs.data.data.status) {\r\n\t\t\t\tdispatch({ type: ADD_WEBSITE_CONTACT_US_RESET });\r\n\t\t\t\ttoast.error(addWebsiteContactUs.data.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addWebsiteContactUs]\r\n\t);\r\n\r\n\r\n\tlet filteredList = useMemo(getFilteredList, [categoryName, getWebsiteService && getWebsiteService.session && getWebsiteService.session.data && getWebsiteService.session.data.result]);\r\n\r\n\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (name === \"\") {\r\n\t\t\tsetNameError(\"Please enter name\");\r\n\t\t}\r\n\t\tif (email === \"\") {\r\n\t\t\tsetEmailError(\"Please enter email\")\r\n\t\t}\r\n\t\tif (!validateEmail(email)) {\r\n\t\t\tsetEmailError(\"Please enter valid email\")\r\n\t\t}\r\n\t\tif (phone === \"\") {\r\n\t\t\tsetPhoneError(\"Please enter phone no.\")\r\n\t\t}\r\n\r\n\t\tif (subject === \"\") {\r\n\t\t\tsetSubjectError(\"Please enter subject\");\r\n\t\t}\r\n\t\tif (message === \"\") {\r\n\t\t\tsetMessageError(\"Please enter message\")\r\n\t\t}\r\n\r\n\t\tif (name && email && validateEmail(email) && phone && subject && message) {\r\n\t\t\tlet data = {\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\tphone: phone,\r\n\t\t\t\tsubject,\r\n\t\t\t\tmessage,\r\n\t\t\t}\r\n\t\t\tdispatch(addWebsiteContactUsAction(data));\r\n\t\t}\r\n\t}\r\n\r\n\tconst clearData = () => {\r\n\t\tsetName(\"\");\r\n\t\tsetEmail(\"\");\r\n\t\tsetPhone(\"\");\r\n\t\tsetSubject(\"\");\r\n\t\tsetMessage(\"\");\r\n\t\tsetNameError(\"\");\r\n\t\tsetEmailError(\"\");\r\n\t\tsetPhoneError(\"\");\r\n\t\tsetSubjectError(\"\");\r\n\t\tsetMessageError(\"\");\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Content getPublicWebsite={getPublicWebsite} style={{backgroundColor:color}}>\r\n\t\t\t<SubHeadingContent\r\n\t\t\t\ttitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarText}\r\n\t\t\t\tsubTitle={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.appearanceBarPara}\r\n\t\t\t\tstyle={{backgroundColor:color}}\r\n\t\t\t/>\r\n\t\t\t<div className=\"homescreen_banner\" id=\"banner\">\r\n\t\t\t\t<div className=\"homescreen_banner_outer\">\r\n\t\t\t\t\t<div className=\"homescreen_motive\">\r\n\t\t\t\t\t\t<h1 className=\"homescreen_banner__subtitle\">\r\n\t\t\t\t\t\t\t{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteTitle}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<h1 className=\"homescreen_banner__desc\">\r\n\t\t\t\t\t\t\t{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteSubTitle}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<div className='new_book'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvarient=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: '70%',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\tbackgroundColor:color,\r\n\t\t\t\t\t\t\t\tmarginLeft: '0rem'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thistory.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/book-appointment`);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=\"Book an Appointment\"\r\n\t\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img src=\"./assets/styler.png\" className=\"img-responsive1\" alt=\"salon Image\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.websiteBannerImageURL} className=\"img-responsive\" alt=\"salon Image\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{getAllProducts &&\r\n\t\t\t\tgetAllProducts.products &&\r\n\t\t\t\tgetAllProducts.products.data &&\r\n\t\t\t\tgetAllProducts.products.data.result &&\r\n\t\t\t\tgetAllProducts.products.data.result.length > 0 &&\r\n\t\t\t\t<div className=\"homescreen_products\" id=\"products\" style={{backgroundColor:color}}>\r\n\t\t\t\t\t<div className=\"CardHeader\">\r\n\t\t\t\t\t\t<h1>{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.productText}</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='product-container'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgetAllProducts.products.data.result.slice(0, 4).map((res, index) => (\r\n\t\t\t\t\t\t\t\t<div key={index + 1} className=\"product_card--layout\" onClick={() => history.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/product-info/${res._id}`)}>\r\n\t\t\t\t\t\t\t\t\t<img src={res.productImageURL} alt=\"product thumb\" className=\"product_card\" style={{ cursor: 'pointer' }} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"porduct-desc\">\r\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"productCard__title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{res.rating > 0 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"product--rate\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Stars rating={res.rating} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t<p>\t{res.productName.length > 10 ? res.productName.slice(0, 20) : res.productName}  \t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t$ {res.productPrice}  <span className=\"actualPrice\">${res.actualPrice}</span>\r\n\t\t\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"all_products\">\r\n\t\t\t\t\t\t<a className=\"all_products_button\" href={`#/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/products-list`}>\r\n\t\t\t\t\t\t\tView all\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>}\r\n\t\t\t<div className=\"services\" id=\"services_our\">\r\n\t\t\t\t<h1 className=\"servies_main_heading\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.serviceText}</h1>\r\n\t\t\t\t<div className='service_list'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgetWebsiteService && getWebsiteService.session && getWebsiteService.session.data && getWebsiteService.session.data.result && getWebsiteService.session.data.result.length > 0 && getWebsiteService.session.data.result.map((item, id) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button key={id} className={categoryName === item.category.title ? 'activeBtn' : 'serviceBtn'} onClick={() => setCategoryName(item.category.title)} style={categoryName === item.category.title ? {backgroundColor:color}: {borderColor:color,color:color}}>{item.category.title}</button>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"our_services\">\r\n\t\t\t\t\t<div className=\"our_services_outer\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfilteredList && filteredList.length > 0 &&\r\n\t\t\t\t\t\t\tfilteredList.map((item, id) => (<RoundCards service={item} color={color}/>))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"working_time\" id=\"hoursOfOperation\">\r\n\t\t\t\t<div className=\"working_time_left\" style={{backgroundColor:color}}>\r\n\t\t\t\t\t<h1 className=\"working_time_heading\">WORKING HOURS</h1>\r\n\t\t\t\t\t<p className=\"our_services_subheading1\">The hours and days we can serve you</p>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgetPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.workHour && getPublicWebsite.websiteInfo.data.workHour.map((item, id) =>\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{item.isAvailable ?\r\n\t\t\t\t\t\t\t\t\t<div className=\"days_we_work\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"our_services_subheading\">{item.day}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"our_services_subheading\">{moment(item && item.slot && item.slot.startTime, \"hh:mm a\").format('LT')} - {moment(item && item.slot && item.slot.endTime, \"hh:mm a\").format('LT')}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t(<div className=\"days_we_work-sunday\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"our_services_subheading\">{item.day}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"our_services_subheading\">Closed</p>\r\n\t\t\t\t\t\t\t\t\t</div>)\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<hr className=\"hr\" />\r\n\t\t\t\t\t<div className=\"bookings\">\r\n\t\t\t\t\t\t<h2 className=\"our_services_subheading1\">\r\n\t\t\t\t\t\t\tContact on this numer for appointments\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<p className=\"our_services_subheading\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.phone}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"working_time_right\">\r\n\t\t\t\t\t<h1 className=\"working_time_heading\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.hourText}</h1>\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<p className=\"our_services_subheading1\">\r\n\t\t\t\t\t\t{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.hourPara}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='new_book'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvarient=\"primary\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '70%',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\tbackgroundColor:color\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thistory.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/book-appointment`);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlabel=\"Book an Appointment\"\r\n\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"chat_section\" id=\"contactus\">\r\n\t\t\t\t<h1 className=\"servies_main_heading\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.contactText ? getPublicWebsite.websiteInfo.data.contactText : \"Contact Us\"}</h1>\r\n\t\t\t\t<p className=\"chat_subheading\">{getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.contactPara}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='contact-container'>\r\n\t\t\t\t<div className='contact_input_container'>\r\n\t\t\t\t\t<div className='contact_input'>\r\n\t\t\t\t\t\t<label>Your Name</label>\r\n\t\t\t\t\t\t<input type='text' placeholder='Name' value={name} onChange={(e) => { setName(e.target.value); setNameError(\"\") }} ></input>\r\n\t\t\t\t\t\t<p className='onboard_error'>{nameError}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='contact_input'>\r\n\t\t\t\t\t\t<label>Your Email</label>\r\n\t\t\t\t\t\t<input type='email' placeholder='Email' value={email} onChange={(e) => { setEmail(e.target.value); setEmailError(\"\") }}></input>\r\n\t\t\t\t\t\t<p className='onboard_error'>{emailError}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='contact_input_container'>\r\n\t\t\t\t\t<div className='contact_input'>\r\n\t\t\t\t\t\t<label>Your Phone No.</label>\r\n\t\t\t\t\t\t<input placeholder='Phone No.' value={inputPhoneMasking(phone)} onChange={(e) => { setPhone(e.target.value); setPhoneError(\"\") }} ></input>\r\n\t\t\t\t\t\t<p className='onboard_error'>{phoneError}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='contact_input'>\r\n\t\t\t\t\t\t<label>Subject</label>\r\n\t\t\t\t\t\t<input type='text' placeholder='Subject' value={subject} onChange={(e) => { setSubject(e.target.value); setSubjectError(\"\") }}></input>\r\n\t\t\t\t\t\t<p className='onboard_error'>{subjectError}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='contact_input_container'>\r\n\t\t\t\t\t<div className='contact_input'>\r\n\t\t\t\t\t\t<label>Your Message</label>\r\n\t\t\t\t\t\t<textarea type='text' placeholder='Message' value={message} onChange={(e) => { setMessage(e.target.value); setMessageError(\"\") }} />\r\n\t\t\t\t\t\t<p className='onboard_error'>{messageError}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='contact_button_container'>\r\n\r\n\t\t\t\t\t<button style={{backgroundColor:color}} onClick={handleClick}>Submit</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Content>\r\n\t)\r\n}\r\n\r\nexport default CustomHomeScreen","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductCategoriesScreen\\index.js",["2094","2095","2096","2097"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Content from '../../components/Content/Content'\r\nimport {\r\n\tcreateProductCategoryAction,\r\n\tdeleteProductCategoryAction,\r\n\tgetAllProductCategoriesAction,\r\n\tproductCategoryStatusAction\r\n} from '../../redux/actions/productActions';\r\nimport {\r\n\tADD_PRODUCT_CATEGORY_RESET,\r\n\tDELETE_PRODUCT_CATEGORY_RESET,\r\n\tGET_ALL_PRODUCT_CATEGORY_RESET,\r\n\tPRODUCT_CATEGORY_STATUS_RESET\r\n} from '../../redux/constants/productConstants';\r\nimport ProductsCategories from './NewProductsCategoriesScreen';\r\n\r\nimport Styles from './NewProductsCategoriesScreen.module.css';\r\nimport Pagination from '../../components/Pagination';\r\nimport DeleteModal from '../../components/Modal/DeleteModal';\r\nimport NoData from '../../website/components/NoData';\r\n\r\n\r\nconst ProductCategoriesScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [addModalActive, setAddModalActive] = useState(false);\r\n\tconst [modalDeleteState, setModalDeleteState] = useState(false);\r\n\tconst [selectUpdateModel, setSelectUpdateModel] = useState({});\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst [categoryName, setCategoryName] = useState({ value: '', error: '' });\r\n\tconst [selectedCategory, setSelectedCategory] = useState({});\r\n\r\n\tconst getAllProductCategories = useSelector((state) => state.getAllProductCategories);\r\n\tconst createProductCategory = useSelector((state) => state.createProductCategory);\r\n\tconst deleteProductCategory = useSelector((state) => state.deleteProductCategory);\r\n\tconst productCategoryStatus = useSelector((state) => state.productCategoryStatus);\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 20;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ALL_PRODUCT_CATEGORY_RESET });\r\n\t\t\t};\r\n\t\t},\r\n\t\t[dispatch, pageNumber]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (createProductCategory && createProductCategory.category && createProductCategory.category.status) {\r\n\t\t\t\ttoast.success(createProductCategory.category.message);\r\n\t\t\t\tdispatch({ type: ADD_PRODUCT_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t\thandleAddModalClose();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[createProductCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (productCategoryStatus && productCategoryStatus.category && productCategoryStatus.category.status) {\r\n\t\t\t\ttoast.success(productCategoryStatus.category.message);\r\n\t\t\t\tdispatch({ type: PRODUCT_CATEGORY_STATUS_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[productCategoryStatus, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (deleteProductCategory && deleteProductCategory.category && deleteProductCategory.category.status) {\r\n\t\t\t\ttoast.success(deleteProductCategory.category.message);\r\n\t\t\t\tdispatch({ type: DELETE_PRODUCT_CATEGORY_RESET });\r\n\t\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[deleteProductCategory, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectedCategory && selectedCategory._id) {\r\n\t\t\t\tsetCategoryName({ value: selectedCategory.categoryName });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedCategory]\r\n\t);\r\n\r\n\tconst handleAddModalClose = () => {\r\n\t\tsetCategoryName({ value: '', error: '' });\r\n\t\tsetSelectedCategory({});\r\n\t\tsetAddModalActive(false);\r\n\t};\r\n\r\n\tconst handleEditButton = (categoryData) => {\r\n\t\tsetSelectedCategory(categoryData);\r\n\t\tsetAddModalActive(true);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (categoryName.value === '' && categoryName.value.trim() === '') {\r\n\t\t\tsetCategoryName({ ...categoryName, error: 'Please enter category name' });\r\n\t\t} else {\r\n\t\t\tif (selectedCategory && selectedCategory._id)\r\n\t\t\t\tdispatch(createProductCategoryAction(selectedCategory._id, categoryName.value));\r\n\t\t\telse dispatch(createProductCategoryAction(null, categoryName.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnableCategory = (id, enableStatus) => {\r\n\t\tdispatch(productCategoryStatusAction(id, enableStatus));\r\n\t};\r\n\r\n\tconst onDeleteModalClose = () => {\r\n\t\tsetModalDeleteState(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = () => {\r\n\t\tdispatch(deleteProductCategoryAction(selectUpdateModel._id));\r\n\t\tonDeleteModalClose();\r\n\t};\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getAllProductCategoriesAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(\r\n\t\t\tgetAllProductCategoriesAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value })\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='products'\r\n\t\t\theaderTitle='Product Categories'\r\n\t\t\taddBtn={true}\r\n\t\t\taddBtnText='Add Category'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => setAddModalActive(true)}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Categories...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{getAllProductCategories.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{getAllProductCategories &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data.result &&\r\n\t\t\t\t\t\tgetAllProductCategories.categories.data.result.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className={Styles.tableContainer} style={{ height: '65vh' }}>\r\n\t\t\t\t\t\t\t\t<table className={Styles.table}>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Category Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Created At</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Active Status</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th >Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{getAllProductCategories && getAllProductCategories.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result.map((res, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{res.categoryName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{new Date(res.createdAt).toLocaleDateString()}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={res.enable}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnableCategory(res._id, res.enable);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => handleEditButton(res)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit Category Details</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Category</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\t\tlist={getAllProductCategories.categories}\r\n\t\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubTitle='We could not find any product category data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<ProductsCategories\r\n\t\t\t\tdata={{ addModalActive, handleAddModalClose, categoryName, setCategoryName, selectedCategory, handleSubmit }}\r\n\t\t\t/>\r\n\t\t\t<DeleteModal data={{ modalDeleteState, onDeleteModalClose, onDeleteHandler }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default ProductCategoriesScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\AppPayment\\index.js",["2098","2099","2100","2101","2102","2103"],"import { CardCvcElement, CardExpiryElement, CardNumberElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { addAppOrderAction, addOrderAction, addPaymentAction, getOrderByIdAction } from '../../redux/actions/productActions';\r\nimport { getWebsiteSettingAction } from '../../redux/actions/websiteSettingAction';\r\nimport CheckoutButton from '../components/Button/CheckoutButton';\r\nimport Content from '../components/WebsiteContent/Content';\r\nimport imgGif from \"../../components/assets/check-green.gif\";\r\n//const stripePromise = loadStripe('pk_test_HLKSK1hyuVsxEIZxIsEivNEj00RsqCdrBq');\r\nimport { stripePublicKey } from '../../redux/actions/ip';\r\n\r\nconst stripePromise = loadStripe(stripePublicKey);\r\n\r\nconst AppPayment = ({ paymentData }) => {\r\n  const { transactionId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const getOrderById = useSelector((state) => state.getOrderById);\r\n  const addAPayment = useSelector((state) => state.addAPayment);\r\n \r\n  useEffect(() => {\r\n    if (addAPayment && addAPayment.categories && addAPayment.categories.status) {\r\n      window.ReactNativeWebView.postMessage(JSON.stringify(addAPayment.categories))\r\n    }\r\n  }, [addAPayment])\r\n\r\n  let formData = {}\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderByIdAction(transactionId))\r\n  }, [addAPayment, transactionId])\r\n\r\n  const handleCheckout = () => {\r\n    dispatch(addPaymentAction(formData))\r\n  }\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <Payment paymentData={paymentData} getOrderById={getOrderById} formData={formData} handleCheckout={handleCheckout} transactionId={transactionId} addAPayment={addAPayment} />\r\n    </Elements>\r\n  )\r\n}\r\nexport default AppPayment\r\n\r\nconst Payment = ({ getOrderById, formData, handleCheckout, transactionId, addAPayment }) => { \r\n\r\n  const { salonName } = useParams();\r\n  const dispatch = useDispatch();\r\n  const stripe = useStripe();\r\n  const elements = useElements(); \r\n  const getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (getPublicWebsite && !getPublicWebsite.websiteInfo) {\r\n      dispatch(getWebsiteSettingAction(salonName));\r\n    }\r\n  }, [dispatch])\r\n\r\n  const handlePaymentSubmit = async (e) => {\r\n    const cardElement = elements.getElement(CardNumberElement);\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement\r\n    })\r\n\r\n    if (!error) {\r\n      const { id } = paymentMethod;\r\n      // handleCheckout(id)\r\n      // const formdata = {\r\n      //   orderId:'#10073',\r\n      //   transactionId: id,\r\n      // }\r\n\r\n      formData.orderID = transactionId;\r\n      formData.transactionId = id;\r\n      if (formData.transactionId !== \"\") {\r\n        handleCheckout()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Content getPublicWebsite={getPublicWebsite}>\r\n\r\n      <div className='main--containers' style={{ marginTop: '5rem', alignItems: 'center', justifyContent: 'center' }}>\r\n        <div className='all--address--container'>\r\n          <div className='checkOut-container'>\r\n            <div className='shpping--address'>\r\n              {addAPayment && addAPayment.categories && addAPayment.categories.status ?\r\n                <div className='card--container'>\r\n                  <div className='shpping--address' style={{ marginTop: \"0rem\" }}>\r\n                    <div className='successfull-payment'>\r\n                      <img className='thankyou-img' src={imgGif} />\r\n                      <h1>Thank You!</h1>\r\n                      <h2>{addAPayment && addAPayment.categories && addAPayment.categories.message}</h2>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div className='card--container'>\r\n                  <div className='filter--content'>\r\n                    <p className='shipping--header'>Add Payment Card Details</p>\r\n                  </div>\r\n\r\n\r\n                  <div className='input--box' style={{ marginTop: '1rem' }}>\r\n                    <label className='label--card'>Enter Card Number</label>\r\n                    <div className='cardInput'>\r\n                      <CardNumberElement\r\n                        options={{\r\n                          showIcon: true,\r\n                          style: {\r\n                            base: {\r\n                              iconColor: 'black',\r\n                              //color: '#ff0',\r\n                              fontWeight: '500',\r\n                              fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n                              fontSize: '16px',\r\n                              fontSmoothing: 'antialiased',\r\n                              width: '100%',\r\n                              '::placeholder': {\r\n                                color: 'grey',\r\n                              },\r\n                            }\r\n                          },\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='checkout--flex-inputs'>\r\n                    <div className='input--box' style={{ marginTop: '1rem', width: '100%' }}>\r\n                      <label className='label--card'>Card Expiry</label>\r\n                      <div className='cardInput'>\r\n                        <CardExpiryElement\r\n                          options={{\r\n                            showIcon: true,\r\n                            style: {\r\n                              base: {\r\n                                iconColor: 'black',\r\n                                //color: '#ff0',\r\n                                fontWeight: '500',\r\n                                fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n                                fontSize: '16px',\r\n                                fontSmoothing: 'antialiased',\r\n                                width: '100%',\r\n                                '::placeholder': {\r\n                                  color: 'grey',\r\n                                },\r\n                              },\r\n                            },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='input--box' style={{ marginTop: '1rem', width: '100%' }}>\r\n                      <label className='label--card'>Card Security Number</label>\r\n                      <div className='cardInput'>\r\n                        <CardCvcElement\r\n                          options={{\r\n                            showIcon: true,\r\n                            style: {\r\n                              base: {\r\n                                iconColor: 'black',\r\n                                //color: '#ff0',\r\n                                fontWeight: '500',\r\n                                fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n                                fontSize: '16px',\r\n                                fontSmoothing: 'antialiased',\r\n                                width: '100%',\r\n                                '::placeholder': {\r\n                                  color: 'grey',\r\n                                },\r\n                              },\r\n                              invalid: {\r\n                                iconColor: '#FFC7EE',\r\n                                color: '#FFC7EE',\r\n                              },\r\n                            },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='address__button-container' style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <CheckoutButton\r\n                      varient='secondary'\r\n                      label='Place Order'\r\n                      style={{\r\n                        letterSpacing: '0.2rem',\r\n                        fontWeight: '600',\r\n                        fontSize: '1.2rem',\r\n                        marginTop: '1rem',\r\n                        justifyContent: 'center',\r\n                        padding: '1rem'\r\n                      }}\r\n                      onClick={handlePaymentSubmit}\r\n                    />\r\n                  </div>\r\n                </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Content>\r\n  )\r\n}\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Button\\CheckoutButton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\SubHeadingContent\\SubHeadingContent.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\QuantityInput\\QuantityInput.js",["2104","2105"],"import moment from 'moment';\r\nimport React, { useState } from 'react'; \r\nimport TextBox from './QuantityInput.module.css';\r\n\r\nconst QuantityInput = ({ type, placeholder, onChange, errorMessage, label, style, disabled, min, required = false, quantity, setQuantity, stock }) => {\r\n\r\n\tconst minusQty = () => { \r\n\t\tif (quantity > 1) {\r\n\t\t\tsetQuantity(quantity - 1)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst plusQty = () => {\r\n\t\tif (quantity <= stock) {\r\n\t\t\tsetQuantity(quantity + 1)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<div className=\"qty-box\">\r\n\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t<span className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn quantity-left-minus\"\r\n\t\t\t\t\t\t\t\tonClick={minusQty}\r\n\t\t\t\t\t\t\t\tdata-type=\"minus\" data-field=\"\">\r\n\t\t\t\t\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-minus`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\tname={label}\r\n\t\t\t\t\t\t\tmin={min}\r\n\t\t\t\t\t\t\tclassName=\"form-control input-number\"\r\n\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\trequired={required}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn quantity-right-plus\"\r\n\t\t\t\t\t\t\t\tonClick={plusQty}\r\n\t\t\t\t\t\t\t\tdata-type=\"plus\" data-field=\"\">\r\n\t\t\t\t\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuantityInput;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Stars\\Stars.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\WebsiteContent\\Content.js",["2106"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport ContentStyle from './Content.module.css';\r\nimport WebHeader from '../Headers/Header';\r\nimport Footer from '../Footer';\r\nimport Spinner from '../WebsiteSpinner/Spinner';\r\n\r\nconst Content = ({ children, getPublicWebsite, style }) => {\r\n\tconst [color, setColor] = useState(\"\")\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.status) {\r\n\t\t\tsetColor(getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.bgColor)\r\n\t\t}\r\n\t}, [])\r\n\treturn (\r\n\t\t<main className={ContentStyle.container}>\r\n\t\t\t{getPublicWebsite && getPublicWebsite.loading ?\r\n\t\t\t\t<Spinner />\r\n\t\t\t\t: <Fragment>\r\n\t\t\t\t\t<WebHeader getPublicWebsite={getPublicWebsite} style={style} />\r\n\t\t\t\t\t<div className={ContentStyle.content}>\r\n\t\t\t\t\t\t<div style={{ minHeight: '60rem' }}>\r\n\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Footer\r\n\t\t\t\t\t\t\tphone={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.phone}\r\n\t\t\t\t\t\t\taddress={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.address}\r\n\t\t\t\t\t\t\temail={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.email}\r\n\t\t\t\t\t\t\tsalonName={getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}\r\n\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Content;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\WebsiteSpinner\\Spinner.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\index.js",["2107","2108","2109"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Content/Content';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Pagination from '../../components/Pagination';\r\nimport { changeOrderStatusAction, getProductOrderHistoryAction } from '../../redux/actions/productActions';\r\nimport OrderData from './OrderData';\r\nimport formStyle from './orders.module.css';\r\nimport ProductSummary from './ProductSummary';\r\nimport { CHANGE_ORDER_STATUS_RESET, GET_PRODUCT_ORDER_RESET } from '../../redux/constants/productConstants';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst OrderHistoryScreen = ({ showFilter = false, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userInfo = useSelector((state) => state.userLogin);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst orderList = useSelector((state) => state.orderList);\r\n\tconst changeOrderStatus = useSelector((state) => state.changeOrderStatus);\r\n\tconst [productSummaryList, setProductSummaryList] = useState({});\r\n\tconst [modalSummaryState, setModalSummaryState] = useState(false);\r\n\tconst [status, setStatus] = useState({ value: '', error: '' });\r\n\r\n\tconst [totalPageSize, setTotalPageSize] = useState(1);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst pageLimit = 16;\r\n\tconst [search, setSearch] = useState('');\r\n\tconst statusList = [\r\n\t\t{\r\n\t\t\t_id: 1,\r\n\t\t\tname: 'Pending',\r\n\t\t\tvalue: 'Pending'\r\n\t\t},\r\n\t\t{\r\n\t\t\t_id: 2,\r\n\t\t\tname: 'Completed',\r\n\t\t\tvalue: 'Completed'\r\n\t\t}\r\n\t];\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetUserInfo &&\r\n\t\t\t\tgetUserInfo.userInfo &&\r\n\t\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\t\t(getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'superadmin')\r\n\t\t\t) {\r\n\t\t\t\tdispatch(getProductOrderHistoryAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: '' }));\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_PRODUCT_ORDER_RESET });\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getUserInfo, dispatch, history, pageNumber]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\torderList &&\r\n\t\t\t\torderList.categories &&\r\n\t\t\t\torderList.categories.status &&\r\n\t\t\t\torderList.categories.data.result.length > 0\r\n\t\t\t) {\r\n\t\t\t\tsetTotalPageSize(orderList.categories.data.totalPageSize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[orderList]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeOrderStatus && changeOrderStatus.categories && changeOrderStatus.categories.status) {\r\n\t\t\t\ttoast.success(changeOrderStatus.categories.message);\r\n\t\t\t\tdispatch({ type: CHANGE_ORDER_STATUS_RESET });\r\n\t\t\t} else if (changeOrderStatus && changeOrderStatus.categories && !changeOrderStatus.categories.status) {\r\n\t\t\t\ttoast.error(changeOrderStatus.categories.message);\r\n\t\t\t\tdispatch({ type: CHANGE_ORDER_STATUS_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeOrderStatus, dispatch]\r\n\t);\r\n\r\n\tconst handlePageChange = async (currentPage) => {\r\n\t\tconst selectedPage = currentPage.selected;\r\n\t\tdispatch(getProductOrderHistoryAction({ pageNumber: selectedPage + 1, pageSize: pageLimit, filter: '' }));\r\n\t\tsetPageNumber(selectedPage + 1);\r\n\t};\r\n\r\n\tconst onSearchHandler = (event) => {\r\n\t\tsetSearch(event.target.value);\r\n\t\tif (search.trim !== '' && search.length > 0) {\r\n\t\t\tsetPageNumber(1);\r\n\t\t}\r\n\t\tdispatch(getProductOrderHistoryAction({ pageNumber: pageNumber, pageSize: pageLimit, filter: event.target.value }));\r\n\t};\r\n\r\n\tconst onSummaryModalClose = () => {\r\n\t\tsetModalSummaryState(false);\r\n\t};\r\n\r\n\tconst onChangeHandler = (res, status) => {\r\n\t\tdispatch(changeOrderStatusAction(res._id, status));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Content\r\n\t\t\tcurrentMenu='products'\r\n\t\t\theaderTitle='Orders'\r\n\t\t\taddBtn={false}\r\n\t\t\taddBtnText='Add New Order'\r\n\t\t\taddBtnIcon='plus'\r\n\t\t\taddBtnClick={() => { }}\r\n\t\t\tsearch={true}\r\n\t\t\tsearchPlaceholder='Search Orders...'\r\n\t\t\tsearchIcon='search'\r\n\t\t\tsearchvalue={search}\r\n\t\t\tsearchOnChange={onSearchHandler}>\r\n\t\t\t{orderList.loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : orderList &&\r\n\t\t\t\torderList.categories &&\r\n\t\t\t\torderList.categories.status &&\r\n\t\t\t\torderList.categories.data.result &&\r\n\t\t\t\torderList.categories.data.result.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<OrderData\r\n\t\t\t\t\t\tdata={orderList.categories.data.result}\r\n\t\t\t\t\t\tshowFilter={showFilter}\r\n\t\t\t\t\t\tstatusList={statusList}\r\n\t\t\t\t\t\tsetProductSummaryList={setProductSummaryList}\r\n\t\t\t\t\t\tsetModalSummaryState={setModalSummaryState}\r\n\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\tsetStatus={setStatus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{totalPageSize > 1 && (\r\n\t\t\t\t\t\t<div className='tableContainer--paginater'>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tlist={orderList.categories}\r\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\trowsPerPage={pageLimit}\r\n\t\t\t\t\t\t\t\ttotalPageSize={totalPageSize}\r\n\t\t\t\t\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<NoData\r\n\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\tsubTitle='We could not find any order data.'\r\n\t\t\t\t\theight='40vh'\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<ProductSummary data={{ modalSummaryState, onSummaryModalClose, productSummaryList }} />\r\n\t\t</Content>\r\n\t);\r\n};\r\n\r\nexport default OrderHistoryScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\index.js",["2110","2111","2112","2113","2114","2115"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\Modals\\DeleteCouponModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Coupon\\Modals\\AddCoupon.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LoginContent\\LoginContent.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Content.js",["2116"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\nimport LogOut from './LogoutModal';\r\nimport { logout } from '../redux/actions/userActions';\r\nimport AppointmentList from './AppointmentList';\r\nimport { getActivityListAction } from '../redux/actions/appointmentAction';\r\nimport moment from \"moment\";\r\nimport ActivitySkeleton from './Skeletons/Activityskeleton';\r\nimport { getRecentAppointmentReportAction, getUpcomingAppointmentReportAction } from '../redux/actions/reportActions';\r\nimport AppointmentSection from '../screens/DashboardScreen/AppointmentSection';\r\n\r\n\r\nconst Content = ({\r\n\tchildren,\r\n\theaderTitle,\r\n\tcurrentMenu,\r\n\taddBtn,\r\n\taddBtnText,\r\n\taddBtnIcon,\r\n\taddBtnClick,\r\n\tsearch,\r\n\tsearchIcon,\r\n\tsearchPlaceholder,\r\n\tsearchvalue,\r\n\tsearchOnChange,\r\n\tshowAppointment = false,\r\n\tstylistId,\r\n\taddAppointment,\r\n\tupdateAppointment,\r\n\tdeleteAppointment,\r\n\thandleAppointmentModal,\r\n\thandleAppointmentModalClose,\r\n\tappointmentModal,\r\n\thandleSubscriptionModal,\r\n\thandleSubscriptionModalClose,\r\n\tsubscriptionModal,\r\n\tlistFilter,\r\n\tlistType,\r\n\tgetTypeList,\r\n\tonTypeListChange,\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [sideBar, setSideBar] = useState(true);\r\n\tconst [modalLogOutState, setModalLogOutState] = useState(false);\r\n\tconst [activeToggle, setActiveToggle] = useState(true)\r\n\r\n\tconst toggleMenu = () => {\r\n\t\tlet navigation = document.querySelector('.navigation');\r\n\t\tlet mainContent = document.querySelector('.mainContent');\r\n\t\tlet sidebarnav__button = document.querySelector('.sidebarnav__button');\r\n\t\tnavigation.classList.toggle('active');\r\n\t\tmainContent.classList.toggle('mainContent__active');\r\n\t\tsidebarnav__button.classList.toggle('sidebarnav__button_active');\r\n\t\tsetSideBar(!sideBar);\r\n\t};\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst getActivity = useSelector((state) => state.getActivity);\r\n\tconst getUserInfo = useSelector((state) => state.getUserInfo);\r\n\tconst getRecentAppointment = useSelector((state) => state.getRecentAppointment);\r\n\tconst getUpcomingAppointment = useSelector((state) => state.getUpcomingAppointment);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer = '';\r\n\t\tlet split = history.location.pathname.split('/');\r\n\t\tif (getUserInfo &&\r\n\t\t\tgetUserInfo.userInfo &&\r\n\t\t\tgetUserInfo.userInfo.data &&\r\n\t\t\tsplit[1] === 'stylist-sessions' &&\r\n\t\t\t(getUserInfo.userInfo.data.role === 'salon' || getUserInfo.userInfo.data.role === 'stylist')) {\r\n\r\n\t\t\tlet timer = setInterval(() => {\r\n\t\t\t\tdispatch(getActivityListAction({\r\n\t\t\t\t\tstylistId: stylistId,\r\n\t\t\t\t\tfromDate: moment().toISOString()\r\n\t\t\t\t}))\r\n\t\t\t\tdispatch(getUpcomingAppointmentReportAction())\r\n\t\t\t\tdispatch(getRecentAppointmentReportAction())\r\n\t\t\t}, 25000);\r\n\r\n\t\t\treturn () => clearTimeout(timer);\r\n\t\t} else {\r\n\t\t\tclearTimeout(timer);\r\n\t\t\tclearInterval(timer)\r\n\t\t}\r\n\t}, [stylistId, dispatch, history, getUserInfo])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getActivityListAction({\r\n\t\t\tstylistId: stylistId,\r\n\t\t\tfromDate: moment().toISOString()\r\n\t\t}))\r\n\t\tdispatch(getUpcomingAppointmentReportAction())\r\n\t\tdispatch(getRecentAppointmentReportAction())\r\n\t}, [addAppointment,\r\n\t\tupdateAppointment,\r\n\t\tdeleteAppointment,\r\n\t\tstylistId,\r\n\t\tdispatch,])\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userLogin && !userLogin.userInfo) {\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userLogin, history]\r\n\t);\r\n\r\n\tconst onLogOutModalClose = () => {\r\n\t\tsetModalLogOutState(false);\r\n\t};\r\n\r\n\tconst onLogOutHandler = () => {\r\n\t\tsetModalLogOutState(false);\r\n\t\tdispatch(logout());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='container'>\r\n\t\t\t<Sidebar current={currentMenu} setModalLogOutState={setModalLogOutState} />\r\n\t\t\t<div className='mainContent'>\r\n\t\t\t\t<div className='content_box1'>\r\n\t\t\t\t\t<button className='sidebarnav__button' onClick={toggleMenu}>\r\n\t\t\t\t\t\t<svg className='sidebarnav__icon'>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${sideBar ? 'chevron-left' : 'chevron-right'}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{headerTitle && (\r\n\t\t\t\t\t\t<Header\r\n\t\t\t\t\t\t\ttitle={headerTitle}\r\n\t\t\t\t\t\t\taddBtn={addBtn}\r\n\t\t\t\t\t\t\taddBtnText={addBtnText}\r\n\t\t\t\t\t\t\taddBtnIcon={addBtnIcon}\r\n\t\t\t\t\t\t\taddBtnClick={addBtnClick}\r\n\t\t\t\t\t\t\tsearch={search}\r\n\t\t\t\t\t\t\tsearchIcon={searchIcon}\r\n\t\t\t\t\t\t\tsearchPlaceholder={searchPlaceholder}\r\n\t\t\t\t\t\t\tsearchvalue={searchvalue}\r\n\t\t\t\t\t\t\tsearchOnChange={searchOnChange}\r\n\r\n\t\t\t\t\t\t\tlistFilter={listFilter}\r\n\t\t\t\t\t\t\tlistType={listType}\r\n\t\t\t\t\t\t\tgetTypeList={getTypeList}\r\n\t\t\t\t\t\t\tonTypeListChange={onTypeListChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='content' >\r\n\t\t\t\t\t\t<div className='content_box' >\r\n\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{showAppointment && <div className='appointment_main'>\r\n\t\t\t\t\t\t\t{currentMenu !== 'dashboard' && <button className={activeToggle ? 'appointment__button' : 'appointment__button1'} onClick={() => setActiveToggle(!activeToggle)}>\r\n\t\t\t\t\t\t\t\t<svg className='sidebarnav__icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${activeToggle ? 'chevron-right' : 'chevron-left'}`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>}\r\n\t\t\t\t\t\t\t<div className={activeToggle ? 'appointment_box' : 'appointment_box1'}>\r\n\t\t\t\t\t\t\t\t{currentMenu === 'dashboard' ?\r\n\t\t\t\t\t\t\t\t\t<AppointmentSection\r\n\t\t\t\t\t\t\t\t\t\tgetUpcomingAppointment={getUpcomingAppointment}\r\n\t\t\t\t\t\t\t\t\t\tgetRecentAppointment={getRecentAppointment}\r\n\t\t\t\t\t\t\t\t\t\tactiveToggle={activeToggle}\r\n\t\t\t\t\t\t\t\t\t\tgetActivity={getActivity}\r\n\t\t\t\t\t\t\t\t\t\thandleAppointmentModal={handleAppointmentModal}\r\n\t\t\t\t\t\t\t\t\t\thandleSubscriptionModal={handleSubscriptionModal}\r\n\t\t\t\t\t\t\t\t\t/> :\r\n\t\t\t\t\t\t\t\t\t<AppointmentList activeToggle={activeToggle} getActivity={getActivity} />}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t\t\t<LogOut data={{ modalLogOutState, onLogOutModalClose, onLogOutHandler }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Content;\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\couponActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\WaitlistTable.js",["2117"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Spinner\\Spinner.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Readmore\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\NoData\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SessionTimeoutModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\reportActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductCategoriesScreen\\NewProductsCategoriesScreen.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\CustomHomeScreen\\RoundCards.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\AddAppVersion.js",["2118"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Modal from '../../components/NewModal';\r\nimport ModalHeading from '../../components/NewModal/ModalHeading';\r\nimport ModalForm from '../../components/NewModal/ModalForm';\r\nimport InputsSection from '../../components/NewModal/InputsSection';\r\nimport InputBox from '../../components/NewInputBox';\r\nimport ModalButton from '../../components/NewModal/ModalButton';\r\nimport TextareaBox from '../../components/NewTextareaBox';\r\nimport Styles from './Appversion.module.css'\r\n\r\nconst AddAppVersion = ({ data }) => {\r\n\tconst {\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\r\n\t\tversionTitleAndroid,\r\n\t\tsetVersionTitleAndroid,\r\n\t\tversionTitleAndroidError,\r\n\t\tsetVersionTitleAndroidError,\r\n\t\tversionTitleIOS,\r\n\t\tsetVersionTitleIOS,\r\n\t\tversionTitleIOSError,\r\n\t\tsetVersionTitleIOSError,\r\n\t\tappDescription,\r\n\t\tsetVersionDescription,\r\n\t\tversionDescriptionError,\r\n\t\tsetVersionDescriptionError,\r\n\t\tisCompulsory,\r\n\t\tsetIsCompulsory,\r\n\t\tisCompulsoryError,\r\n\t\tsetIsCompulsoryError,\r\n\r\n\t\tandroidStoreURL,\r\n\t\tsetAndroidStoreURL,\r\n\t\tiosStoreURL,\r\n\t\tsetIOSStoreURL,\r\n\t\tandroidStoreURLError,\r\n\t\tsetAndroidStoreURLError,\r\n\t\tiosStoreURLError,\r\n\t\tsetIOSStoreURLError\r\n\t} = data;\r\n\tconst createAppVersion = useSelector((state) => state.createAppVersion);\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive}>\r\n\t\t\t<ModalHeading heading='Add New Version' onClose={handleAddModalClose} />\r\n\r\n\t\t\t<ModalForm className={Styles.form} onSubmit={handleSubmit}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='Android Version'\r\n\t\t\t\t\t\ticon='android'\r\n\t\t\t\t\t\tplaceholder='eg, 0.0.1'\r\n\t\t\t\t\t\tvalue={versionTitleAndroid}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionTitleAndroid(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionTitleAndroidError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionTitleAndroidError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='iOS Version'\r\n\t\t\t\t\t\ticon='apple'\r\n\t\t\t\t\t\tplaceholder='eg, 0.0.1'\r\n\t\t\t\t\t\tvalue={versionTitleIOS}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionTitleIOS(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionTitleIOSError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionTitleIOSError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='Android Store URL'\r\n\t\t\t\t\t\ticon='android'\r\n\t\t\t\t\t\tplaceholder='eg, https://play.google.com/'\r\n\t\t\t\t\t\tvalue={androidStoreURL}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetAndroidStoreURL(event.target.value);\r\n\t\t\t\t\t\t\tsetAndroidStoreURLError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={androidStoreURLError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='iOS Store URL'\r\n\t\t\t\t\t\ticon='apple'\r\n\t\t\t\t\t\tplaceholder='eg, https://apps.apple.com/'\r\n\t\t\t\t\t\tvalue={iosStoreURL}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetIOSStoreURL(event.target.value);\r\n\t\t\t\t\t\t\tsetIOSStoreURLError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={iosStoreURLError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\tclassName={Styles.textArea}\r\n\t\t\t\t\t\tlabel='App Description'\r\n\t\t\t\t\t\ticon='info'\r\n\t\t\t\t\t\tplaceholder='Enter App Description'\r\n\t\t\t\t\t\tvalue={appDescription}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionDescription(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionDescriptionError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionDescriptionError}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', gap: '2rem' }}>\r\n\t\t\t\t\t\t<label className='switch' >\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='isPOS'\r\n\t\t\t\t\t\t\t\tchecked={isCompulsory}\r\n\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsory(!isCompulsory);\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsoryError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label htmlFor='active' className='inputBox__toggle--label' style={{ color: '#ffffff' }}>\r\n\t\t\t\t\t\t\tCompulsory\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t{createAppVersion && createAppVersion.loading ? (\r\n\t\t\t\t\t<ModalButton label={'Please wait'} icon={'plus'} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ModalButton label='Add New Version' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t)}\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddAppVersion;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\appVersionActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewAppVersionScreen\\DeleteAppVersion.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\CancelSubscription.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\subscriptionAction.js",["2119"],"import axios from 'axios';\r\nimport { CREATE_NEW_SUBSCRIPTION_FAIL, CREATE_NEW_SUBSCRIPTION_REQUEST, CREATE_NEW_SUBSCRIPTION_SUCCESS, DELETE_SUBSCRIPTION_FAIL, DELETE_SUBSCRIPTION_REQUEST, DELETE_SUBSCRIPTION_SUCCESS, GET_ALL_SUBSCRIPTION_FAIL, GET_ALL_SUBSCRIPTION_REQUEST, GET_ALL_SUBSCRIPTION_SUCCESS, GET_CANCEL_SUBSCRIPTION_FAIL, GET_CANCEL_SUBSCRIPTION_REQUEST, GET_CANCEL_SUBSCRIPTION_SUCCESS, GET_ENABLE_SUBSCRIPTION_FAIL, GET_ENABLE_SUBSCRIPTION_REQUEST, GET_ENABLE_SUBSCRIPTION_SUCCESS, GET_SUBSCRIPTION_DETAILS_FAIL, GET_SUBSCRIPTION_DETAILS_REQUEST, GET_SUBSCRIPTION_DETAILS_SUCCESS, GET_TOTAL_PRICE_FAIL, GET_TOTAL_PRICE_REQUEST, GET_TOTAL_PRICE_SUCCESS, SUBSCRIPTION_STATUS_FAIL, SUBSCRIPTION_STATUS_REQUEST, SUBSCRIPTION_STATUS_SUCCESS } from '../constants/SubscriptionConstants';\r\nimport { BASE_URL } from './ip';\r\nconst utcTimeOffset = new Date().getTimezoneOffset();\r\n\r\nexport const addSubscriptionAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_NEW_SUBSCRIPTION_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/plan/add-subscription-plan`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SUBSCRIPTION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SUBSCRIPTION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getSubscriptionAction = (interval = '') => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_SUBSCRIPTION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t`${BASE_URL}/plan/get-subscription-plans?interval=${interval}`,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SUBSCRIPTION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SUBSCRIPTION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const changeStatusSubscriptionAction = (id, formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: SUBSCRIPTION_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(\r\n\t\t\t`${BASE_URL}/plan/enable-disable-subscription-plan?productId=${id}`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SUBSCRIPTION_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SUBSCRIPTION_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteSubscriptionAction = (productId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SUBSCRIPTION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(\r\n\t\t\t`${BASE_URL}/plan/delete-subscription-plan?productId=${productId}`,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SUBSCRIPTION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SUBSCRIPTION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getEnableSubscriptionAction = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ENABLE_SUBSCRIPTION_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/plan/get-packages`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ENABLE_SUBSCRIPTION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ENABLE_SUBSCRIPTION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getTotalPriceAction = (priceId, coupon) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_TOTAL_PRICE_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// const { data } = await axios.get(${BASE_URL}/plan/total-price/${priceId}, config);\r\n\t\tconst url = coupon \r\n\t\t? `${BASE_URL}/plan/total-price/${priceId}/${coupon}` \r\n\t\t: `${BASE_URL}/plan/total-price/${priceId}`;\r\n  \r\n\t  const { data } = await axios.get(url, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_TOTAL_PRICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_TOTAL_PRICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const createPlanAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/plan/plans/`, formData, config);\r\n\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\treturn err.response && err.response.data.message ? err.response.data.message : err.message;\r\n\t}\r\n};\r\n\r\nexport const updatePlanAction = (active, id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/plan/plans/${id}`, { active: active }, config);\r\n\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\treturn err.response && err.response.data.message ? err.response.data.message : err.message;\r\n\t}\r\n};\r\n\r\nexport const deletePlanAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/plan/plans/${id}`, config);\r\n\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\treturn err.response && err.response.data.message ? err.response.data.message : err.message;\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const cancelSubscriptionAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_CANCEL_SUBSCRIPTION_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/plan/cancel-subscription?id=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_CANCEL_SUBSCRIPTION_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_CANCEL_SUBSCRIPTION_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getSubscriptionDetailsAction = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_SUBSCRIPTION_DETAILS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/plan/get-subscription-detail`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SUBSCRIPTION_DETAILS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SUBSCRIPTION_DETAILS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\MenuSettingUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\ChangePwdUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\SalonData.js",["2120"],"import React from 'react';\r\nimport { inputPhoneMasking, unMasking } from '../../utils/validators';\r\nimport Styles from './Salon.module.css'\r\n\r\nconst SalonData = ({\r\n\tshowFilter,\r\n\tdata,\r\n\tsetModalDeleteState,\r\n\tsetShowAddModal,\r\n\tsetSelectUpdateModel,\r\n\tsetModalChangePasswordState,\r\n\tonChangeHandler,\r\n\thandleEditModalSalon,\r\n\tsetModalSettingState,\r\n\tsetAppMenu,\r\n\tsetModalCancelSubscription\r\n}) => {\r\n\r\n\treturn (\r\n\t\t<div className={Styles.tableContainer} style={{ height: showFilter ? '63vh' : '65vh' }}>\r\n\t\t\t<table className={Styles.table}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t<th>Active</th>\r\n\t\t\t\t\t\t<th style={{ width: '1rem' }}>Cancel Subscription</th>\r\n\t\t\t\t\t\t<th />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{data &&\r\n\t\t\t\t\t\tdata.map((d, index) => (\r\n\t\t\t\t\t\t\t<tr key={d._id}>\r\n\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t<td style={{ textAlign: 'left' }}>{d.name}</td>\r\n\t\t\t\t\t\t\t\t<td>{d.email}</td>\r\n\t\t\t\t\t\t\t\t<td>{inputPhoneMasking(d.phone)}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tid={d._id}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={d.active}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler(d)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style={{ display: 'flex', justifyContent: 'center', cursor: 'pointer' }} >\r\n\t\t\t\t\t\t\t\t\t<div onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetModalCancelSubscription(true);\r\n\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{d.cancel_at_period_end ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='table__status'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>•</span> Active\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='table__status_deactive'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>•</span> Deactive\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowAddModal(true)\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t\thandleEditModalSalon(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Edit User Details</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--setting' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (d.appMenu) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAppMenu({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isVideo\": d.appMenu && d.appMenu.isVideo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isCheckin\": d.appMenu && d.appMenu.isCheckin,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isPOS\": d.appMenu && d.appMenu.isPOS,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAppMenu({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isVideo\": false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isCheckin\": false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isPOS\": false\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalSettingState(true);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-setting'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-setting`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>App Setting</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--changepwd' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalChangePasswordState(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-green'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-key`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Reset Password</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--delete' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Delete User</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t{/* <button className='table__button table__button--delete' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalCancelSubscription(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Cancel Subscription</span>\r\n\t\t\t\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div >\r\n\t);\r\n};\r\n\r\nexport default SalonData;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\DeleteSalon.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSalonScreen\\CreateEditSalon.js",["2121"],"import React from \"react\";\r\nimport Modal from \"../../components/NewModal\";\r\nimport ModalHeading from \"../../components/NewModal/ModalHeading\";\r\nimport ModalForm from \"../../components/NewModal/ModalForm\";\r\nimport InputsSection from \"../../components/NewModal/InputsSection\";\r\nimport InputsSectionColumn from \"../../components/NewModal/InputsSectionColumn\";\r\nimport InputBox from \"../../components/NewInputBox\";\r\nimport ModalButton from \"../../components/NewModal/ModalButton\";\r\nimport FileUpload from \"../../components/NewFileUpload\";\r\nimport TextareaBox from \"../../components/NewTextareaBox\";\r\nimport { inputPhoneMasking } from \"../../utils/validators\";\r\nimport Styles from \"./Salon.module.css\";\r\n\r\nconst CreateEditSalon = ({ data }) => {\r\n  const {\r\n    showAddModal,\r\n    handleAddModalClose,\r\n    handleSubmit,\r\n    selectUpdateModel,\r\n\r\n    name,\r\n    email,\r\n    address,\r\n    phone,\r\n\r\n    setName,\r\n    setEmail,\r\n    setPhone,\r\n    setAddress,\r\n\r\n    nameError,\r\n    addressError,\r\n    phoneError,\r\n    emailError,\r\n\r\n    setNameError,\r\n    setAddressError,\r\n    setPhoneError,\r\n    setEmailError,\r\n\r\n    password,\r\n    setPassword,\r\n    passwordError,\r\n    setPasswordError,\r\n\r\n    imageSrc,\r\n    setImageSrc,\r\n\r\n    setUploadFileData,\r\n    uploadFileDataError,\r\n    setUploadFileDataError,\r\n  } = data;\r\n\r\n  const handleChangeImage = (e) => {\r\n    var file = e.target.files[0];\r\n    var reader = new FileReader();\r\n    if (e.target.files[0]) {\r\n      var url = reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n        setImageSrc(reader.result);\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={showAddModal}>\r\n      <ModalHeading\r\n        heading={selectUpdateModel._id ? \"Update Salon\" : \"Add New Salon\"}\r\n        onClose={handleAddModalClose}\r\n      />\r\n      <ModalForm onSubmit={handleSubmit}>\r\n        <InputsSection>\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Salon Name\"\r\n            icon=\"salon\"\r\n            placeholder=\"eg, BookB Salon\"\r\n            value={name}\r\n            onChange={(event) => {\r\n              setName(event.target.value);\r\n              setNameError(\"\");\r\n            }}\r\n            errorMessage={nameError}\r\n          />\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Email\"\r\n            icon=\"email\"\r\n            placeholder=\"eg, johndoe@example.com\"\r\n            value={email}\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n              setEmailError(\"\");\r\n            }}\r\n            errorMessage={emailError}\r\n          />\r\n          <InputBox\r\n            className={Styles.input}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n            label=\"Phone\"\r\n            icon=\"phone\"\r\n            placeholder=\"eg, 123 456 7890\"\r\n            value={phone}\r\n            onChange={(event) => {\r\n              setPhone(inputPhoneMasking(event.target.value));\r\n              setPhoneError(\"\");\r\n            }}\r\n            errorMessage={phoneError}\r\n          />\r\n        </InputsSection>\r\n        <InputsSectionColumn>\r\n          <div className=\"flex\" style={{ gap: \"2rem\" }}>\r\n            <TextareaBox\r\n              className={Styles.textArea}\r\n              style={{ padding: \"1.5rem 0rem 0rem 0rem\", paddingLeft: \"1rem\" }}\r\n              label=\"Address\"\r\n              icon=\"pin\"\r\n              placeholder=\"eg, Devar, USA\"\r\n              value={address}\r\n              onChange={(event) => {\r\n                setAddress(event.target.value);\r\n                setAddressError(\"\");\r\n              }}\r\n              errorMessage={addressError}\r\n            />\r\n\r\n            {!selectUpdateModel._id && (\r\n              <InputBox\r\n                className={Styles.input}\r\n                label=\"Password\"\r\n                icon=\"key\"\r\n                placeholder=\"**********\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                  setPasswordError(\"\");\r\n                }}\r\n                errorMessage={passwordError}\r\n              />\r\n            )}\r\n          </div>\r\n        </InputsSectionColumn>\r\n        <FileUpload\r\n          className={Styles.fileUpload}\r\n          label=\"Upload Salon Logo\"\r\n          icon=\"upload\"\r\n          image={imageSrc}\r\n          onChange={(e) => {\r\n            handleChangeImage(e);\r\n            setUploadFileData(e.target.files);\r\n            setUploadFileDataError(\"\");\r\n          }}\r\n          errorMessage={uploadFileDataError}\r\n        />\r\n        <ModalButton\r\n          label={selectUpdateModel._id ? \"Update Salon\" : \"Add New\"}\r\n          icon={selectUpdateModel._id ? \"edit\" : \"plus\"}\r\n          onClick={handleSubmit}\r\n        />\r\n      </ModalForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateEditSalon;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Headers\\Header.js",["2122","2123"],"import React, { useEffect, useState } from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport './Header.css';\r\nimport Button from '../../../components/formInputs/Button';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CartSidebar from '../CartSidebar/CartSidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../redux/actions/userActions';\r\n\r\nconst WebHeader = ({style}) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst cartProducts = useSelector((state) => state.cartProducts.cart);\r\n\tconst getPublicWebsite = useSelector((state) => state.getPublicWebsite);\r\n\tconst [color, setColor] = useState(\"\")\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.status) {\r\n\t\t\tsetColor(getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.bgColor)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst [click, setClick] = useState(false);\r\n\r\n\tconst [cartItem, setCartItem] = useState(0)\r\n\tconst handleClick = () => setClick(!click);\r\n\tconst closeMobileMenu = () => setClick(false);\r\n\r\n\tconst toggleMenu_website = () => {\r\n\t\thistory.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/login`);\r\n\t};\r\n\r\n\tconst toggle_viewCart = () => {\r\n\t\tlet navigation = document.querySelector('.navigationbar');\r\n\t\tnavigation.classList.toggle('active');\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet count = 0;\r\n\t\tcartProducts && cartProducts.forEach((item) => {\r\n\t\t\tcount += item.quantity\r\n\t\t})\r\n\t\tsetCartItem(count)\r\n\t}, [cartProducts, cartItem])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className=\"website_header\">\r\n\t\t\t\t<img src={getPublicWebsite &&\r\n\t\t\t\t\tgetPublicWebsite.websiteInfo &&\r\n\t\t\t\t\tgetPublicWebsite.websiteInfo.data &&\r\n\t\t\t\t\tgetPublicWebsite.websiteInfo.data.websiteLogoImageURL}\r\n\t\t\t\t\talt=\"Logo\" className=\"logo_website\" />\r\n\r\n\t\t\t\t<nav className=\"navigation_website\">\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t<ul className={click ? ' navigation__links nav-options active' : 'navigation__links nav-options'}>\r\n\t\t\t\t\t\t\t<li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink to={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}#banner`} activeClassName=\"navigation__active\" className=\"navigation__link\">\r\n\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}/products-list`}\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tShop\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}#services_our`}\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tServices\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{/* <li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/discounts`}\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDiscounts\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t<li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}#hoursOfOperation`}\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tHours of Operation\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onClick={closeMobileMenu}>\r\n\t\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon._id}#contactus`}\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t{/* <li className=\"mobile-menu\">\r\n\t\t\t\t\t\t\t<div className=\"navigation__link header-right-side\">\r\n\t\t\t\t\t\t\t\t<li >\r\n\t\t\t\t\t\t\t\t\t<div className=\"navigation__link header-right-side\" onClick={toggle_viewCart}>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-cart\" />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{color: 'var(--gold)'}}>{cartItem}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t<li className=\"mobile-menu\">\r\n\t\t\t\t\t\t\t\t<div className=\"navigation__link header-right-side\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '10rem',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '0.5rem 1rem',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: color,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Login\"\r\n\t\t\t\t\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={toggleMenu_website}\r\n\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className=\"navigation__links navigation__links--contact\">\r\n\t\t\t\t\t\t<li >\r\n\t\t\t\t\t\t\t<div className=\"navigation__link header-right-side\" onClick={toggle_viewCart}>\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\">\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-cart\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<div style={{ color: 'var(--gold)' }}>{cartItem}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{userLogin && userLogin.userInfo && <li >\r\n\t\t\t\t\t\t\t<HashLink\r\n\t\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\t\tto={`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/order-history`}\r\n\t\t\t\t\t\t\t\tactiveClassName=\"navigation__active\"\r\n\t\t\t\t\t\t\t\tclassName=\"navigation__link\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOrder History\r\n\t\t\t\t\t\t\t</HashLink>\r\n\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div className=\"navigation__link header-right-side\">\r\n\t\t\t\t\t\t\t\t{userLogin && !userLogin.userInfo ?\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '10rem',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '0.5rem 1rem',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: color,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Login\"\r\n\t\t\t\t\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={toggleMenu_website}\r\n\t\t\t\t\t\t\t\t\t/> :\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvarient='danger'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '10rem',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '0.5rem 1rem',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:color\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Logout\"\r\n\t\t\t\t\t\t\t\t\t\ticon=\"arrow_right\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(logout())\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className=\"mobile-menu\" >\r\n\t\t\t\t\t\t<div className=\"icon-box\" onClick={toggle_viewCart}>\r\n\t\t\t\t\t\t\t<svg className=\"menu-icon2\">\r\n\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#icon-cart\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t<div style={{ color: 'var(--gold)', fontSize: '15px' }}>{cartItem}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div onClick={handleClick}>\r\n\t\t\t\t\t\t\t{click ? (\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\">\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#CloseMenu\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<svg className=\"header-icon-in menu-icon\">\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref=\"assets/sprite.svg#MenuIcon\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</nav>\r\n\t\t\t\t<CartSidebar data={{ toggle_viewCart, cartProducts }} />\r\n\r\n\t\t\t</header>\r\n\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WebHeader;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\DeleteModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\utils\\validators.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\Button\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\index.js",["2124","2125","2126","2127"],"import moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport TextBox from './TextBox.module.css';\r\n\r\nconst InputBox = ({ type, placeholder, value, onChange, errorMessage, label, name, icon, style, disabled, defaultValue, min, required = false }) => {\r\n\tconst [inputType, setInputType] = useState(type);\r\n\r\n\tconst handlePasswordView = () => {\r\n\t\tif (type === 'password') {\r\n\t\t\tif (inputType === 'text') setInputType('password');\r\n\t\t\telse setInputType('text');\r\n\t\t}\r\n\t};\r\n\r\n\tconst disableDate = () => {\r\n\t\tvar today, dd, mm, yyyy;\r\n\t\ttoday = new Date();\r\n\t\tdd = today.getDate() + 1;\r\n\t\tmm = today.getMonth() + 1;\r\n\t\tyyyy = today.getFullYear();\r\n\t\treturn yyyy + \"-\" + \"mm\" + \"-\" + dd\r\n\t}\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className={TextBox.form_input__label}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className={TextBox.form_input__container} style={style}>\r\n\t\t\t\t{icon && (<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t</svg>)\r\n\t\t\t\t}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={'inputType'}\r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmin={type === 'date' && (moment().format('YYYY-MM-DD') || type === 'time') && min}\r\n\t\t\t\t\tdisabled={disabled ? disabled : false}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tclassName={TextBox.form_input__box1}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t/>\r\n\t\t\t\t{type === 'password' && (\r\n\t\t\t\t\t<svg className={TextBox.form_input__icon} onClick={handlePasswordView}>\r\n\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${inputType === 'text' ? 'visibility_off' : 'visibility'}`} />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\RewardModal\\RewardModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\MyProfileSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\PasswordChangeComponent\\PasswordChangeComponent.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\TimeDurationComponent\\TimeDurationComponent.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalHeading.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalForm.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\ModalButton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\addStockProduct.js",["2128","2129","2130","2131","2132","2133","2134"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\ProductDetailModal.js",["2135"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\CreateEditProduct.js",["2136","2137","2138"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewProductScreeen\\DeleteProduct.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\MyProfileInputComponent\\MyProfileInputComponent.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\ProductSummary.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\UserIconComponent\\UserIconComponent.js",["2139","2140","2141","2142"],"import React, { useState, useEffect } from 'react';\r\nimport Styles from './UserIconComponent.module.css';\r\nimport ImageUploadComponent from '../ImageUploadComponent/ImageUploadComponent';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserIconComponent = ({ imageSrc, setImageSrc, previewURL, setPreviewURL }) => {\r\n  const [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const myProfileDetails = useSelector((state) => state.myProfileDetails);\r\n\r\n  const handleChangeImage = (e) => {\r\n    var file = e.target.files[0];\r\n    setImageSrc(file)\r\n    var reader = new FileReader();\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n        setPreviewURL(reader.result);\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.edit_profile}>\r\n      <div className={Styles.icon_my_profile}>\r\n        <ImageUploadComponent\r\n          label=\"Upload Image\"\r\n          icon=\"upload\"\r\n          image={previewURL}\r\n          onChange={(e) => {\r\n            handleChangeImage(e);\r\n            setUploadFileData((prevData) => ({ ...prevData, data: e.target.files, error: '' }));\r\n          }}\r\n          errorMessage={uploadFileData.error}\r\n          style={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserIconComponent;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseButton\\BaseButton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewOrderHistoryScreen\\OrderData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Pagination\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\AppointmentSection.js",["2143","2144","2145"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\Activityskeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\appointmentAction.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\AppointmentList.js",["2146","2147","2148"],"import React from 'react'\r\nimport ActivitySkeleton from './Skeletons/Activityskeleton';\r\nimport ActivitySkeletonSmall from './Skeletons/ActivitySkeletonSmall';\r\n\r\nconst AppointmentList = ({ getActivity, activeToggle, currentMenu, getRecentAppointment }) => {\r\n\r\n\r\n\r\n\r\n\tconst sortedList = getActivity && getActivity.session && getActivity.session.result && getActivity.session.result.appointments && getActivity.session.result.appointments.length > 0\r\n\t\t&& getActivity.session.result.appointments.sort(function (a, b) {\r\n\t\t\tvar key1 = a.slotString;\r\n\t\t\tvar key2 = b.slotString;\r\n\r\n\t\t\tif (key1 < key2) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (key1 == key2) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{activeToggle ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t{getActivity.loading ? <ActivitySkeleton /> :\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className='stylist_box'>\r\n\t\t\t\t\t\t\t\t<img src={getActivity &&\r\n\t\t\t\t\t\t\t\t\tgetActivity.session &&\r\n\t\t\t\t\t\t\t\t\tgetActivity.session.result &&\r\n\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData &&\r\n\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData.photo\r\n\t\t\t\t\t\t\t\t} className='stylist_img'></img>\r\n\t\t\t\t\t\t\t\t<div className='stylist_text'>\r\n\t\t\t\t\t\t\t\t\t<span>{getActivity &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData.name}</span>\r\n\t\t\t\t\t\t\t\t\t<p>Description</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='current_appointment'>\r\n\t\t\t\t\t\t\t\t<h2 className='appointment_upcoming'>Upcoming Appointments</h2>\r\n\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsortedList ? sortedList.map((item, id) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_card' key={id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_time'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='time_circle'></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{item.slot}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_name'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1>{item.appointmentDetail.userName}</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{item && item.userList && item.userList[0] && item.userList[0].userDetail && item.userList[0].userDetail.clientNote ? item.userList[0].userDetail.clientNote : \"No Notes\"}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}) :\r\n\t\t\t\t\t\t\t\t\t\t<div className='appointment_card'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>No Appointment Available</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>}\r\n\t\t\t\t</>\r\n\t\t\t\t:\r\n\t\t\t\t<>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgetActivity.loading ? <ActivitySkeletonSmall /> :\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className='stylist_box1'>\r\n\t\t\t\t\t\t\t\t\t<img src={getActivity &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData &&\r\n\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData.photo\r\n\t\t\t\t\t\t\t\t\t} className='stylist_img'></img>\r\n\t\t\t\t\t\t\t\t\t<div className='stylist_text1'>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ textAlign: 'center' }}>{getActivity &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetActivity.session &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetActivity.session.result &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData &&\r\n\t\t\t\t\t\t\t\t\t\t\tgetActivity.session.result.stylistData.name}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsortedList ? sortedList.map((item, id) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_card' key={id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_time'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='time_circle'></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{item.slot}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='appointment_name'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1 style={{ fontSize: '16px' }}>{item.appointmentDetail.userName}</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{item && item.userList && item.userList[0] && item.userList[0].userDetail && item.userList[0].userDetail.clientNote ? item.userList[0].userDetail.clientNote : \"No Notes\"}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}) :\r\n\t\t\t\t\t\t\t\t\t\t<div className='appointment_card'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>No Appointment Available</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\r\n\r\n\r\n\r\n\t\t\t\t</>}\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default AppointmentList\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LogoutModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\LoginContent\\LoginCard\\LoginCard.js",["2149","2150","2151"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport Styles from './LoginCard.module.css'\r\nimport BaseInput from '../../BaseInputNew/BaseInput'\r\nimport BaseButton from '../../BaseButton/BaseButton'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserByTokenAction, login } from '../../../redux/actions/userActions'\r\nimport { getAllEnabledSalonListAction } from '../../../redux/actions/salonActions'\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport LoginSkeleton from '../../Skeletons/LoginSkeleton'\r\n\r\n\r\nconst LoginCard = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const userData = useSelector((state) => state.getUserInfo);\r\n\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserByTokenAction());\r\n      dispatch(getAllEnabledSalonListAction());\r\n      if (userInfo && userInfo.status) {\r\n        history.push('/');\r\n      } else if (userInfo && !userInfo.status) {\r\n        setPassword({ ...password, error: userInfo.message });\r\n      }\r\n    },\r\n    [userInfo, error, dispatch, setPassword, history]\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.value === '' && email.value.trim() === '') {\r\n      setEmail({ ...email, error: 'Please enter email address' });\r\n    } else if (password.value === '' && password.value.trim() === '') {\r\n      setPassword({ ...password, error: 'Please enter your password' });\r\n    } else if (password.value.length < 7) {\r\n      setPassword({ ...password, error: 'Password must be at least 8 characters' });\r\n    } else {\r\n      setEmail({ ...email, error: '' });\r\n      setPassword({ ...password, error: '' });\r\n      dispatch(login(email.value, password.value));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={Styles.loginCard}>\r\n      <div className={Styles.bookbLogo}>\r\n        <img src='../../assets/favicon.png' alt=\"\" className={Styles.bookb_logo} />\r\n      </div>\r\n      <>\r\n        <span className={Styles.signIn_text}>Sign in</span>\r\n        <span className={Styles.credential_text}>Enter your credential to log into your account.</span>\r\n        {loading ? (\r\n          <LoginSkeleton />\r\n        ) : (<Fragment>\r\n          <div>\r\n            <div className={Styles.baseInput1}>\r\n              <BaseInput\r\n                name={'username'}\r\n                type={'text'}\r\n                className={Styles.baseInput}\r\n                title={'Email'}\r\n                icon={'icon-new-email'}\r\n                placeholder={'Enter the email'}\r\n                value={email.value}\r\n                onChange={(e) => setEmail({ value: e.target.value })}\r\n                style={{background: 'none'}}\r\n                errorMessage={email.error}\r\n              />\r\n            </div>\r\n            <div className={Styles.baseInput1}>\r\n              <BaseInput\r\n                name=\"password\"\r\n                style={{background: 'none'}}\r\n                className={Styles.baseInput}\r\n                title={'Password'}\r\n                icon={'icon-new-key'}\r\n                type={'password'}\r\n                placeholder={'Enter the password'}\r\n                value={password.value}\r\n                onChange={(e) => setPassword({ value: e.target.value })}\r\n                errorMessage={password.error}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={Styles.account_register} >\r\n            <span style={{ marginRight: '.3rem', color: 'white' }} >Don't have an account ? </span>\r\n            <Link to='register' className={Styles.onlick_register}>REGISTER</Link>\r\n          </div>\r\n          <div className={Styles.baseButton}>\r\n            {loading && <Spinner />}\r\n            <BaseButton\r\n              title={'Login'}\r\n              style={{background: '#ff9000'}}\r\n              onClick={handleSubmit} />\r\n          </div>\r\n          <div className={Styles.copyright_section}>\r\n            <span className={Styles.bookb}>&copy; {new Date(Date.now()).getFullYear()} BookB</span>\r\n            <div className={Styles.powered_by}>\r\n              <p>Proudly Powered By <a className={Styles.onlcik_the_algorithm} href='https://www.the-algo.com/' target='_blank'>The Algorithm</a></p>\r\n            </div>\r\n          </div>\r\n        </Fragment>)}\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginCard\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Footer\\index.js",["2152"],"import React, { Fragment } from 'react';\r\nimport { inputPhoneMasking } from '../../../utils/validators';\r\nimport '../../ProductsList/ProductsList.css';\r\nimport FooterStyles from './Footer.module.css';\r\n\r\nconst Footer = ({ phone, address, email, salonName, color }) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={FooterStyles.footor_content}>\r\n\t\t\t\t<div className=\"calling\">\r\n\t\t\t\t\t<div className=\"our_services_logo\">\r\n\t\t\t\t\t\t<svg className=\"filter__input--icon1\" style={{ fill: color, color: color }}>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-phone`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className=\"our_services_subheading\">\r\n\t\t\t\t\t\tCall us at <br />\r\n\t\t\t\t\t\t{inputPhoneMasking(phone)}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"calling\">\r\n\t\t\t\t\t<div className=\"our_services_logo\">\r\n\t\t\t\t\t\t<svg className=\"filter__input--icon1\" style={{ fill: color, color: color }}>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-pin`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className=\"our_services_subheading\">\r\n\t\t\t\t\t\t{address}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"calling\">\r\n\t\t\t\t\t<div className=\"our_services_logo\">\r\n\t\t\t\t\t\t<svg className=\"filter__input--icon1\" style={{ fill: color, color: color }}>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-email`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className=\"our_services_subheading\">\r\n\t\t\t\t\t\tEmail us at <br />\r\n\t\t\t\t\t\t{email}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='footer_container' style={{ backgorundColor: color }}><p>©{new Date().getFullYear()} {salonName}. Website Developed By</p> <a href='https://www.the-algo.com/' target='_blank'>\r\n\t\t\t\tThe Algorithm\r\n\t\t\t</a></div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NoData\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSectionColumn.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\StylistSettings.js",["2153","2154","2155","2156","2157"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/NewModal';\r\nimport ModalHeading from '../../components/NewModal/ModalHeading';\r\nimport ModalForm from '../../components/NewModal/ModalForm';\r\nimport InputsSection from '../../components/NewModal/InputsSection';\r\nimport InputBox from '../../components/NewInputBox';\r\nimport ModalButton from '../../components/NewModal/ModalButton';\r\nimport InputTime from '../../components/NewInputBox/InputTime';\r\nimport MultiSelectBox from '../../components/NewSelectBox/MultiSelectBox';\r\nimport SelectBox from '../../components/NewSelectBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllEnableSubServiceAction } from '../../redux/actions/serviceActions';\r\nimport { GET_ALL_ENABLE_SUB_SERVICE_RESET } from '../../redux/constants/serviceConstants';\r\nimport { getStylistSettingsAction } from '../../redux/actions/stylistActions';\r\nimport { GET_STYLIST_SETTINGS_RESET } from '../../redux/constants/stylistConstants';\r\nimport InputsSectionColumn from '../../components/NewModal/InputsSectionColumn';\r\nimport Styles from './Stylist.module.css'\r\n// import AddBusinessHoursWeekly from \"../StylistSessionScreen/AddBusinessHoursWeekly\";\r\n\r\nconst StylistSettings = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst enableSubServiceList = useSelector((state) => state.enableSubServiceList);\r\n\tconst getStylistSettings = useSelector((state) => state.getStylistSettings);\r\n\tconst [enableSubServiceListData, setEnableSubServiceListData] = useState([]);\r\n\r\n\tconst {\r\n\t\tstartTime, setStartTime,\r\n\t\tendTime, setEndTime,\r\n\t\trecurringType, setRecurringType,\r\n\t\tintervalTime, setIntervalTime,\r\n\t\tserviceArray, setServiceArray,\r\n\t\tstylistSettingsModal,\r\n\t\thandleSettingsModalClose,\r\n\t\tsettingsSubmitHandler,\r\n\t\tselectUpdateModel,\r\n\t\tisCompulsory,\r\n\t\tsetIsCompulsory,\r\n\t\tisCompulsoryError,\r\n\t\tsetIsCompulsoryError,\r\n\t} = data;\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectUpdateModel && selectUpdateModel._id) {\r\n\t\t\t\tdispatch(getStylistSettingsAction(selectUpdateModel._id));\r\n\t\t\t\tdispatch(getAllEnableSubServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SUB_SERVICE_RESET });\r\n\t\t\t\t\tdispatch({ type: GET_STYLIST_SETTINGS_RESET });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectUpdateModel, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetStylistSettings &&\r\n\t\t\t\tgetStylistSettings.userInfo &&\r\n\t\t\t\tgetStylistSettings.userInfo.data &&\r\n\t\t\t\tgetStylistSettings.userInfo.data.result\r\n\t\t\t) {\r\n\t\t\t\tlet settingsData = getStylistSettings.userInfo.data.result;\r\n\t\t\t\tsetStartTime({ value: settingsData.startTime, error: '' })\r\n\t\t\t\tsetEndTime({ value: settingsData.endTime, error: '' })\r\n\t\t\t\tsetRecurringType({ value: settingsData.recurringType, error: '' })\r\n\t\t\t\tsetIntervalTime({ value: settingsData.intervalTime, error: '' })\r\n\t\t\t\tsettingsData.services.map((item) => {\r\n\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t});\r\n\t\t\t\tsetIsCompulsory(settingsData.isBreakTimeCompulsory);\r\n\t\t\t\tsetServiceArray({ value: settingsData.services, error: '' })\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getStylistSettings]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!enableSubServiceListData.length) {\r\n\t\t\t\tif (enableSubServiceList &&\r\n\t\t\t\t\tenableSubServiceList.categories &&\r\n\t\t\t\t\tenableSubServiceList.categories.data &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.length > 0) {\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetEnableSubServiceListData(enableSubServiceList.categories.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[enableSubServiceList, enableSubServiceListData]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Modal show={stylistSettingsModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={selectUpdateModel && selectUpdateModel._id ? 'Update Stylist Settings' : 'Add New Stylist Settings'}\r\n\t\t\t\tonClose={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<ModalForm onSubmit={settingsSubmitHandler}>\r\n\t\t\t\t<InputsSection >\r\n\t\t\t\t\t<MultiSelectBox\r\n\t\t\t\t\t\tclassName={Styles.multiSelectBox}\r\n\t\t\t\t\t\tmultiple={true}\r\n\t\t\t\t\t\tlabel='Select Services'\r\n\t\t\t\t\t\ticon={false}//'archive'\r\n\t\t\t\t\t\terrorMessage={serviceArray.error}\r\n\t\t\t\t\t\tvalue={serviceArray.value.length ? [...serviceArray.value] : null}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetServiceArray({ value: event, error: '' });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tchildren={enableSubServiceListData}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\r\n\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\tclassName={Styles.inputTime}\r\n\t\t\t\t\t\tlabel='Booking Interval'\r\n\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\ttype='Number'\r\n\t\t\t\t\t\tstyle={{ padding: '0.9rem 1rem' }}\r\n\t\t\t\t\t\tvalue={intervalTime.value}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetIntervalTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={intervalTime.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\tlabel=\"Select Recurring Type\"\r\n\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\tvalue={recurringType.value}\r\n\t\t\t\t\t\terrorMessage={recurringType.error}\r\n\t\t\t\t\t\tonChange={(e) => setRecurringType({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"week\">\r\n\t\t\t\t\t\t\tWeek\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"month\">\r\n\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"year\">\r\n\t\t\t\t\t\t\tYear\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem', backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t<label style={{ fontSize: '1.4rem', color: '#ffffff' }}>Break Time</label>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', gap: '2rem', marginTop: '1.6rem' }}>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, DD/MM/YYYY'\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tvalue={startTime.value}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTime.error}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\t\t\tlabel='End Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, DD/MM/YYYY'\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tvalue={endTime.value}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetEndTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={endTime.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', gap: '2rem' }}>\r\n\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='isBreakTimeCompulsory'\r\n\t\t\t\t\t\t\t\tchecked={isCompulsory}\r\n\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsory(!isCompulsory);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tname='active' />\r\n\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label htmlFor='active' className='inputBox__toggle--label' style={{ color: '#ffffff' }} >\r\n\t\t\t\t\t\t\tCompulsory\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<div style={{ display: 'flex', gap: '1.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t<ModalButton\r\n\t\t\t\t\t\tlabel={selectUpdateModel && selectUpdateModel._id ? 'Update Settings' : 'Add Settings'}\r\n\t\t\t\t\t\ticon={selectUpdateModel && selectUpdateModel._id ? 'edit' : 'plus'}\r\n\t\t\t\t\t\tonClick={settingsSubmitHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <ModalButton\r\n\t\t\t\t\t\tlabel={'Add Business Hour'}\r\n\t\t\t\t\t\ticon={'stopwatch'}\r\n\t\t\t\t\t\tonClick={settingsSubmitHandler}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\r\n\t\t\t{/* <AddBusinessHoursWeekly\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tbusinessHourDetail,\r\n\t\t\t\t\tweekDays,\r\n\t\t\t\t\tsetWeekDays,\r\n\t\t\t\t\tstylistId:selectUpdateModel._id,\r\n\t\t\t\t\taddBuinessHoursModal,\r\n\t\t\t\t\tsetAddBuinessHoursModal,\r\n\t\t\t\t\taddBulkAvailabilitys,\r\n\t\t\t\t\tsetresetHandler,\r\n\t\t\t\t\tresetHandler,\r\n\t\t\t\t\tsetresetslot,\r\n\t\t\t\t\thandleResetSlot\r\n\t\t\t\t}}\r\n\t\t\t/> */}\r\n\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default StylistSettings;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\AddNotes.js",["2158","2159","2160","2161"],"import React, { useEffect, useState } from 'react';\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AddNotes = ({ data, id }) => {\r\n  const { _id, addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit } = data\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n  return (\r\n    <Modal show={addNotesModal}>\r\n      <ModalHeading heading='Add Notes' onClose={handleAddNotesModalClose} />\r\n      <ModalForm>\r\n        <InputsSection>\r\n          <TextareaBox\r\n            label=\"Notes\"\r\n            onChange={(e) => setNotes(e.target.value)}\r\n            value={notes}\r\n            errorMessage={notesError}\r\n          />\r\n\r\n        </InputsSection>\r\n        <ModalButton\r\n          label='Add Notes'\r\n          icon='plus'\r\n          onClick={() => handleNotesSubmit(_id)}\r\n        />\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNotes","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalButton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalHeading.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\ModalForm.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputsSectionColumn.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputsSection.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\CartSidebar\\CartSidebar.js",["2162","2163","2164","2165","2166"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\TextareaBox\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\stylistActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseInput\\BaseInput.js",["2167","2168","2169","2170","2171","2172"],"import React, { useState } from 'react';\r\nimport Styles from './BaseInput.module.css';\r\nimport moment from 'moment';\r\n\r\nconst BaseInput = ({ title, errorStyle, containerStyle, type, placeholder, className, style, icon, value, onChange, errorMessage, label, name, disabled, defaultValue, min, required = false }) => {\r\n  const [inputType, setInputType] = useState(type);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handlePasswordView = () => {\r\n    setInputType(prevType => (prevType === 'password' ? 'text' : 'password'));\r\n  };\r\n\r\n  const disableDate = () => {\r\n    var today, dd, mm, yyyy;\r\n    today = new Date();\r\n    dd = today.getDate() + 1;\r\n    mm = today.getMonth() + 1;\r\n    yyyy = today.getFullYear();\r\n    return yyyy + '-' + 'mm' + '-' + dd;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className={Styles.title}>{title}</span>\r\n      <div style={containerStyle} className={className ? className : Styles.inputContent}>\r\n        <svg className='navigation__icon' style={{ marginLeft: '1.4rem', marginTop: '0.5rem' }}>\r\n          <use xlinkHref={`/assets/sprite.svg#${icon}`} />\r\n        </svg>\r\n        <div style={{ position: 'relative', width: '100%' }}>\r\n          <input\r\n            data-testid='text-input'\r\n            className={Styles.baseInput}\r\n            type={inputType}\r\n            style={style}\r\n            placeholder={placeholder}\r\n            name={name}\r\n            min={type === 'date' && (moment().format('YYYY-MM-DD') || type === 'time') && min}\r\n            disabled={disabled ? disabled : false}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            required={required}\r\n          />\r\n          {type === 'password' && (\r\n            <button\r\n              className='toggle-password-button'\r\n              onClick={handlePasswordView}\r\n              style={{\r\n                position: 'absolute',\r\n                right: '-28px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                backgroundColor: 'transparent',\r\n                border: 'none',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {inputType === 'password' ? (\r\n                <svg className={Styles.navigation__icons}>\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-visibility_off`} />\r\n                </svg>\r\n              ) : (\r\n                <svg className={Styles.navigation__icons} >\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-visibility`} />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {errorMessage && <p style={errorStyle} className={Styles.errorMessage}>{errorMessage}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BaseInput;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewRadioButton\\RadioButtons.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Header\\index.js",["2173"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { changeAdminAction, getUserByTokenAction, logout } from '../../redux/actions/userActions';\r\nimport { CHANGE_ADMIN_RESET } from '../../redux/constants/userConstants';\r\nimport InputBox from '../formInputs/InputBox';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport './Header.css';\r\nimport { toast } from 'react-toastify';\r\nimport HeaderSkeleton from '../Skeletons/HeaderSkeleton';\r\n\r\nconst Header = ({\r\n\ttitle,\r\n\taddBtn = false,\r\n\taddBtnText,\r\n\taddBtnIcon,\r\n\taddBtnClick,\r\n\tsearch = false,\r\n\tsearchIcon,\r\n\tsearchPlaceholder,\r\n\tsearchvalue,\r\n\tsearchOnChange,\r\n\r\n\r\n\tlistFilter,\r\n\tlistType,\r\n\tgetTypeList,\r\n\tonTypeListChange,\r\n\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst userData = useSelector((state) => state.getUserInfo);\r\n\tconst changeAdmin = useSelector((state) => state.changeAdmin);\r\n\tconst [openDropdown, setOpenDropdown] = useState(false);\r\n\r\n\tconst salonEnabledList = useSelector((list) => list.salonEnabledList);\r\n\tconst [currentClient, setCurrentClient] = useState({});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userData && userData.error && userData.error.status === false) {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t\thistory.push('/login');\r\n\t\t\t} else if (userData && userData.userInfo && userData.userInfo.status && userData.userInfo.data) {\r\n\t\t\t\tsetCurrentClient(userData.userInfo.data);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userData, history, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changeAdmin && changeAdmin.userInfo && changeAdmin.userInfo.status) {\r\n\t\t\t\ttoast.success(changeAdmin.userInfo.message);\r\n\t\t\t\tdispatch(getUserByTokenAction());\r\n\t\t\t\twindow.location.reload(false);\r\n\t\t\t\tdispatch({ type: CHANGE_ADMIN_RESET });\r\n\t\t\t} else if (changeAdmin && changeAdmin.userInfo && !changeAdmin.userInfo.status) {\r\n\t\t\t\ttoast.error(changeAdmin.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_ADMIN_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changeAdmin, dispatch]\r\n\t);\r\n\r\n\tconst onChangeClient = async (item) => {\r\n\t\tsetCurrentClient(item.salon);\r\n\t\tdispatch(changeAdminAction(item._id, { enable: true }));\r\n\t\thistory.push('/');\r\n\t\tsetOpenDropdown(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='header'>\r\n\t\t\t\t<div className='header__left'>\r\n\t\t\t\t\t<h2 className='header__heading'>{title}</h2>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlistFilter && (\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={listType}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onTypeListChange(e.target.value)}\r\n\t\t\t\t\t\t\t\tname='listType'\r\n\t\t\t\t\t\t\t\tid='listType'\r\n\t\t\t\t\t\t\t\tclassName='typeSelectBox'>\r\n\t\t\t\t\t\t\t\t{getTypeList &&\r\n\t\t\t\t\t\t\t\t\tgetTypeList.length > 0 &&\r\n\t\t\t\t\t\t\t\t\tgetTypeList.map((type, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<option value={type.value} key={index + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t{type.label}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{addBtn && (\r\n\t\t\t\t\t\t<button onClick={addBtnClick} className='header__container--button'>\r\n\t\t\t\t\t\t\t<svg className='header__container--icon'>\r\n\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${addBtnIcon}`} />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t<span>{addBtnText}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='header__left'>\r\n\t\t\t\t\t{search && (\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tplaceholder={searchPlaceholder}\r\n\t\t\t\t\t\t\ticon={searchIcon}\r\n\t\t\t\t\t\t\tvalue={searchvalue}\r\n\t\t\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)', border: '1px solid #d9d9d9' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{userData && userData.loading ? (\r\n\t\t\t\t\t\t<HeaderSkeleton />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t\t\t{currentClient && (\r\n\t\t\t\t\t\t\t\t<div className='dropdown_container'>\r\n\t\t\t\t\t\t\t\t\t<div className='dropdown'>\r\n\t\t\t\t\t\t\t\t\t\t<svg className='form_input__icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<h2 className='header__heading'>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentClient.name} &nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize', fontWeight: '400', fontSize: '1.2rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t({currentClient.role})\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{userData &&\r\n\t\t\t\t\t\t\t\tuserData.userInfo &&\r\n\t\t\t\t\t\t\t\tuserData.userInfo.status &&\r\n\t\t\t\t\t\t\t\tuserData.userInfo.data &&\r\n\t\t\t\t\t\t\t\tuserData.userInfo.data.role === 'superadmin' && (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName='dropdown_container'\r\n\t\t\t\t\t\t\t\t\t\tonBlur={() => setOpenDropdown(false)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex='0'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ zIndex: 102 }}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dropdown' onClick={() => setOpenDropdown(!openDropdown)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentClient &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentClient.salon && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', gap: '2rem', alignItems: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={currentClient.salon.photo} alt='role' className='role_image' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className='header__heading'>{currentClient.salon.name}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{openDropdown ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='form_input__icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-up`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='form_input__icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-down`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentClient &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentClient.salon &&\r\n\t\t\t\t\t\t\t\t\t\t\t\topenDropdown && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='list_container'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salonEnabledList &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalonEnabledList.userInfo &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalonEnabledList.userInfo.data &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalonEnabledList.userInfo.data.result.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={currentClient.salon._id === item._id ? 'selected_dropdown_item' : 'dropdown_item'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onChangeClient(item)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='dropdown_item_userName'> {item.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <div className='header'>\r\n\r\n\t\t\t\t<div className='header__left'>\r\n\t\t\t\t\t<div className='header__container'>\r\n\t\t\t\t\t\t{addBtn && (\r\n\t\t\t\t\t\t\t<button onClick={addBtnClick} className='header__container--button'>\r\n\t\t\t\t\t\t\t\t<svg className='header__container--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${addBtnIcon}`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<span>{addBtnText}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t{search && (\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tplaceholder={searchPlaceholder}\r\n\t\t\t\t\t\t\ticon={searchIcon}\r\n\t\t\t\t\t\t\tvalue={searchvalue}\r\n\t\t\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)', border: '1px solid #d9d9d9' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div> \r\n\r\n\t\t\t</div>*/}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ImageUploadComponent\\ImageUploadComponent.js",["2174"],"import React from 'react';\r\nimport ImageUploadBox from './ImageUploadComponent.module.css';\r\nimport Styles from '../UserIconComponent/UserIconComponent.module.css';\r\n\r\nconst ImageUploadComponent = ({ onChange, errorMessage, label, icon, image }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={ImageUploadBox.form_input}>\r\n          {/* {label && (\r\n\t\t\t\t\t\t<label htmlFor={label} className={fileUploadBox.form_input__label} style={{ marginBottom:'1rem' }}>\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)} */}\r\n          <div className={ImageUploadBox.btn_file}>\r\n            {image ? (\r\n              <img alt='image' src={image} className={ImageUploadBox.fileUpload__label_image} />\r\n            ) : (\r\n              <span className={ImageUploadBox.fileUploadText}>\r\n                <svg className='file_upload--icon'>\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n                </svg>{' '}\r\n                <br />\r\n                {label}\r\n              </span>\r\n            )}\r\n            <input type='file' name='uploadFiles' id='uploadFiles' accept='image/*' onChange={onChange} />\r\n          </div>\r\n        </div>\r\n        <label htmlFor='uploadFiles' className={Styles.edit_form}>\r\n          <svg className={Styles.icon_edit}>\r\n            <use xlinkHref={`/assets/sprite.svg#icon-edit`}></use>\r\n          </svg>\r\n          <span className={Styles.edit_text}>Edit profile photo</span>\r\n        </label>\r\n      </div>\r\n      {errorMessage && <p className={ImageUploadBox.form_input__error}>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadComponent;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\index.js",["2175"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/userActions';\r\n\r\nimport AdminSidebar from './AdminSidebar';\r\nimport SalonSidebar from './SalonSidebar';\r\nimport StylistSidebar from './StylistSidebar';\r\n\r\nimport './Sidebar.css';\r\nimport SidebarSkeleton from '../Skeletons/SidebarSkeleton';\r\n\r\nconst Sidebar = ({ current = 'none', setModalLogOutState }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [userRole, setUserRole] = useState('');\r\n\t// const [logo, setLogo] = useState('/assets/logo-dark.png');\r\n\t// const [logoAlt, setLogoAlt] = useState('Salon logo');\r\n\tconst userData = useSelector((state) => state.getUserInfo);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userData && userData.error && userData.error.status === false) {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userData, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userData && !userData.loading && userData.userInfo && userData.userInfo.data) {\r\n\t\t\t\tsetUserRole(userData.userInfo.data.role);\r\n\t\t\t}\r\n\t\t\t// if (userData && userData.userInfo && userData.userInfo.status && userData.userInfo.data.role === 'salon') {\r\n\t\t\t// \tsetLogo(userData.userInfo.data.photo);\r\n\t\t\t// \tsetLogoAlt(userData.userInfo.data.name);\r\n\t\t\t// }\r\n\t\t\t// if (\r\n\t\t\t// \tuserData &&\r\n\t\t\t// \tuserData.userInfo &&\r\n\t\t\t// \tuserData.userInfo.status &&\r\n\t\t\t// \tuserData.userInfo.data.role === 'stylist' &&\r\n\t\t\t// \tuserData.userInfo.data.salon &&\r\n\t\t\t// \tuserData.userInfo.data.salon.photo\r\n\t\t\t// ) {\r\n\t\t\t// \tsetLogo(userData.userInfo.data.salon.photo);\r\n\t\t\t// \tsetLogoAlt(userData.userInfo.data.salon.name);\r\n\t\t\t// }\r\n\t\t},\r\n\t\t[userData]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userData && userData.userInfo && userData.userInfo.data && userRole !== '') {\r\n\t\t\t\tlet subMenu = document.getElementsByClassName('hasChildren');\r\n\t\t\t\tlet navSub = document.querySelector('.navigation__sub__active');\r\n\t\t\t\tif (navSub) {\r\n\t\t\t\t\tconst parentNavSub = navSub.parentElement.parentElement.parentElement;\r\n\t\t\t\t\tparentNavSub.classList.toggle('subMenuActive');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < subMenu.length; i++) {\r\n\t\t\t\t\tsubMenu[i].addEventListener('click', function () {\r\n\t\t\t\t\t\tthis.classList.toggle('subMenuActive');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userData, userRole]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<nav className='navigation' style={{ zIndex: 500 }}>\r\n\t\t\t{userData && userData.loading ? (\r\n\t\t\t\t<SidebarSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src='./assets/favicon.png' alt='logo' className='navigation__logo' />\r\n\t\t\t\t\t\t<img src='./assets/favicon.png' alt='logo' className='navigation__logo2' />\r\n\r\n\t\t\t\t\t\t<ul className='navigation__list'>\r\n\t\t\t\t\t\t\t{userRole === 'superadmin' ? (\r\n\t\t\t\t\t\t\t\t<SalonSidebar current={current} />\r\n\t\t\t\t\t\t\t) : userRole === 'salon' ? (\r\n\t\t\t\t\t\t\t\t<SalonSidebar current={current} />\r\n\t\t\t\t\t\t\t) : userRole === 'manager' ? (\r\n\t\t\t\t\t\t\t\t<SalonSidebar current={current} />\r\n\t\t\t\t\t\t\t) : userRole === 'admin' ? (\r\n\t\t\t\t\t\t\t\t<AdminSidebar current={current} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tuserRole === 'stylist' && <StylistSidebar current={current} stylistId={userData && userData.userInfo  && userData.userInfo.data  && userData.userInfo.data._id }/>\r\n\t\t\t\t\t\t\t\t// userRole === 'stylist' && <StylistSidebar current={current}/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ul className='navigation__list' style={{ marginTop: '0', marginBottom: '3rem' }}>\r\n\t\t\t\t\t\t<div className={`${current === 'my-profile' && 'currentNav'}`}>\r\n\t\t\t\t\t\t\t<li className='navigation__list--item'>\r\n\t\t\t\t\t\t\t\t<Link to='/my-profile' className='navigation__list--link'>\r\n\t\t\t\t\t\t\t\t\t<svg className='navigation__icon2'>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className='navigation__list--itemHover'>\r\n\t\t\t\t\t\t\t\t<Link to='/my-profile' className='navigation__list--link2'>\r\n\t\t\t\t\t\t\t\t\t<svg className='navigation__icon2'>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t<span>My Profile</span>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{current === 'my-profile' && <div className='activeNav' />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<li className='navigation__list--item'>\r\n\t\t\t\t\t\t\t\t<Link to='/' className='navigation__list--link'>\r\n\t\t\t\t\t\t\t\t\t<svg className='navigation__icon2'>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-logout`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName='navigation__list--itemHover'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetModalLogOutState(true);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<button className='navigation__list--link2 navigation__list--link2--logout'>\r\n\t\t\t\t\t\t\t\t\t<svg className='navigation__icon2'>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-logout`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t<span>Log Out</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='navigation__list--copyrightHidden'>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t&nbsp;<br />&nbsp;\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='navigation__list--copyright'>\r\n\t\t\t\t\t\t\t&copy; {new Date().getFullYear()} BookB <br />\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tPowered By {' '}\r\n\t\t\t\t\t\t\t\t<a target='_blank' href='https://www.the-algo.com/' >\r\n\t\t\t\t\t\t\t\t\tThe Algorithm\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</Fragment>)\r\n\t\t\t}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\ActivitySkeletonSmall.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\UploadFile.js",["2176","2177","2178"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport fileUploadBox from '../formInputs/FileUpload/FileUpload.module.css';\r\n\r\nconst UploadFile = ({ label, accept, icon, onChange, image, errorMessage }) => {\r\n\tconst [uploadData, setUploadData] = useState([]);\r\n\tconst [uploadVideoName, setUploadVideoName] = useState('');\r\n\tconst [imageSrc, setImageSrc] = useState(image);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (accept && accept.startsWith('image') && uploadData.length > 0) {\r\n\t\t\t\thandleChangeImage();\r\n\t\t\t} else if (accept && accept.startsWith('video') && uploadData.length > 0) {\r\n\t\t\t\tsetUploadVideoName(uploadData[0].name);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[accept, uploadData, handleChangeImage]\r\n\t);\r\n\r\n\tconst handleChangeImage = () => {\r\n\t\tvar file = uploadData[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (uploadData[0]) {\r\n\t\t\tvar url = reader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='fileUpload'>\r\n\t\t\t<input\r\n\t\t\t\ttype='file'\r\n\t\t\t\tid={label}\r\n\t\t\t\taccept={accept}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tonChange(e);\r\n\t\t\t\t\tsetUploadData(e.target.files);\r\n\t\t\t\t}}\r\n\t\t\t\thidden\r\n\t\t\t/>\r\n\t\t\t<label htmlFor={label} className='fileUpload__label'>\r\n\t\t\t\t{accept && accept.startsWith('image') ? uploadData && uploadData.length > 0 ? (\r\n\t\t\t\t\t<img src={imageSrc} alt='upload file' className='fileUpload__label--image' />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<svg className='fileUpload__label--icon'>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<span>{label}</span>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : uploadData && uploadData.length > 0 ? (\r\n\t\t\t\t\t<span style={{ width: '20rem', overflow: 'auto' }}>{uploadVideoName}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<svg className='fileUpload__label--icon'>\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<span>{label}</span>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</label>\r\n\t\t\t{errorMessage && <p className={fileUploadBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UploadFile;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\InputSections.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\StylistData.js",["2179"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Styles from \"./Stylist.module.css\";\r\nimport { inputPhoneMasking } from \"../../utils/validators\";\r\nimport UserScreenSkeleton from \"../../components/Skeletons/UserScreenSkeleton\";\r\n\r\nconst StylistData = ({\r\n  showFilter,\r\n  data,\r\n  setShowAddModal,\r\n  setModalDeleteState,\r\n  setSelectUpdateModel,\r\n  handleEditModalStylist,\r\n  setModalChangePasswordState,\r\n  setStylistSettingsModal,\r\n  onChangeHandler,\r\n  setUserId,\r\n  setAddNotesModal,\r\n  setNotes,\r\n}) => {\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <UserScreenSkeleton />\r\n      ) : (\r\n        <div\r\n          className={Styles.tableContainer}\r\n          style={{ height: showFilter ? \"63vh\" : \"65vh\" }}\r\n        >\r\n          <table className={Styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th className={Styles.th}>#</th>\r\n                <th className={Styles.th}>Name</th>\r\n                <th className={Styles.th}>Email</th>\r\n                <th className={Styles.th}>Phone</th>\r\n                <th className={Styles.th}>Gender</th>\r\n                {/* <th className={Styles.th}>Coins</th> */}\r\n                {getUserInfo &&\r\n                  getUserInfo.userInfo &&\r\n                  getUserInfo.userInfo.data &&\r\n                  (getUserInfo.userInfo.data.role === \"salon\" ||\r\n                    getUserInfo.userInfo.data.role === \"manager\" ||\r\n                    getUserInfo.userInfo.data.role === \"superadmin\") && (\r\n                    <th>Active</th>\r\n                  )}\r\n                <th>Action</th>\r\n                {/* <th>Notes</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data &&\r\n                data.map((d, index) => (\r\n                  <tr key={d._id}>\r\n                    <td>{index + 1}</td>\r\n                    <td style={{ textAlign: \"left\" }}>{d.name}</td>\r\n                    <td>{d.email}</td>\r\n                    <td>\r\n                      {d && d.phone ? inputPhoneMasking(d && d.phone) : \"NA\"}\r\n                    </td>\r\n                    <td className=\"textCapitalize\">{d.gender}</td>\r\n                    {/* <td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={Styles.coinIcon}>\r\n\t\t                                   <use xlinkHref={`/assets/sprite.svg#icon-reward-coins`} />\r\n\t                                    </svg>\r\n                                           <span>100</span>\r\n\t\t\t\t\t\t\t\t\t\t</td> */}\r\n                    {getUserInfo &&\r\n                      getUserInfo.userInfo &&\r\n                      getUserInfo.userInfo.data &&\r\n                      (getUserInfo.userInfo.data.role === \"salon\" ||\r\n                        getUserInfo.userInfo.data.role === \"manager\" ||\r\n                        getUserInfo.userInfo.data.role === \"superadmin\") && (\r\n                        <td>\r\n                          <label className=\"switch\">\r\n                            <input\r\n                              id=\"active\"\r\n                              checked={d.active}\r\n                              onChange={() => {\r\n                                onChangeHandler(d);\r\n                              }}\r\n                              type=\"checkbox\"\r\n                              className=\"checkbox\"\r\n                              name=\"active\"\r\n                            />\r\n                            <span className=\"slider round\" />\r\n                          </label>\r\n                        </td>\r\n                      )}\r\n\r\n                    <td>\r\n                      <div className={Styles.table__iconBox}>\r\n                        {getUserInfo &&\r\n                          getUserInfo.userInfo &&\r\n                          getUserInfo.userInfo.data &&\r\n                          getUserInfo.userInfo.data.role === \"salon\" && (\r\n                            <Link\r\n                              to={`stylist-sessions/${d._id}/${d.name}`}\r\n                              className={Styles.table__button__second}\r\n                            >\r\n                              <span>View Availabilities</span>\r\n                              <div\r\n                                className={\r\n                                  Styles.table__button__secondIconContainer\r\n                                }\r\n                              >\r\n                                <svg\r\n                                  className={Styles.table__button__secondIcon}\r\n                                >\r\n                                  <use\r\n                                    xlinkHref={`/assets/sprite.svg#icon-chevron-right`}\r\n                                  />\r\n                                </svg>\r\n                              </div>\r\n                            </Link>\r\n                          )}\r\n                        {getUserInfo &&\r\n                          getUserInfo.userInfo &&\r\n                          getUserInfo.userInfo.data &&\r\n                          (getUserInfo.userInfo.data.role === \"salon\" ||\r\n                            getUserInfo.userInfo.data.role === \"manager\" ||\r\n                            getUserInfo.userInfo.data.role ===\r\n                              \"superadmin\") && (\r\n                            <Fragment>\r\n                              <button\r\n                                className={Styles.table__button}\r\n                                onClick={() => {\r\n                                  setShowAddModal(true);\r\n                                  setSelectUpdateModel(d);\r\n                                  handleEditModalStylist(d);\r\n                                }}\r\n                              >\r\n                                <svg className=\"table__button--icon\">\r\n                                  <use\r\n                                    xlinkHref={`/assets/sprite.svg#icon-edit`}\r\n                                  />\r\n                                </svg>\r\n                                <span>Edit User Details</span>\r\n                              </button>\r\n                              {/* <button\r\n                                className=\"table__button table__button--delete\"\r\n                                onClick={() => {\r\n                                  setSelectUpdateModel(d);\r\n                                  setStylistSettingsModal(true);\r\n                                }}\r\n                              >\r\n                                <svg className=\"table__button--icon-red\">\r\n                                  <use\r\n                                    xlinkHref={`/assets/sprite.svg#icon-setting`}\r\n                                  />\r\n                                </svg>\r\n                                <span>Stylist Settings</span>\r\n                              </button> */}\r\n                              <button\r\n                                className=\"table__button table__button__changepwd\"\r\n                                onClick={() => {\r\n                                  setSelectUpdateModel(d);\r\n                                  setModalChangePasswordState(true);\r\n                                }}\r\n                              >\r\n                                <svg className=\"table__button--icon-green\">\r\n                                  <use\r\n                                    xlinkHref={`/assets/sprite.svg#icon-key`}\r\n                                  />\r\n                                </svg>\r\n                                <span>Reset Password</span>\r\n                              </button>\r\n                              <button\r\n                                className=\"table__button table__button--delete\"\r\n                                onClick={() => {\r\n                                  setModalDeleteState(true);\r\n                                  setSelectUpdateModel(d);\r\n                                }}\r\n                              >\r\n                                <svg className=\"table__button--icon-red\">\r\n                                  <use\r\n                                    xlinkHref={`/assets/sprite.svg#icon-delete`}\r\n                                  />\r\n                                </svg>\r\n                                <span>Delete User</span>\r\n                              </button>\r\n                            </Fragment>\r\n                          )}\r\n                      </div>\r\n                    </td>\r\n                    {/* <td>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='table__button' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetUserId(d._id);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetNotes(d.userNote)\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAddNotesModal(true)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-info`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td> */}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StylistData;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\DeleteStylist.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewInputBox\\index.js",["2180","2181","2182","2183"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\LoginSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewModal\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewTextareaBox\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewFileUpload\\index.js",["2184"],"import React from 'react';\r\nimport fileUploadBox from './FileUpload.module.css';\r\n\r\nconst FileUpload = ({ onChange, className, errorMessage, label, icon, image }) => {\r\n\treturn (\r\n\t\t<div style={{ margin: '2rem 0rem' }}>\r\n\t\t\t<div className='modalContainer__form--sections'>\r\n\t\t\t\t<div className={className ? className : fileUploadBox.form_input} >\r\n\t\t\t\t\t{/* {label && (\r\n\t\t\t\t\t\t<label htmlFor={label} className={fileUploadBox.form_input__label} style={{ marginBottom:'1rem' }}>\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)} */}\r\n\t\t\t\t\t<div className='btn-file'>\r\n\t\t\t\t\t\t{image ? (\r\n\t\t\t\t\t\t\t<img alt='image' src={image} className='fileUpload__label--image' />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span className={fileUploadBox.fileUploadText}>\r\n\t\t\t\t\t\t\t\t<svg className='file_upload--icon'>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<input type='file' name='uploadFiles' id='uploadFiles' accept='image/*' onChange={onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={fileUploadBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FileUpload;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistScreen\\CreateStylist.js",["2185","2186","2187","2188","2189"],"import React from \"react\";\r\nimport Modal from \"../../components/NewModal\";\r\nimport ModalHeading from \"../../components/NewModal/ModalHeading\";\r\nimport ModalForm from \"../../components/NewModal/ModalForm\";\r\nimport InputsSection from \"../../components/NewModal/InputsSection\";\r\nimport InputsSectionColumn from \"../../components/NewModal/InputsSectionColumn\";\r\nimport InputBox from \"../../components/NewInputBox/index\";\r\nimport ModalButton from \"../../components/NewModal/ModalButton\";\r\nimport FileUpload from \"../../components/formInputs/FileUpload\";\r\n// import SelectBox from '../../components/formInputs/SelectBox';\r\nimport TextareaBox from \"../../components/NewTextareaBox\";\r\nimport { inputPhoneMasking } from \"../../utils/validators\";\r\nimport Styles from \"./Stylist.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CreateStylist = ({ data }) => {\r\n  const {\r\n    showAddModal,\r\n    handleAddModalClose,\r\n    handleSubmit,\r\n    selectUpdateModel,\r\n    imageSrc,\r\n    setImageSrc,\r\n\r\n    name,\r\n    email,\r\n    password,\r\n    address,\r\n    phone,\r\n\r\n    setName,\r\n    setEmail,\r\n    setPhone,\r\n    setAddress,\r\n    setPassword,\r\n\r\n    nameError,\r\n    addressError,\r\n    phoneError,\r\n    emailError,\r\n    passwordError,\r\n\r\n    setNameError,\r\n    setAddressError,\r\n    setPhoneError,\r\n    setEmailError,\r\n    setPasswordError,\r\n\r\n    setUploadFileData,\r\n    uploadFileDataError,\r\n    setUploadFileDataError,\r\n\r\n    notes,\r\n    setNotes,\r\n    notesError,\r\n\r\n    // companyList,\r\n    // company,\r\n    // setCompany,\r\n    // companyError\r\n  } = data;\r\n\r\n  const userRole = useSelector((state) => state.getUserInfo);\r\n\r\n  const handleChangeImage = (e) => {\r\n    var file = e.target.files[0];\r\n    var reader = new FileReader();\r\n    if (e.target.files[0]) {\r\n      var url = reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n        setImageSrc(reader.result);\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={showAddModal}>\r\n      <ModalHeading\r\n        heading={selectUpdateModel._id ? \"Update Stylist\" : \"Add New Stylist\"}\r\n        onClose={handleAddModalClose}\r\n      />\r\n      <ModalForm className={Styles.form} onSubmit={handleSubmit}>\r\n        <InputsSection>\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Stylist Name\"\r\n            icon=\"stylist\"\r\n            placeholder=\"eg, BookB Salon-Stylist\"\r\n            value={name}\r\n            onChange={(event) => {\r\n              setName(event.target.value);\r\n              setNameError(\"\");\r\n            }}\r\n            errorMessage={nameError}\r\n          />\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Email\"\r\n            icon=\"email\"\r\n            placeholder=\"eg, johndoe@example.com\"\r\n            value={email}\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n              setEmailError(\"\");\r\n            }}\r\n            errorMessage={emailError}\r\n          />\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Phone\"\r\n            icon=\"phone\"\r\n            placeholder=\"eg, 123 456 7890\"\r\n            value={phone}\r\n            onChange={(event) => {\r\n              setPhone(inputPhoneMasking(event.target.value));\r\n              setPhoneError(\"\");\r\n            }}\r\n            errorMessage={phoneError}\r\n          />\r\n        </InputsSection>\r\n        <InputsSectionColumn>\r\n          <div className=\"flex\" style={{ gap: \"2rem\" }}>\r\n            {/* <SelectBox\r\n\t\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\r\n\t\t\t\t\t\t\terrorMessage={companyError}\r\n\t\t\t\t\t\t\tlabel='Select Company'\r\n\t\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\t\tname='company-name'>\r\n\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\tSelect Company\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{companyList &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data.result &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data.result.map((company) => (\r\n\t\t\t\t\t\t\t\t\t<option value={company._id} key={company._id}>\r\n\t\t\t\t\t\t\t\t\t\t{company.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox> */}\r\n            {!selectUpdateModel._id && (\r\n              <InputBox\r\n                className={Styles.input}\r\n                label=\"Password\"\r\n                icon=\"key\"\r\n                placeholder=\"••••••••••••••\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                  setPasswordError(\"\");\r\n                }}\r\n                errorMessage={passwordError}\r\n              />\r\n            )}\r\n            <TextareaBox\r\n              // style={{ backgroundColor: 'transparent', border: '1px solid #585858' }}\r\n              className={Styles.textArea}\r\n              label=\"Address\"\r\n              icon=\"pin\"\r\n              placeholder=\"Enter Address\"\r\n              value={address}\r\n              onChange={(event) => {\r\n                setAddress(event.target.value);\r\n                setAddressError(\"\");\r\n              }}\r\n              errorMessage={addressError}\r\n            />\r\n            {/* {userRole?.userInfo?.data.role === 'salon' && (\r\n\t\t\t\t\t\t\t< TextareaBox\r\n\t\t\t\t\t\t\t\tlabel=\"Notes\"\r\n\t\t\t\t\t\t\t\tstyle={{ height: '8rem', backgroundColor: \"#353434b5\", marginTop: \"0rem\" }}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNotes(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={notes}\r\n\t\t\t\t\t\t\t\terrorMessage={notesError}\r\n\t\t\t\t\t\t\t\tplaceholder='notes..'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)} */}\r\n          </div>\r\n        </InputsSectionColumn>\r\n\r\n        <FileUpload\r\n          className={Styles.fileUpload}\r\n          label=\"Upload Stylist Photo\"\r\n          icon=\"upload\"\r\n          image={imageSrc}\r\n          onChange={(e) => {\r\n            handleChangeImage(e);\r\n            setUploadFileData(e.target.files);\r\n            setUploadFileDataError(\"\");\r\n          }}\r\n          errorMessage={uploadFileDataError}\r\n        />\r\n\r\n        <ModalButton\r\n          label={selectUpdateModel._id ? \"Update Stylist\" : \"Add New\"}\r\n          icon={selectUpdateModel._id ? \"edit\" : \"plus\"}\r\n          onClick={handleSubmit}\r\n        />\r\n      </ModalForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateStylist;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSection.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\serviceActions.js",["2190","2191","2192"],"import axios from 'axios';\r\nimport {\r\n\tGET_ALL_SERVICE_REQUEST,\r\n\tGET_ALL_SERVICE_SUCCESS,\r\n\tGET_ALL_SERVICE_FAIL,\r\n\r\n\tADD_SERVICE_REQUEST,\r\n\tADD_SERVICE_SUCCESS,\r\n\tADD_SERVICE_FAIL,\r\n\r\n\tCHANGE_SERVICE_STATUS_REQUEST,\r\n\tCHANGE_SERVICE_STATUS_SUCCESS,\r\n\tCHANGE_SERVICE_STATUS_FAIL,\r\n\r\n\tDELETE_SERVICE_REQUEST,\r\n\tDELETE_SERVICE_SUCCESS,\r\n\tDELETE_SERVICE_FAIL,\r\n\r\n\tGET_ALL_ENABLE_SERVICE_REQUEST,\r\n\tGET_ALL_ENABLE_SERVICE_SUCCESS,\r\n\tGET_ALL_ENABLE_SERVICE_FAIL,\r\n\r\n\tGET_ALL_SERVICE_CATEGORY_REQUEST,\r\n\tGET_ALL_SERVICE_CATEGORY_SUCCESS,\r\n\tGET_ALL_SERVICE_CATEGORY_FAIL,\r\n\r\n\tADD_SERVICE_CATEGORY_REQUEST,\r\n\tADD_SERVICE_CATEGORY_SUCCESS,\r\n\tADD_SERVICE_CATEGORY_FAIL,\r\n\r\n\tSERVICE_CATEGORY_STATUS_REQUEST,\r\n\tSERVICE_CATEGORY_STATUS_SUCCESS,\r\n\tSERVICE_CATEGORY_STATUS_FAIL,\r\n\r\n\tDELETE_SERVICE_CATEGORY_REQUEST,\r\n\tDELETE_SERVICE_CATEGORY_SUCCESS,\r\n\tDELETE_SERVICE_CATEGORY_FAIL,\r\n\tGET_ALL_ENABLE_SUB_SERVICE_FAIL,\r\n\tGET_ALL_ENABLE_SUB_SERVICE_REQUEST,\r\n\tGET_ALL_ENABLE_SUB_SERVICE_SUCCESS,\r\n\r\n\tUPDATE_RANK_SERVICE_REQUEST,\r\n\tUPDATE_RANK_SERVICE_SUCCESS,\r\n\tUPDATE_RANK_SERVICE_RESET,\r\n\r\n} from '../constants/serviceConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\n\r\nexport const getAllServiceCategoriesAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_SERVICE_CATEGORY_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-main-service?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SERVICE_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SERVICE_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const serviceCategoryStatusAction = (id, enableStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: SERVICE_CATEGORY_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(\r\n\t\t\t`${BASE_URL}/service/enable-disable-service?serviceId=${id}`,\r\n\t\t\t{ enable: enableStatus },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SERVICE_CATEGORY_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SERVICE_CATEGORY_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteServiceCategoryAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SERVICE_CATEGORY_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/service/delete-category?categoryId=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SERVICE_CATEGORY_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SERVICE_CATEGORY_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getAllServiceAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst id = formData.id ? `id=${formData.id}&` : '';\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-service-groupby-category?${id}pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getAllEnableServiceAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_ENABLE_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-enable-main-service?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createServiceAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/service/add-service`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const changeServiceStatusAction = (id, enableStatus) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_SERVICE_STATUS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/service/enable-disable-service?serviceId=${id}`, enableStatus, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_SERVICE_STATUS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_SERVICE_STATUS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteServiceAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/service/delete-service?serviceId=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getAllEnableSubServiceAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_ENABLE_SUB_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/service/get-enable-sub-service?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SUB_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ENABLE_SUB_SERVICE_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const updateRankServiceAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: UPDATE_RANK_SERVICE_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/service/rank-update-service`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_RANK_SERVICE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_RANK_SERVICE_RESET,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\BaseInputNew\\BaseInput.js",["2193","2194","2195","2196","2197","2198"],"import React, { useState } from 'react';\r\nimport Styles from './BaseInput.module.css';\r\nimport moment from 'moment';\r\n\r\nconst BaseInput = ({ title, errorStyle, containerStyle, type, placeholder, className, style, icon, value, onChange, errorMessage, label, name, disabled, defaultValue, min, required = false, onIconClick, customIcon }) => {\r\n  const [inputType, setInputType] = useState(type);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handlePasswordView = () => {\r\n    setInputType(prevType => (prevType === 'password' ? 'text' : 'password'));\r\n  };\r\n\r\n  const disableDate = () => {\r\n    var today, dd, mm, yyyy;\r\n    today = new Date();\r\n    dd = today.getDate() + 1;\r\n    mm = today.getMonth() + 1;\r\n    yyyy = today.getFullYear();\r\n    return yyyy + '-' + 'mm' + '-' + dd;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className={Styles.title}>{title}</span>\r\n      <div style={containerStyle} className={className ? className : Styles.inputContent}>\r\n      {customIcon && (\r\n          <div style={{ position: 'absolute', left: '0.5rem', top: '50%', transform: 'translateY(-50%)', zIndex: 1 }}>\r\n            {customIcon}\r\n          </div>\r\n        )}\r\n      <svg\r\n          className='navigation__icon'\r\n          style={{ marginLeft: '1.4rem', marginTop: '0.5rem', cursor: onIconClick ? 'pointer' : 'default' }}\r\n          onClick={onIconClick} \r\n        >\r\n          <use xlinkHref={`/assets/sprite.svg#${icon}`} />\r\n        </svg>\r\n        <div style={{ position: 'relative', width: '100%' }}>\r\n          <input\r\n            data-testid='text-input'\r\n            className={Styles.baseInput}\r\n            type={inputType}\r\n            style={{\r\n              ...style,\r\n              // border:\"0px solid #ccc\",\r\n              marginTop:5,\r\n              color: \"#fff\"\r\n            }}\r\n            placeholder={placeholder}\r\n            name={name}\r\n            min={type === 'date' && (moment().format('YYYY-MM-DD') || type === 'time') && min}\r\n            disabled={disabled ? disabled : false}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            required={required}\r\n          />\r\n          {type === 'password' && (\r\n            <button\r\n              className='toggle-password-button'\r\n              onClick={handlePasswordView}\r\n              style={{\r\n                position: 'absolute',\r\n                right: '-28px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                backgroundColor: 'transparent',\r\n                border: 'none',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {inputType === 'password' ? (\r\n                <svg className={Styles.navigation__icons}>\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-visibility_off`} />\r\n                </svg>\r\n              ) : (\r\n                <svg className={Styles.navigation__icons} >\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-visibility`} />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {errorMessage && <p style={errorStyle} className={Styles.errorMessage}>{errorMessage}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BaseInput;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\MultiSelectBox.js",["2199","2200","2201"],"import React, { useState } from 'react';\r\nimport Styles from './SelectBox.css';\r\nimport Select, { components } from 'react-select';\r\n\r\nconst MultiSelectBox = ({ className, children, icon, name, label, value, onChange, errorMessage, multiple, inputValue, onInputChange }) => {\r\n\tconst colourStyles = {\r\n\t\tmenuList: (styles) => ({\r\n\t\t\t...styles,\r\n\t\t\tbackgroundColor: '#eaeaea !important',\r\n\t\t\tzIndex: 999,\r\n\t\t\twidth: '100%'\r\n\t\t}),\r\n\t\toption: (styles, { isFocused, isSelected }) => ({\r\n\t\t\t...styles,\r\n\t\t\tcolor: isSelected ? '#000' : '#000',\r\n\t\t\tbackgroundColor: isSelected ? '#FFF' : '#FFF',\r\n\t\t\tzIndex: 1\r\n\t\t}),\r\n\t\tmenu: (base) => ({\r\n\t\t\t...base,\r\n\t\t\tzIndex: 999,\r\n\t\t})\r\n\t};\r\n\tconst NoOptionsMessage = (props) => {\r\n\t\treturn (\r\n\t\t\t<components.NoOptionsMessage {...props}>\r\n\t\t\t\t<span>No users found with name</span>\r\n\t\t\t</components.NoOptionsMessage>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className={className ? className : Styles.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className=\"form_input__label\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className=\"textBox\">\r\n\t\t\t\t{icon && (\r\n\t\t\t\t\t<label className=\"textBox__label\" style={{ top: '0rem' }}>\r\n\t\t\t\t\t\t<svg className=\"textBox__label--icon\">\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='textBox__input' >\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tisMulti={multiple}\r\n\t\t\t\t\t\toptions={children}\r\n\t\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tstyles={colourStyles}\r\n\t\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\t\tclassName='textBox__input--box'\r\n\t\t\t\t\t\tonInputChange={onInputChange}\r\n\t\t\t\t\t// menuIsOpen={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{errorMessage && <p className=\"form_input__error\">{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MultiSelectBox;\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tisMulti={multiple}\r\n\t\t\t\t\t\tid={name}\r\n\t\t\t\t\t\tclassName='react-select'\r\n\t\t\t\t\t\tclassName='textBox__input--box'\r\n\t\t\t\t\t\tisClearable={false}\r\n\t\t\t\t\t\toptions={children}\r\n\t\t\t\t\t\tstyles={colourStyles}\r\n\t\t\t\t\t\t// components={{ NoOptionsMessage }}\r\n\t\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\r\n\r\n\t\t\t\t\t\t// inputValue={value}\r\n\t\t\t\t\t\t// onInputChange={onInputChange}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\t// only set the input when the action that caused the\r\n\t\t\t\t\t\t\t// change equals to \"input-change\" and ignore the other\r\n\t\t\t\t\t\t\t// ones like: \"set-value\", \"input-blur\", and \"menu-close\"\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") setInput(value); // <---\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/> */}","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewInputBox\\InputTime.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\CreateAccountModal.js",["2202","2203","2204","2205"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '../../components/formInputs/Button'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport InputBox from '../components/InputBox'\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePhone } from '../../utils/validators'\r\nimport { registerUserAction, webLogin } from '../../redux/actions/websiteSettingAction'\r\nimport { toast } from 'react-toastify'\r\nimport { CREATE_NEW_USER_RESET } from '../../redux/constants/userConstants'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\n\r\nconst CreateAccountModal = ({ data }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { modalCreateAccount, handleCreateAccountModalClose, handleLoginModalClose } = data;\r\n    const createUser = useSelector((state) => state.createUser);\r\n    const [name, setName] = useState({ value: '', error: '' });\r\n    const [registerEmail, setRegisterEmail] = useState({ value: '', error: '' });\r\n    const [registerPassword, setRegisterPassword] = useState({ value: '', error: '' });\r\n    const [phone, setPhone] = useState({ value: '', error: '' });\r\n\r\n    useEffect(\r\n        () => {\r\n            if (createUser && createUser.userInfo && createUser.userInfo.status) {\r\n                toast.success(createUser.userInfo.message);\r\n                dispatch({ type: CREATE_NEW_USER_RESET });\r\n                dispatch(webLogin(registerEmail.value, registerPassword.value));\r\n                handleCreateAccountModalClose()\r\n                handleLoginModalClose()\r\n            } else if (createUser && createUser.userInfo && !createUser.userInfo.status) {\r\n                dispatch({ type: CREATE_NEW_USER_RESET });\r\n                toast.error(createUser.userInfo.message);\r\n            }\r\n        },\r\n        [createUser]\r\n    );\r\n\r\n    const registerUserHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (name.value === \"\") {\r\n            setName({ error: \"Please enter your Name\" })\r\n        } else if (registerEmail.value === \"\") {\r\n            setRegisterEmail({ error: \"Please enter your Email\" })\r\n        } else if (!validateEmail(registerEmail.value)) {\r\n            setRegisterEmail({ error: \"Invalid Email\" })\r\n        } else if (phone.value === \"\") {\r\n            setPhone({ error: \"Please enter your phone number.\" })\r\n        } else if (!validatePhone(unMasking(phone.value))) {\r\n            setPhone({ error: \"Phone number must be of 10 digits.\" })\r\n        } else if (registerPassword.value === \"\") {\r\n            setRegisterPassword({ error: \"Please select your gender\" })\r\n        }\r\n        else {\r\n            const formData = {\r\n                name: name.value,\r\n                email: registerEmail.value,\r\n                phone: unMasking(phone.value),\r\n                password: registerPassword.value\r\n            }\r\n            dispatch(registerUserAction(formData))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={modalCreateAccount}>\r\n            <ModalHeading heading=\"Create Account\" onClose={handleCreateAccountModalClose} />\r\n            <ModalForm onSubmit={registerUserHandler} style={{ marginBottom: '2.5rem' }}>\r\n                <InputsSection>\r\n                    <InputBox\r\n                        label=\"User Name\"\r\n                        icon=\"user\"\r\n                        placeholder=\"eg, John Doe\"\r\n                        value={name.value}\r\n                        onChange={(event) => {\r\n                            setName({ value: event.target.value, error: '' });\r\n                        }}\r\n                        errorMessage={name.error}\r\n                    />\r\n                    <InputBox\r\n                        label=\"Email\"\r\n                        icon=\"email\"\r\n                        placeholder=\"eg, johndoe@example.com\"\r\n                        value={registerEmail.value}\r\n                        onChange={(event) => {\r\n                            setRegisterEmail({ value: event.target.value, error: '' });\r\n                        }}\r\n                        errorMessage={registerEmail.error}\r\n                    />\r\n                </InputsSection>\r\n                <InputsSection >\r\n                    <InputBox\r\n                        label=\"Phone\"\r\n                        icon=\"phone\"\r\n                        type=\"text\"\r\n                        placeholder=\"eg, 123 456 7890\"\r\n                        value={phone.value}\r\n                        onChange={(event) => {\r\n                            setPhone({ value: inputPhoneMasking(event.target.value), error: '' });\r\n                        }}\r\n                        errorMessage={phone.error}\r\n                    />\r\n                    <InputBox\r\n                        type='password'\r\n                        placeholder='•••••••••••••'\r\n                        value={registerPassword.value}\r\n                        onChange={(e) => setRegisterPassword({ value: e.target.value })}\r\n                        errorMessage={registerPassword.error}\r\n                        label='Password'\r\n                        icon='key'\r\n                    />\r\n                </InputsSection>\r\n\r\n                <ModalButton\r\n                    label='Create Account'\r\n                    icon='arrow_right'\r\n                    onClick={registerUserHandler}\r\n                />\r\n            </ModalForm>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateAccountModal","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\ForgotPasswordModal.js",["2206","2207","2208"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Modal from '../../components/Modal'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport { getUserByTokenAction } from '../../redux/actions/userActions'\r\nimport { forgotPasswordUserAction } from '../../redux/actions/websiteSettingAction'\r\nimport { CHANGE_PASSWORD_USER_RESET } from '../../redux/constants/userConstants'\r\nimport { validateEmail } from '../../utils/validators'\r\nimport InputBox from '../components/InputBox'\r\n\r\nconst ForgotPasswordModal = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst { modalChangePasswordState, onChangePwdModalClose } = data;\r\n\tconst [emailFPwd, setEmailFPwd] = useState({ value: '', error: '' });\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo, loading, error } = userLogin;\r\n\tconst changePasswordUser = useSelector((state) => state.changePasswordUser);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserByTokenAction());\r\n\t\t\tif (userInfo && userInfo.status) {\r\n\t\t\t\tsetEmailFPwd({ value: '', error: '' });\r\n\t\t\t\t// history.push(`/salon/${getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.salon && getPublicWebsite.websiteInfo.data.salon.name}/checkout`)\r\n\t\t\t} else if (userInfo && !userInfo.status) {\r\n\t\t\t\tsetEmailFPwd({ ...emailFPwd, error: userInfo.message });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userInfo, error, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (changePasswordUser && changePasswordUser.userInfo && changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.success(changePasswordUser.userInfo.message);\r\n\t\t\t\tonChangePwdModalClose();\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t} else if (changePasswordUser && changePasswordUser.userInfo && !changePasswordUser.userInfo.status) {\r\n\t\t\t\ttoast.error(changePasswordUser.userInfo.message);\r\n\t\t\t\tdispatch({ type: CHANGE_PASSWORD_USER_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[changePasswordUser, dispatch]\r\n\t);\r\n\r\n\tconst onChangePwdUserHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (emailFPwd.value === \"\") {\r\n\t\t\tsetEmailFPwd({ error: \"Please enter your Email\" })\r\n\t\t} else if (!validateEmail(emailFPwd.value)) {\r\n\t\t\tsetEmailFPwd({ error: \"Invalid Email\" })\r\n\t\t} else {\r\n\t\t\tdispatch(forgotPasswordUserAction({ email: emailFPwd.value }));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={modalChangePasswordState} style={{ background: '#ffffff' }}>\r\n\t\t\t<ModalHeading heading='Password assistance' onClose={onChangePwdModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text' style={{ marginBottom: '0' }}>\r\n\t\t\t\t\tEnter the email address associated with your salon account.{' '}\r\n\t\t\t\t</p>\r\n\t\t\t\t<br />\r\n\t\t\t\t<InputBox\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\tvalue={emailFPwd.value}\r\n\t\t\t\t\tstyle={{ width: '100%', height: '5rem' }}\r\n\t\t\t\t\tonChange={(e) => setEmailFPwd({ value: e.target.value })}\r\n\t\t\t\t\terrorMessage={emailFPwd.error}\r\n\t\t\t\t\tlabel=''\r\n\t\t\t\t\ticon='email'\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p className='modal__text2'>We'll send the auto genrated password to user email address.</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Reset Password' icon='key' onClick={onChangePwdUserHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default ForgotPasswordModal","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewButton\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\Checkout\\LoginModal.js",["2209","2210","2211","2212"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/formInputs/Button';\r\nimport Modal from '../../components/Modal';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport { getUserByTokenAction } from '../../redux/actions/userActions';\r\nimport { webLogin } from '../../redux/actions/websiteSettingAction';\r\nimport InputBox from '../components/InputBox';\r\n\r\nconst LoginModal = ({ data }) => {\r\n    const { handleLoginModalClose, loginModal, setModalChangePasswordState, setModalCreateAccount } = data;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState({ value: '', error: '' });\r\n    const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo, loading, error } = userLogin;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email.value === '' && email.value.trim() === '') {\r\n            setEmail({ ...email, error: 'Please enter email address' });\r\n        } else if (password.value === '' && password.value.trim() === '') {\r\n            setPassword({ ...password, error: 'Please enter your password' });\r\n        } else if (password.value.length < 7) {\r\n            setPassword({ ...password, error: 'Password must be at least 8 characters' });\r\n        } else {\r\n            setEmail({ ...email, error: '' });\r\n            setPassword({ ...password, error: '' });\r\n            dispatch(webLogin(email.value, password.value));\r\n        }\r\n    };\r\n\r\n    const clearData = () => {\r\n        setEmail({ value: '', error: '' });\r\n        setPassword({ value: '', error: '' });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(getUserByTokenAction());\r\n            if (userInfo && userInfo.status) {\r\n                handleLoginModalClose();\r\n                clearData();\r\n            } else if (userInfo && !userInfo.status) {\r\n                setPassword({ ...password, error: userInfo.message });\r\n            }\r\n        },\r\n        [userInfo, error, dispatch]\r\n    );\r\n\r\n    return (\r\n        <Modal show={loginModal}>\r\n            <ModalHeading onClose={handleLoginModalClose} />\r\n            <ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n                <div className='login-left-inside' style={{ width: '100%', alignItems: 'center', gap: '1rem' }}>\r\n                    <h1 className='login_container__heading'>Sign in</h1>\r\n                    <h3 className='login_container__subheading'>Enter your credentials to log into your account.</h3>\r\n                </div>\r\n                <InputsSectionColumn style={{ flexDirection: 'column' }}>\r\n                    <InputBox\r\n                        type='text'\r\n                        placeholder='eg, johndoe@example.com'\r\n                        value={email.value}\r\n                        style={{ width: '100%', height: '5rem' }}\r\n                        onChange={(e) => setEmail({ value: e.target.value })}\r\n                        errorMessage={email.error}\r\n                        label='Email'\r\n                        icon='email'\r\n                    />\r\n                    <InputBox\r\n                        type='password'\r\n                        placeholder='•••••••••••••'\r\n                        value={password.value}\r\n                        style={{ width: '100%', height: '5rem' }}\r\n                        onChange={(e) => setPassword({ value: e.target.value })}\r\n                        errorMessage={password.error}\r\n                        label='Password'\r\n                        icon='key'\r\n                    />\r\n\r\n                </InputsSectionColumn>\r\n                <InputsSectionColumn style={{ backgroundColor: 'var(--light-grey1)', margin: '0' }}>\r\n                    <button\r\n                        className=\"forgot-password\"\r\n                        style={{\r\n                            width: '100%',\r\n                            justifyContent: 'center',\r\n                            textAlign: 'left'\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setModalCreateAccount(true)\r\n                        }}\r\n                    >\r\n                        Create Account\r\n                    </button>\r\n                    <button\r\n                        className=\"forgot-password\"\r\n                        style={{\r\n                            width: '100%',\r\n                            justifyContent: 'flex-end',\r\n                            color: 'red',\r\n                            textAlign: 'right'\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setModalChangePasswordState(true)\r\n                        }}\r\n                    >\r\n                        Forgot Password\r\n                    </button>\r\n                </InputsSectionColumn>\r\n\r\n                {/* {loading && <Spinner />} */}\r\n                <Button\r\n                    style={{\r\n                        width: '100%',\r\n                        justifyContent: 'center'\r\n                    }}\r\n                    onClick={handleSubmit}\r\n                    label='Login'\r\n                    icon='arrow_right'\r\n                />\r\n            </ModalForm>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\QuantityInput\\QuantityInputSidebar.js",["2213","2214","2215"],"import moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { adjustQtyCartAction } from '../../../redux/actions/productActions';\r\nimport TextBox from './QuantityInput.module.css';\r\n\r\nconst QuantityInputSidebar = ({ id, type, onChange, errorMessage, label, style, disabled, min, required = false, quantity, stock }) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst minusQty = () => {\r\n\t\tif (quantity > 1) {\r\n\t\t\tdispatch(adjustQtyCartAction(id, quantity - 1))\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst plusQty = () => {\r\n\t\tif (quantity < stock) {\r\n\t\t\tdispatch(adjustQtyCartAction(id, quantity + 1))\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={TextBox.form_input} style={{margin:'0',width:'auto'}}>\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<div className=\"qty-box\">\r\n\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t<span className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn quantity-left-minus\"\r\n\t\t\t\t\t\t\t\tonClick={minusQty}\r\n\t\t\t\t\t\t\t\tdata-type=\"minus\" data-field=\"\">\r\n\t\t\t\t\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-minus`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\tname={label}\r\n\t\t\t\t\t\t\tmin={min}\r\n\t\t\t\t\t\t\tclassName=\"form-control input-number\"\r\n\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\trequired={required}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn quantity-right-plus\"\r\n\t\t\t\t\t\t\t\tonClick={plusQty}\r\n\t\t\t\t\t\t\t\tdata-type=\"plus\" data-field=\"\">\r\n\t\t\t\t\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuantityInputSidebar;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\notificationActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\DeleteService.js",["2216"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\n\r\nconst DeleteService = ({ data }) => {\r\n\tconst [text, setText] = useState('Service');\r\n\tconst { selectUpdateModel, modalDeleteState, onDeleteModalClose, onDeleteHandler } = data;\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectUpdateModel.isMainService) {\r\n\t\t\t\tsetText('Sevice');\r\n\t\t\t} else {\r\n\t\t\t\tsetText('Category');\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Modal show={modalDeleteState}>\r\n\t\t\t<ModalHeading heading={'Delete ' + text} onClose={onDeleteModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text'>Are you sure you want to delete this {text}?</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Delete' icon='delete' onClick={onDeleteHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteService;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewServiceScreen\\AddService.js",["2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\DeleteAppointmentModal.js",["2234","2235","2236","2237","2238"],"import React from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport { deleteAppointmentAction, deleteSlotAction } from \"../../redux/actions/appointmentAction\";\r\nimport moment from \"moment\";\r\n\r\nconst DeleteAppointmentModal = ({ data }) => {\r\n  const {\r\n    deleteAptModal,\r\n    setDeleteAptModal,\r\n    handleAddModalClose,\r\n    appointmentId,\r\n    userLogin,\r\n    dispatch,\r\n    appointmentTime\r\n  } = data;\r\n\r\n  const handleDelelteSubmit = () => {\r\n    dispatch(deleteAppointmentAction(appointmentId));\r\n    setDeleteAptModal(false)\r\n  };\r\n  return (\r\n    <>\r\n      <Modal show={deleteAptModal}>\r\n        <ModalHeading\r\n          heading={\"Delete Appointment\"}\r\n          onClose={() => setDeleteAptModal(false)}\r\n        />\r\n        <ModalForm style={{ marginBottom: \"2.5rem\" }}>\r\n          <p className=\"modal__text\">\r\n            Are you sure you want to delete the Appointment?\r\n          </p>\r\n          <div style={{ display: \"flex\", gap: \"2rem\" }}>\r\n            <ModalButton\r\n              label=\"Delete\"\r\n              icon={\"delete\"}\r\n              onClick={handleDelelteSubmit}\r\n            />\r\n            <ModalButton\r\n              varient=\"danger\"\r\n              label=\"Cancel\"\r\n              onClick={() => setDeleteAptModal(false)}\r\n            />\r\n          </div>\r\n        </ModalForm>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteAppointmentModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\CreateSlotModal.js",["2239"],"import React from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\n\r\nconst CreateSlot = ({ data }) => {\r\n\r\n\tconst {\r\n\t\tcreateSlotModal,\r\n\t\thandleCreateSlot,\r\n\t\thandleAddModalClose,\r\n\t\tdate, setDate,\r\n\t\tstartTime, setStartTime,\r\n\t\tdateError, setDateError,\r\n\t\tstartTimeError, setStartTimeError,\r\n\t\tisUpdate,\r\n\t\thandleUpdateSlot\r\n\t} = data;\r\n\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={createSlotModal}>\r\n\t\t\t\t<ModalHeading heading={isUpdate ? 'Update Slot' : 'Create Slot'} onClose={handleAddModalClose} />\r\n\t\t\t\t<ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\r\n\t\t\t\t\t<InputsSection>\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tlabel='Select Date'\r\n\t\t\t\t\t\t\ticon='calendar'\r\n\t\t\t\t\t\t\tplaceholder='Appointment Date'\r\n\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\tvalue={convert(date)}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetDate(event.target.value);\r\n\t\t\t\t\t\t\t\tsetDateError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={dateError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\tplaceholder='eg, 12:00 PM'\r\n\t\t\t\t\t\t\tvalue={startTime}\r\n\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetStartTime(event.target.value);\r\n\t\t\t\t\t\t\t\tsetStartTimeError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={startTimeError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputsSection>\r\n\t\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t\t<ModalButton label={isUpdate ? 'Update Slot' : ' Confirm Slot'} icon={isUpdate ? 'edit' : 'plus'} onClick={(e) => { isUpdate ? handleUpdateSlot(e) : handleCreateSlot(e) }} />\r\n\t\t\t\t\t\t<ModalButton varient='danger' label='Cancel' icon='delete' onClick={handleAddModalClose} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ModalForm>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CreateSlot","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddSlotModal.js",["2240","2241","2242","2243","2244","2245","2246"],"import React from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport moment from \"moment\";\r\n\r\nconst AddSlotModal = ({ data }) => {\r\n  const {\r\n    addSlotModal,\r\n    setAddSlotModal,\r\n    handleAddModalClose,\r\n    appointmentTime,\r\n    setUserId,\r\n    appointmentId,\r\n    convertMinutes,\r\n    unBlockHandler,\r\n    userLogin,\r\n    dispatch,\r\n  } = data;\r\n\r\n  var dd = String(appointmentTime && appointmentTime.getDate()).padStart(2, '0');\r\n  var mm = String(appointmentTime && appointmentTime.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  var yyyy = appointmentTime && appointmentTime.getFullYear();\r\n\r\n  let apt = mm + '/' + dd + '/' + yyyy;\r\n  return (\r\n    <>\r\n      <Modal show={addSlotModal}>\r\n        <ModalHeading heading={\"Unblock Slot\"} onClose={handleAddModalClose} />\r\n        <ModalForm style={{ marginBottom: \"2.5rem\" }}>\r\n          <p className=\"modal__text\">\r\n            Unblock slot on {\" \"}\r\n            {/* <span style={{fontStyle: 'bold'}}>{moment(appointmentTime).calendar()}</span> */}\r\n\r\n            <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format(\"MM-DD-YY\")}</span> &nbsp; at &nbsp;\r\n            <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format('hh:mm A')}</span>\r\n            {\" \"}?\r\n          </p>\r\n          <div style={{ display: \"flex\", gap: \"2rem\" }}>\r\n            <ModalButton\r\n              label=\"Unblock\"\r\n              onClick={() => {\r\n                unBlockHandler(appointmentTime);\r\n                handleAddModalClose();\r\n              }}\r\n            />\r\n            <ModalButton\r\n              varient=\"danger\"\r\n              label=\"Cancel\"\r\n              onClick={handleAddModalClose}\r\n            />\r\n          </div>\r\n        </ModalForm>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddSlotModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Waitlist\\WaitlistModal.js",["2247","2248","2249"],"import React, { useEffect } from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport { appointmentStatusListAction, availabilityAppointmentAction, changeAppointmentAction } from '../../redux/actions/appointmentAction'\r\nimport WaitlistTable from './WaitlistTable'\r\n\r\nconst WaitlistModal = ({ data }) => {\r\n\r\n  const { modalWaitlist, WaitlistModalClose, slotId, availabilityAppointment, appointmentStatusList, dispatch,\r\n    setDeleteAptModal, setDate, setStartTime, setService, setName, setEmail, setPhone, setGender,\r\n    setAppointmentId, setIsUpdate, setAddModalActive,\r\n    serviceIds, setServiceIds, setSalon, addAppointment, setRequiredTime, setSlotStatus, changeSlotStatus, setChangeSlotStatus,\r\n    setTimeSlotId\r\n  } = data;\r\n\r\n  useEffect(() => {\r\n    if (modalWaitlist === true) {\r\n      dispatch(appointmentStatusListAction())\r\n      dispatch(availabilityAppointmentAction(slotId))\r\n    }\r\n  }, [modalWaitlist])\r\n\r\n  useEffect(() => {\r\n    if (addAppointment && addAppointment.session && addAppointment.session.status === true) {\r\n      //dispatch(appointmentStatusListAction())\r\n      dispatch(availabilityAppointmentAction(slotId))\r\n    }\r\n  }, [addAppointment])\r\n\r\n  return (\r\n    <>\r\n      <Modal show={modalWaitlist} style={{}}>\r\n        <ModalHeading heading={'Waitlist'} onClose={WaitlistModalClose} />\r\n        <WaitlistTable data={{\r\n          availabilityAppointment, appointmentStatusList, setDeleteAptModal,\r\n          setAppointmentId, setIsUpdate, setAddModalActive, setDate,\r\n          setStartTime, setService, setName, setEmail, setPhone, setGender,\r\n          serviceIds, setServiceIds, setSalon, setRequiredTime, setSlotStatus,\r\n          changeSlotStatus, setChangeSlotStatus, setTimeSlotId\r\n        }} />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WaitlistModal","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\availabilityActions.js",["2250","2251","2252"],"import axios from 'axios';\r\nimport {\r\n\tGET_DAILY_AVAILABILITYS_REQUEST,\r\n\tGET_DAILY_AVAILABILITYS_SUCCESS,\r\n\tGET_DAILY_AVAILABILITYS_FAIL,\r\n\r\n\tADD_DAILY_AVAILABILITYS_FAIL,\r\n\tADD_DAILY_AVAILABILITYS_SUCCESS,\r\n\tADD_DAILY_AVAILABILITYS_REQUEST,\r\n\r\n\tADD_BULK_AVAILABILITYS_REQUEST,\r\n\tADD_BULK_AVAILABILITYS_SUCCESS,\r\n\tADD_BULK_AVAILABILITYS_FAIL,\r\n\r\n\tADD_DAY_AVAILABILITYS_REQUEST,\r\n\tADD_DAY_AVAILABILITYS_SUCCESS,\r\n\tADD_DAY_AVAILABILITYS_FAIL,\r\n\r\n\tGET_UNBLOCK_AVAILABILITYS_FAIL,\r\n\tGET_UNBLOCK_AVAILABILITYS_SUCCESS,\r\n\tGET_UNBLOCK_AVAILABILITYS_REQUEST,\r\n\tDEL_BLOCK_AVAILABILITYS_REQUEST,\r\n\tDEL_BLOCK_AVAILABILITYS_SUCCESS,\r\n\tDEL_BLOCK_AVAILABILITYS_FAIL,\r\n} from '../constants/availabilityConstants';\r\nimport { BASE_URL } from './ip';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst utcTimeOffset = new Date().getTimezoneOffset();\r\n\r\n\r\nexport const getStylistAvailabilitysAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: GET_DAILY_AVAILABILITYS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet uri = `${BASE_URL}/appointment-availability/get-availability-daily?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`;\r\n\r\n\t\tconst { data } = await axios.get(uri, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_DAILY_AVAILABILITYS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_DAILY_AVAILABILITYS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addDailyAvailabilityAction = (date, stylistId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_DAILY_AVAILABILITYS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/appointment-availability/create-availability-daily?offset=${utcTimeOffset}&stylistId=${stylistId}`, date, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_DAILY_AVAILABILITYS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_DAILY_AVAILABILITYS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addBulkAvailabilityAction = (formData, stylistId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_BULK_AVAILABILITYS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/appointment-availability/create-availability-bulk?offset=-330&stylistId=${stylistId}`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_BULK_AVAILABILITYS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\ttoast.error(err.response.data.message)\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_BULK_AVAILABILITYS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const addDayAvailabilityAction = (date, stylistId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ADD_DAY_AVAILABILITYS_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/appointment-availability/create-availability-day?offset=-330&stylistId=${stylistId}`, date, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_DAY_AVAILABILITYS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_DAY_AVAILABILITYS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n// export const getUnBlockAvailabilitysAction = (formData) => async (dispatch, getState) => {\r\n// \ttry {\r\n// \t\tdispatch({ type: GET_UNBLOCK_AVAILABILITYS_REQUEST });\r\n\r\n// \t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n// \t\tconst config = {\r\n// \t\t\theaders: {\r\n// \t\t\t\ttoken: userInfo.data.token,\r\n// \t\t\t\t'Content-Type': 'application/json'\r\n// \t\t\t}\r\n// \t\t};\r\n\r\n\r\n// \t\tlet uri = `${BASE_URL}/appointment-availability/get-appointment-list-with-block-unblock-status?date=${formData}`;\r\n// \t\t// pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}\r\n\r\n// \t\tif (formData.date) {\r\n// \t\t\turi = uri + '?date=' + formData.date;\r\n// \t\t}\r\n\r\n// \t\tconst { data } = await axios.get(uri, config);\r\n\r\n// \t\tdispatch({\r\n// \t\t\ttype: GET_UNBLOCK_AVAILABILITYS_SUCCESS,\r\n// \t\t\tpayload: data\r\n// \t\t});\r\n// \t} catch (err) {\r\n// \t\tdispatch({\r\n// \t\t\ttype: GET_UNBLOCK_AVAILABILITYS_FAIL,\r\n// \t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n// \t\t});\r\n// \t}\r\n// };\r\n\r\nexport const blockAppointmentAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DEL_BLOCK_AVAILABILITYS_REQUEST })\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet uri = `${BASE_URL}/appointment-availability/block-availability?date=${formData}`;\r\n\r\n\t\tconst { data } = await axios.delete(uri, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DEL_BLOCK_AVAILABILITYS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DEL_BLOCK_AVAILABILITYS_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const getUnBlockAvailabilitysAction = async (data, userLogin) => {\r\n\ttry {\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userLogin.userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn await axios.post(`${BASE_URL}/appointment-availability/get-available-list-by-range`, data, config);\r\n\t} catch (err) {\r\n\t\treturn err\r\n\t}\r\n}\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\DeleteAvailability.js",["2253","2254","2255"],"import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport { deleteAppointmentAction, deleteSlotAction } from \"../../redux/actions/appointmentAction\";\r\nimport moment from \"moment\";\r\n\r\nconst deleteAvailability = ({ data }) => {\r\n  const {\r\n    deleteModalActive,\r\n    setDeleteModalActive,\r\n    handleAddModalClose,\r\n    appointmentId,\r\n    userLogin,\r\n    dispatch,\r\n    appointmentTime\r\n  } = data;\r\n\r\n  const handleDelelteSubmit = () => {\r\n    //dispatch(deleteAppointmentAction(appointmentId));\r\n    dispatch(deleteSlotAction(appointmentId));\r\n    setDeleteModalActive(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal show={deleteModalActive}>\r\n        <ModalHeading\r\n          heading={\"Delete Slot\"}\r\n          onClose={handleAddModalClose}\r\n        />\r\n        <ModalForm style={{ marginBottom: \"2.5rem\" }}>\r\n          <p className=\"modal__text\">\r\n            Are you sure you want to delete the slot on <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format(\"MM-DD-YY\")}</span> &nbsp; at &nbsp;\r\n            <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format('hh:mm A')}</span>\r\n            {\" \"}?\r\n          </p>\r\n          <div style={{ display: \"flex\", gap: \"2rem\" }}>\r\n            <ModalButton\r\n              label=\"Delete\"\r\n              icon={\"delete\"}\r\n              onClick={handleDelelteSubmit}\r\n            />\r\n            <ModalButton\r\n              varient=\"danger\"\r\n              label=\"Cancel\"\r\n              onClick={handleAddModalClose}\r\n            />\r\n          </div>\r\n        </ModalForm>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default deleteAvailability;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\calendarData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddBusinessHoursWeekly.js",["2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267"],"import React, { Fragment, useCallback, useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport AvailabilityStyle from './StylistAvailability.module.css';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addBulkAvailabilityAction } from '../../redux/actions/availabilityActions';\r\nimport { WeekDaysArray } from './calendarData';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport RangeDatePickerModal from './RangeDatePickerModal';\r\n\r\nconst AddBusinessHoursWeekly = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst {\r\n\t\tweekDays,\r\n\t\tgetList,\r\n\t\tsetWeekDays,\r\n\t\tstylistId,\r\n\t\thandleRefresh,\r\n\t\tsetGetlatestData,\r\n\t\taddBuinessHoursModal,\r\n\t\tsetAddBuinessHoursModal,\r\n\t\tbusinessHourDetail,\r\n\t\taddBulkAvailabilitys,\r\n\t\tsetresetHandler,\r\n\t\tresetHandler,\r\n\t\tsetresetslot,\r\n\t\thandleResetSlot,\r\n\t\trecurringType,\r\n\t\tsetRecurringType\r\n\t} = data;\r\n\r\n\tconst [error, setError] = useState(false)\r\n\tconst [showSpinner, setShowSpinner] = useState(false);\r\n\tconst [fromDate, setFromDate] = useState(\r\n\t\tmoment().startOf(\"month\").format(\"MM/DD/YYYY\")\r\n\t  );\r\n\t  const [toDate, setToDate] = useState(\r\n\t\tmoment().endOf(\"month\").format(\"MM/DD/YYYY\")\r\n\t  );\r\n\tconst history = useHistory();\r\n\r\n\r\n\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t}\r\n\r\n\tconst handleChange = (e, mainIndex, index, item) => {\r\n\t\te.preventDefault()\r\n\t\tlet newFormValues = [...weekDays];\r\n\t\tweekDays[mainIndex].slot[index][e.target.name] = e.target.value;\r\n\t\titem[e.target.name] = e.target.value;\r\n\t\tsetWeekDays([...newFormValues]);\r\n\t}\r\n\r\n\tconst addFormFields = (slot) => {\r\n\t\tif (slot) {\r\n\t\t\tslot.push({\r\n\t\t\t\tstartTime: \"\",\r\n\t\t\t\tendTime: \"\"\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetWeekDays([...weekDays])\r\n\t}\r\n\r\n\r\n\tconst removeFormFields = (i, mainIndex, day) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].slot.splice(i, 1);\r\n\t\tsetWeekDays(newFormValues);\r\n\t\tday.slot.splice(i, 1);\r\n\t}\r\n\r\n\tconst copyToAllHandler = (e, slot) => {\r\n\r\n\t\te.preventDefault();\r\n\t\t// const newFormValues = [...weekDays];\r\n\t\t// const dataArray = weekDays[i].slot;\r\n\t\tlet tmpArray = [];\r\n\t\tWeekDaysArray.forEach(element => {\r\n\t\t\ttmpArray.push({ day: element.day, slot: slot },);\r\n\t\t});\r\n\r\n\r\n\t\tsetWeekDays(tmpArray);\r\n\r\n\t\tsetresetHandler(false);\r\n\t}\r\n\r\n\r\n\tconst addBulkAvailabilityHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetShowSpinner(true);\r\n\t\r\n\t\tconst availabilityPayload = {\r\n\t\t\tslots: businessHourDetail ? businessHourDetail.slots : weekDays,\r\n\t\t\tid: businessHourDetail && businessHourDetail._id,\r\n\t\t\trecurringType: recurringType.value, \r\n\t\t};\r\n\t\r\n\t\tif (recurringType.value === 'custom') {\r\n\t\t\tavailabilityPayload.customStartDate = convert(fromDate);\r\n\t\t\tavailabilityPayload.customEndDate = convert(toDate);\r\n\t\t}\r\n\t\r\n\t\tdispatch(addBulkAvailabilityAction(availabilityPayload, stylistId));\r\n\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tgetList();\r\n\t\t\tsetShowSpinner(false);\r\n\t\t\tsetAddBuinessHoursModal(false);\r\n\t\t\tsetRecurringType({ value: 'custom', error: '' })\r\n\t\t\thandleRefresh();\r\n\t\t}, 7000);\r\n\t};\r\n\r\n\r\n\tfunction errorMessageHandler(item, index, day) {\r\n\t\tif (item < (index > 0 && day[index - 1].endTime)) {\r\n\t\t\tsetError(true);\r\n\t\t\treturn \"End Time should be greater than Start Time\"\r\n\t\t} else {\r\n\t\t\tsetError(false);\r\n\t\t\treturn \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAddModalClose = useCallback(() =>{\r\n\t\tsetAddBuinessHoursModal(false);\r\n\t\tsetRecurringType({ value: 'custom', error: '' })\r\n\t},[])\r\n\r\n\treturn (\r\n\t\t<Modal show={addBuinessHoursModal} className={AvailabilityStyle.modal}>\r\n\t\t\t<ModalHeading heading={'Weekly Business Hours'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm onSubmit={(e) => addBulkAvailabilityHandler(e)} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t{showSpinner ? <div className={AvailabilityStyle.slotLoading} >\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t<div className={AvailabilityStyle.slotLoadingTxt}>Unblocking slot. Please wait it may take a while.</div>\r\n\t\t\t\t</div> : null}\r\n\t\t\t\t<div style={{ overflow: 'auto', marginBottom: '2rem' }} className={AvailabilityStyle.businessHoursForm}>\r\n\t\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: 'center' }} >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{recurringType.value === 'custom' && <RangeDatePickerModal\r\n\t\t\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\t\t\tfromDate,\r\n\t\t\t\t\t\t\t\t\ttoDate,\r\n\t\t\t\t\t\t\t\t\tsetFromDate,\r\n\t\t\t\t\t\t\t\t\tsetToDate,\r\n\t\t\t\t\t\t\t\t\t//   datePickerHandler,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ background: 'none', display: \"flex\", justifyContent: \"center\", alignItems: 'center', padding: '20px', marginBottom: '1rem', borderRadius: '1rem' }} >\r\n\t\t\t\t\t\t\t<SelectBox style={{ marginTop: '1rem' }}\r\n\t\t\t\t\t\t\t\tlabel=\"Select Recurring Type\"\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tvalue={recurringType.value}\r\n\t\t\t\t\t\t\t\terrorMessage={recurringType.error}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setRecurringType({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* <option value=\"week\">\r\n\t\t\t\t\t\t\t\t\tWeek\r\n\t\t\t\t\t\t\t\t</option> */}\r\n\t\t\t\t\t\t\t\t<option value=\"custom\">\r\n\t\t\t\t\t\t\t\t\tCustom\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"month\">\r\n\t\t\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t{/* <option value=\"year\">\r\n\t\t\t\t\t\t\t\t\tYear\r\n\t\t\t\t\t\t\t\t</option> */}\r\n\t\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InputsSection style={{ flexDirection: 'column' }}>\r\n\t\t\t\t\t\t{/* {!resetHandler &&<div className={AvailabilityStyle.undoButtonslot}>\r\n\t\t\t\t\t <button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleResetSlot(e)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>Undo</button>\r\n\r\n\t\t\t\t\t</div>} */}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweekDays &&\r\n\t\t\t\t\t\t\tweekDays.length > 0 &&\r\n\t\t\t\t\t\t\tweekDays.map((day, mainIndex) => (\r\n\t\t\t\t\t\t\t\t<Fragment key={mainIndex}>\r\n\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.dayContainer} style={{ alignItems: 'end' }} >\r\n\t\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.day}>\r\n\t\t\t\t\t\t\t\t\t\t\t{day.day}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<InputsSectionColumn style={{ padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tday.slot.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tday.slot.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={mainIndex + index} className={AvailabilityStyle.slotRow}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index == 0 ? 'Start Time' : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='eg, 1:00 PM'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.startTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='startTime'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => handleChange(e, mainIndex, index, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={index > 0 ? day.slot[index - 1].endTime : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={item.startTime < (index > 0 && day.slot[index - 1].endTime) ? \"Start time should be greater than previous End Time\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 style={{ color: \"white\", margin: \"1rem\", paddingTop: \"1rem\" }}>:</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index == 0 ? 'End Time' : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='eg, 2:00 PM'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.endTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='endTime'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => handleChange(e, mainIndex, index, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={index > 0 ? day.slot[index - 1].endTime : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={item.endTime < (index > 0 && day.slot[index - 1].endTime) ? \"End Time should be greater than Start Time\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button style={{ marginTop: index == 0 ? '2rem' : '0rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveFormFields(index, mainIndex, day)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Remove</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.slotRow}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddFormFields(day.slot)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Add Hours</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tday.slot.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.busBtn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddFormFields(day.slot)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Add Hours</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <button className={AvailabilityStyle.copySlot}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcopyToAllHandler(e,day.slot);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>Copy to All</button> */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t</InputsSection>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t<ModalButton\r\n\t\t\t\t\t\tlabel={addBulkAvailabilitys.loading ? \"Please wait...\" : businessHourDetail == null ? \"Add time slot\" : \"Update Business Hours\"}\r\n\t\t\t\t\t\tdisabled={addBulkAvailabilitys.loading ? true : error ? true : false}\r\n\t\t\t\t\t\ticon={addBulkAvailabilitys.loading ? \"\" : businessHourDetail == null ? 'plus' : 'edit'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddBusinessHoursWeekly;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\index.js",["2268"],"import React, { useState } from 'react';\r\n// import Styles  from './SelectBox.css';\r\n\r\nconst SelectBox = ({ children, icon, name, textBoxStyle, label, className, value, onChange, errorMessage, disabled, multiple, style }) => {\r\n\treturn (\r\n\t\t<div className={className ? className : \"form_input\"} >\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className=\"form_input__label\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className=\"textBox\" style={textBoxStyle}>\r\n\t\t\t\t{icon && (\r\n\t\t\t\t\t<label className=\"textBox__label\">\r\n\t\t\t\t\t\t<svg className=\"textBox__label--icon\">\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='textBox__input' style={style}>\r\n\t\t\t\t\t<select multiple={multiple} style={style} disabled={disabled} value={value} name={name} id={name} className='textBox__input--box' onChange={onChange} >\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{errorMessage && <p className=\"form_input__error\">{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\AddAvailability.js",["2269","2270","2271","2272","2273","2274"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MultiSelectBox from '../../components/formInputs/SelectBox/MultiSelectBox';\r\nimport { getAllEnableSubServiceAction } from '../../redux/actions/serviceActions';\r\nimport { GET_ALL_ENABLE_SUB_SERVICE_RESET } from '../../redux/constants/serviceConstants';\r\nimport InputTime from '../../components/formInputs/InputBox/InputTime';\r\nimport { USER_LIST_RESET } from '../../redux/constants/userConstants';\r\nimport { getUserListAction } from '../../redux/actions/userActions';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport StylistSessionStyles from './StylistAvailability.module.css';\r\nconst AddAvailability = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst enableSubServiceList = useSelector((state) => state.enableSubServiceList);\r\n\tconst userList = useSelector((state) => state.userList);\r\n\tconst [serviceList, setServiceList] = useState([]);\r\n\tconst [userDataList, setUserDataList] = useState([]);\r\n\tconst [input, setInput] = useState(\"\");\r\n\r\n\tconst {\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tselectUpdateModel,\r\n\t\tsetSelectUpdateModel,\r\n\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\r\n\t\tnameError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\tsetUserId,\r\n\r\n\t\tsetNameError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\r\n\t\tdate,\r\n\t\tsetDate,\r\n\t\tdateError,\r\n\t\tsetDateError,\r\n\r\n\t\tgender,\r\n\t\tsetGender,\r\n\r\n\t\tstartTime,\r\n\t\tstartTimeError,\r\n\t\tsetStartTime,\r\n\t\tsetStartTimeError,\r\n\r\n\t\trequiredTime,\r\n\t\tsetRequiredTime,\r\n\t\trequiredTimeError,\r\n\t\tsetRequiredTimeError,\r\n\r\n\t\tservice,\r\n\t\tsetService,\r\n\t\tserviceError,\r\n\t\tsetServiceError,\r\n\t\tisUpdate,\r\n\t\thandleUpdateSubmit,\r\n\t\tserviceIds,\r\n\t\tsetServiceIds,\r\n\t\tgenderError, setGenderError\r\n\t} = data;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: USER_LIST_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getAllEnableSubServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SUB_SERVICE_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!serviceList.length) {\r\n\t\t\t\tif (enableSubServiceList &&\r\n\t\t\t\t\tenableSubServiceList.categories &&\r\n\t\t\t\t\tenableSubServiceList.categories.data &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.length > 0) {\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetServiceList(enableSubServiceList.categories.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[enableSubServiceList, serviceList]\r\n\t);\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (enableSubServiceList &&\r\n\t// \t\tenableSubServiceList.categories &&\r\n\t// \t\tenableSubServiceList.categories.data &&\r\n\t// \t\tenableSubServiceList.categories.data.result.length > 0) {\r\n\t// \t\tconst updatedServiceList = enableSubServiceList.categories.data.result.map(item => ({\r\n\t// \t\t\tlabel: item.title,\r\n\t// \t\t\tvalue: item._id\r\n\t// \t\t}));\r\n\t// \t\tsetServiceList(updatedServiceList);\r\n\t// \t}\r\n\t// }, [enableSubServiceList, serviceList]);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!userDataList.length) {\r\n\t\t\t\tif (userList &&\r\n\t\t\t\t\tuserList.userInfo &&\r\n\t\t\t\t\tuserList.userInfo.data &&\r\n\t\t\t\t\tuserList.userInfo.data.result.length > 0) {\r\n\t\t\t\t\tuserList.userInfo.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.name;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetUserDataList(userList.userInfo.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userList, userDataList]\r\n\t);\r\n\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive} className={StylistSessionStyles.container}>\r\n\t\t\t<ModalHeading heading={isUpdate ? 'Update Appointment' : 'Book Appointment'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm style={isUpdate ? { marginBottom: '2.5rem', height: '40rem', overflow: 'auto' } : { marginBottom: '2.5rem', height: '40rem', overflow: 'auto' }}>\r\n\t\t\t\t<InputsSection style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisUpdate ?\r\n\t\t\t\t\t\t\t<InputBox style={{ paddingLeft: \"1rem\" }}\r\n\t\t\t\t\t\t\t\tlabel='Select Date'\r\n\t\t\t\t\t\t\t\ticon='calendar'\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tplaceholder='Appointment Date'\r\n\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\tvalue={convert(date)}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetDate(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetDateError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={dateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<InputBox className={StylistSessionStyles.inputs}\r\n\t\t\t\t\t\t\t\tlabel='Select Date'\r\n\t\t\t\t\t\t\t\ticon='calendar'\r\n\t\t\t\t\t\t\t\tplaceholder='Appointment Date'\r\n\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\tvalue={convert(date)}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetDate(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetDateError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={dateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisUpdate ?\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tstyle={{ fill: \"white\", paddingLeft: '1rem' }}\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, 12:00 PM'\r\n\t\t\t\t\t\t\t\tvalue={startTime}\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetStartTimeError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTimeError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, 12:00 PM'\r\n\t\t\t\t\t\t\t\tvalue={startTime}\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetStartTimeError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTimeError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t<MultiSelectBox style={{ paddingLeft: \"0rem\" }}\r\n\t\t\t\t\t\tlabel='Select Service'\r\n\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\terrorMessage={serviceError}\r\n\t\t\t\t\t\tinputValue={service}\r\n\t\t\t\t\t\tchildren={serviceList}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetRequiredTime(event.requiredTime);\r\n\t\t\t\t\t\t\tsetService(event.title)\r\n\t\t\t\t\t\t\tsetServiceIds({ ...serviceIds, mainServiceId: event._id, subServiceId: event.service._id })\r\n\t\t\t\t\t\t\tsetServiceError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") {\r\n\t\t\t\t\t\t\t\t//setInput(value);\r\n\t\t\t\t\t\t\t\tsetService(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\t\t\t\t\t<InputsSectionColumn style={{ gap: '1rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\t\tlabel='Required Time'\r\n\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\tvalue={requiredTime}\r\n\t\t\t\t\t\t\ttype='Number'\r\n\t\t\t\t\t\t\tstyle={{ padding: '0.2rem 0.5rem', gap: \"1rem\" }}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetRequiredTime(event.target.value);\r\n\t\t\t\t\t\t\t\tsetRequiredTimeError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={requiredTimeError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t\r\n\t\t\t\r\n\r\n\t\t\t\t<InputsSection style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t<MultiSelectBox style={{ paddingLeft: \"0rem\" }}\r\n\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\tlabel='Client Name'\r\n\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.name);\r\n\t\t\t\t\t\t\tsetUserId(event._id)\r\n\t\t\t\t\t\t\tsetGender(event.gender)\r\n\t\t\t\t\t\t\tsetEmail(event.email);\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.phone));\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tchildren={userDataList}\r\n\t\t\t\t\t\tinputValue={name}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") {\r\n\t\t\t\t\t\t\t\t//setInput(value);\r\n\t\t\t\t\t\t\t\tsetName(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\t\t\t\t\t\t{/* <SelectBox className={StylistSessionStyles.input} style={{ marginTop: \"1.4rem\", marginRight: \"0rem\", marginLeft: '0rem' }}\r\n\t\t\t\t\t\tlabel='Client'\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.name);\r\n\t\t\t\t\t\t\tsetUserId(event._id)\r\n\t\t\t\t\t\t\tsetGender(event.gender)\r\n\t\t\t\t\t\t\tsetEmail(event.email);\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.phone));\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t// icon='users'\r\n\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className='optionBox' value=\"\">--Select Client--</option>\r\n\t\t\t\t\t\t{userDataList.map((item) =><option value='male'>{item.name}</option>)}\r\n\t\t\t\t\t</SelectBox> */}\r\n\t\t\t\t\t{/* <InputBox\r\n\t\t\t\t\t\tlabel='Client Name'\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tplaceholder='Jon Doe'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t{/* <InputBox \r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<SelectBox className={StylistSessionStyles.input} style={{ marginTop: \"1.4rem\", marginRight: \"0rem\" }}\r\n\t\t\t\t\t\tlabel='Gender'\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value)\r\n\t\t\t\t\t\t\tsetGenderError('')\r\n\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\ticon='users'\r\n\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className='optionBox' value=\"\">--Select Gender--</option>\r\n\t\t\t\t\t\t<option value='male'>Male</option>\r\n\t\t\t\t\t\t<option value='female'>Female</option>\r\n\t\t\t\t\t\t<option value='other'> Other</option>\r\n\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\ticon='phone'\r\n\t\t\t\t\t\tplaceholder='eg, 123 456 7890'\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* <SelectBox \r\n\t\t\t\t\t\tlabel='Gender'\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value)\r\n\t\t\t\t\t\t\tsetGenderError('')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className='optionBox' value=\"\">--Select Gender--</option>\r\n\t\t\t\t\t\t<option value='male'>Male</option>\r\n\t\t\t\t\t\t<option value='female'>Female</option>\r\n\t\t\t\t\t\t<option value='other'> Other</option>\r\n\t\t\t\t\t</SelectBox> */}\r\n\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t</ModalForm>\r\n\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t<ModalButton label={isUpdate ? 'Update Appointment' : 'Book Now'} icon={isUpdate ? 'edit' : 'plus'} onClick={isUpdate ? handleUpdateSubmit : handleSubmit} />\r\n\t\t\t\t<ModalButton varient='danger' label='Cancel' icon='delete' onClick={handleAddModalClose} />\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddAvailability;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Calender\\Temp.js",["2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\SidebarSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\StylistSidebar.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\SalonSidebar.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Sidebar\\AdminSidebar.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\HeaderSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewPromotionCodeScreen\\CreatePromoCode.js",["2316","2317","2318","2319","2320","2321","2322"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport InputsSection from \"../../components/Modal/InputsSection\";\r\nimport InputBox from \"../../components/formInputs/InputBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SelectBox from \"../../components/formInputs/SelectBox\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport { getAllCouponsAction } from \"../../redux/actions/couponBookBActions\";\r\nimport { GET_ALL_COUPONS_BOOKB_RESET } from \"../../redux/constants/couponBookBConstants\";\r\nimport PromoCodeStyles from \"./PromoCodes.module.css\";\r\n\r\nconst CreatePromoCode = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    promoCode,\r\n    setPromoCode,\r\n    coupon,\r\n    setCoupon,\r\n    createModal,\r\n    setCreateModal,\r\n    handleCreateModal,\r\n    handleCloseModal,\r\n    handleSubmit,\r\n  } = data;\r\n\r\n  const getAllCoupons = useSelector((state) => state.getAllCouponsBookB);\r\n\r\n  return (\r\n    <Modal show={createModal}>\r\n      <ModalHeading heading=\"Add New Promo Code\" onClose={handleCloseModal} />\r\n      <ModalForm>\r\n        <InputsSection>\r\n          <InputBox\r\n            label=\"Promotional Code\"\r\n            icon=\"ticket\"\r\n            placeholder=\"Enter promo code\"\r\n            value={promoCode.value}\r\n            onChange={(e) => setPromoCode({ value: e.target.value })}\r\n            errorMessage={promoCode.error}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <SelectBox\r\n            value={coupon.value}\r\n            onChange={(e) => setCoupon({ value: e.target.value })}\r\n            errorMessage={coupon.error}\r\n            label=\"Product Category\"\r\n            icon=\"archive\"\r\n            name=\"product-category\"\r\n            // style={PromoCodeStyles.SelectLabel}\r\n          >\r\n            <option className=\"optionBox\" value=\"\">\r\n              Select Coupon\r\n            </option>\r\n            {getAllCoupons &&\r\n              getAllCoupons.data &&\r\n              getAllCoupons.data.status &&\r\n              getAllCoupons.data.data &&\r\n              getAllCoupons.data.data.length > 0 &&\r\n              getAllCoupons.data.data.map((res) => (\r\n                <option value={res.id} key={res.id}>\r\n                  {res.name}\r\n                </option>\r\n              ))}\r\n          </SelectBox>\r\n        </InputsSection>\r\n        <ModalButton\r\n          label=\"Add Promo Code\"\r\n          icon=\"plus\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </ModalForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreatePromoCode;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\PromoCodeAction.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\UserScreenSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\couponBookBActions.js",["2323","2324","2325"],"import axios from 'axios';\r\nimport { BASE_URL } from './ip';\r\n\r\nimport {\r\n\tACTIVATE_COUPON_BOOKB_FAIL, ACTIVATE_COUPON_BOOKB_REQUEST, ACTIVATE_COUPON_BOOKB_SUCCESS, ADD_COUPON_BOOKB_FAIL, ADD_COUPON_BOOKB_REQUEST, ADD_COUPON_BOOKB_SUCCESS, DELETE_COUPON_BOOKB_FAIL, DELETE_COUPON_BOOKB_REQUEST, DELETE_COUPON_BOOKB_SUCCESS, GET_ACTIVE_COUPONS_BOOKB_FAIL, GET_ACTIVE_COUPONS_BOOKB_REQUEST, GET_ACTIVE_COUPONS_BOOKB_SUCCESS, GET_ADMIN_COUPONS_BOOKB_FAIL, GET_ADMIN_COUPONS_BOOKB_REQUEST, GET_ADMIN_COUPONS_BOOKB_SUCCESS, GET_ALL_COUPONS_BOOKB_FAIL, GET_ALL_COUPONS_BOOKB_REQUEST,\r\n\tGET_ALL_COUPONS_BOOKB_SUCCESS,\r\n\tVERIFY_COUPON_BOOKB_FAIL,\r\n\tVERIFY_COUPON_BOOKB_REQUEST,\r\n\tVERIFY_COUPON_BOOKB_SUCCESS\r\n} from \"../constants/couponBookBConstants\";\r\n\r\nexport const getAllCouponsAction = () => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ALL_COUPONS_BOOKB_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/coupon`, config);\r\n\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_COUPONS_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_COUPONS_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// export const getAllActiveCouponsAction = () => async (dispatch, getState) => {\r\n\r\n// \ttry {\r\n// \t\tdispatch({ type: GET_ACTIVE_COUPONS_BOOKB_REQUEST });\r\n// \t\tconst { userLogin: { userInfo } } = getState();\r\n// \t\tconst config = {\r\n// \t\t\theaders: {\r\n// \t\t\t\ttoken: userInfo.data.token,\r\n// \t\t\t\t'Content-Type': 'application/json'\r\n// \t\t\t}\r\n// \t\t};\r\n\r\n// \t\tconst { data } = await axios.get(`${BASE_URL}/coupon/get-active-coupon`, config);\r\n\r\n\r\n// \t\tdispatch({\r\n// \t\t\ttype: GET_ACTIVE_COUPONS_BOOKB_SUCCESS,\r\n// \t\t\tpayload: data\r\n// \t\t});\r\n// \t} catch (err) {\r\n// \t\tdispatch({\r\n// \t\t\ttype: GET_ACTIVE_COUPONS_BOOKB_FAIL,\r\n// \t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n// \t\t});\r\n// \t}\r\n// };\r\n\r\nexport const addCouponAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: ADD_COUPON_BOOKB_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/coupon`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COUPON_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COUPON_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const activateCouponAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: ACTIVATE_COUPON_BOOKB_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// const { data } = await axios.patch(`${BASE_URL}/coupon/enable-disable-coupon?couponId=${formData.id}`, formData.enableDisable, config);\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/coupon/${formData.id}`, { name: formData.name }, config);\r\n\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ACTIVATE_COUPON_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ACTIVATE_COUPON_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteCouponAction = (id) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_COUPON_BOOKB_REQUEST });\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/coupon/${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COUPON_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COUPON_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const verifyCouponAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: VERIFY_COUPON_BOOKB_REQUEST });\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/coupon/verify-coupon?code=${formData}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: VERIFY_COUPON_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: VERIFY_COUPON_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getAdminCouponsAction = (formData) => async (dispatch, getState) => {\r\n\r\n\ttry {\r\n\t\tdispatch({ type: GET_ADMIN_COUPONS_BOOKB_REQUEST });\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/coupon/get-coupons-for-on-boarding`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ADMIN_COUPONS_BOOKB_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ADMIN_COUPONS_BOOKB_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\login\\ChangePwdUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\PublicAppointmentSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputsSection1.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\SubscriptionDetail.js",["2326","2327"],"import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport { inputPhoneMasking } from '../../utils/validators'\r\nimport moment from \"moment\"\r\n\r\nconst SubscriptionDetail = ({ data }) => {\r\n    const {\r\n        handleSubscriptionModal,\r\n        handleSubscriptionModalClose,\r\n        subscriptionModal,\r\n        subscriptionInfo\r\n    } = data\r\n\r\n\r\n    return (\r\n        <Modal show={subscriptionModal}>\r\n            <ModalHeading heading=\"Salon Subscription\" onClose={handleSubscriptionModalClose} />\r\n            <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\r\n                <h2>Salon Information</h2>\r\n\r\n                <InputsSection style={{ padding: '3rem 2rem', flexDirection: 'column' }}>\r\n                    <div className='salon_status'>\r\n                        Subscription Status: {subscriptionInfo && subscriptionInfo.subscription && subscriptionInfo.subscription[0] && subscriptionInfo.subscription[0].active ? (\r\n                            <p className='table__status' style={{ width: '8rem', color: '#000' }}>\r\n                                <span>•</span> Active\r\n                            </p>\r\n                        ) : (\r\n                            <p className='table__status_deactive' style={{ width: '8rem', color: '#000' }}>\r\n                                <span>•</span> Deactive\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                    <div className='stylist_box'>\r\n                        <img src={subscriptionInfo && subscriptionInfo.photo\r\n                        } className='stylist_img'></img>\r\n                        <div className='stylist_text'>\r\n                            <span style={{ color: '#000' }}>{subscriptionInfo && subscriptionInfo.name}</span>\r\n                            <p style={{ color: '#000', fontWeight: 499 }}>{subscriptionInfo && subscriptionInfo.email} | {inputPhoneMasking(subscriptionInfo && subscriptionInfo.phone)}</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </InputsSection>\r\n\r\n                <h2>Subscription Details</h2>\r\n                <InputsSection style={{ padding: '3rem 2rem' }}>\r\n                    <div>\r\n                        <span>Start Date: {subscriptionInfo && subscriptionInfo.subscription && subscriptionInfo.subscription[0] && moment(subscriptionInfo.subscription[0].startDate).format('DD-MM-YYYY')}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>End Date:  {subscriptionInfo && subscriptionInfo.subscription && subscriptionInfo.subscription[0] && moment(subscriptionInfo.subscription[0].packageExpiry).format('DD-MM-YYYY')}</span>\r\n                    </div>\r\n\r\n                </InputsSection>\r\n            </ModalForm>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SubscriptionDetail","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\AppointmentDetail.js",["2328","2329"],"import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport { inputPhoneMasking } from '../../utils/validators'\r\n\r\nconst AppointmentDetail = ({ data }) => {\r\n  const {\r\n    handleAppointmentModal,\r\n    handleAppointmentModalClose,\r\n    appointmentModal,\r\n    appointmentInfo\r\n  } = data;\r\n\r\n  return (\r\n    <Modal show={appointmentModal}>\r\n      <ModalHeading heading={`Appointment ${appointmentInfo && appointmentInfo.appointmentId}`} onClose={handleAppointmentModalClose} />\r\n      <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n        <h2>User Information</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem', justifyContent: 'space-between' }}>\r\n          <div>\r\n            <span>Name: {appointmentInfo && appointmentInfo.userName}</span>\r\n          </div>\r\n          <div>\r\n            <span>Email: {appointmentInfo && appointmentInfo.userEmail}</span>\r\n          </div>\r\n          <div>\r\n            <span>Phone: {inputPhoneMasking(appointmentInfo && appointmentInfo.userMobile)}</span>\r\n          </div>\r\n        </InputsSection>\r\n        <h2>Stylist Information</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem' }}>\r\n          {/* <img src={appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.photo\r\n\t\t\t\t\t\t\t\t} className='stylist_img'></img> */}\r\n          <div className='stylist_box'>\r\n            <img src={appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.photo\r\n            } className='stylist_img'></img>\r\n            <div className='stylist_text'>\r\n              <span style={{ color: '#000' }}>{appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.name}</span>\r\n              <p style={{ color: '#000', fontWeight: 499 }}>{appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.email} | {inputPhoneMasking(appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.phone)}</p>\r\n            </div>\r\n          </div>\r\n        </InputsSection>\r\n        <h2>Appointment Details</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem' }}>\r\n          <div>\r\n            <span>Appointment Time: {appointmentInfo && appointmentInfo.timeAsAString}</span>\r\n          </div>\r\n          <div>\r\n            <span>Service: Cut and Shave</span>\r\n          </div>\r\n          <div>\r\n            <span>Subservice: {appointmentInfo && appointmentInfo.subServiceData && appointmentInfo.subServiceData.title}</span>\r\n          </div>\r\n        </InputsSection>\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AppointmentDetail","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\Stylist.js",["2330"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Stylist = ({ data }) => {\r\n    const history = useHistory()\r\n    return (\r\n        <div className='dashboard_box'>\r\n            <p className='dashboard_p'>Stylist</p>\r\n            <div className='stylist_list'>\r\n                {\r\n                    data && data.map((item, id) => (\r\n                        <div key={id + 1} className='stylist_info' onClick={() => history.push(`stylist-sessions/${item && item.stylist && item.stylist._id}/${item && item.stylist && item.stylist.name}`)}>\r\n                            <div style={{ display: 'flex', gap: '2rem', alignItems: 'center' }}>\r\n                                <img src={item && item.stylistData && item.stylistData.photo} className='stylist_img' style={{ width: '5rem', height: '5rem' }}></img>\r\n                                <p className='stylist_text'>{item && item.stylistData && item.stylistData.name}</p>\r\n                            </div>\r\n                            <div className='stylist_count'>\r\n                                Appointments: {item && item.count}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stylist","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\RangeDatePickerModal.js",["2331","2332","2333"],"import React from 'react';\r\n// import InputsSection from '../../components/Modal/InputsSection';\r\nimport TemplateAssignStyles from './TemplateAssign.module.css';\r\n\r\nimport {\r\n\tRangeDatePicker,\r\n\tSingleDatePicker\r\n} from \"react-google-flight-datepicker\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst RangeDatePickerModal = ({ data }) => {\r\n\tconst {\r\n\t\tfromDate,\r\n\t\ttoDate,\r\n\t\tsetFromDate,\r\n\t\tsetToDate,\r\n\t\tdatePickerHandler\r\n\t} = data;\r\n\r\n\r\n\treturn (\r\n\t\t<div className='flex'>\r\n\t\t\t<div style={{ borderRadius:'1rem',marginBottom:'1rem' }}>\r\n\t\t\t\t<div className={TemplateAssignStyles.muscleType}>\r\n\t\t\t\t\t<RangeDatePicker\r\n\t\t\t\t\t\tstartDate={moment(fromDate).format('MM/DD/YYYY')}\r\n\t\t\t\t\t\tendDate={moment(toDate).format('MM/DD/YYYY')}\r\n\t\t\t\t\t\tminDate={new Date(2022, 0, 1)}\r\n\t\t\t\t\t\tstartDatePlaceholder=\"From\"\r\n\t\t\t\t\t\tendDatePlaceholder=\"To\"\r\n\t\t\t\t\t\tdateFormat=\"MM/DD/YYYY\"\r\n\t\t\t\t\t\tmonthFormat=\"MMM YYYY\"\r\n\t\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\t\tsingleCalendar={true}\r\n\t\t\t\t\t\tonChange={(startDate, endDate) => {\r\n\t\t\t\t\t\t\t// setFromDate(moment(startDate).format('MM/DD/YYYY'));\r\n\t\t\t\t\t\t\t// setToDate(moment(endDate).format('MM/DD/YYYY'));  \r\n\t\t\t\t\t\t\tdatePickerHandler(moment(startDate).format('MM/DD/YYYY'), moment(endDate).format('MM/DD/YYYY'));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RangeDatePickerModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\PieChart.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\LineChart.js",["2334"],"import React, { useEffect } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n        drawBorder: false\r\n      },\r\n      ticks: {\r\n        display: true\r\n      }\r\n    },\r\n    y: {\r\n      grid: {\r\n        display: false,\r\n        drawBorder: false\r\n      },\r\n      ticks: {\r\n        display: false\r\n      }\r\n    },\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: false,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Nov', 'Dec'];\r\nfunction getMonth(month) {\r\n  switch (month) {\r\n    case 'Jan': return 1;\r\n    case 'Feb': return 2;\r\n    case 'Mar': return 3;\r\n    case 'Apr': return 4;\r\n    case 'May': return 5;\r\n    case 'Jun': return 6;\r\n    case 'Jul': return 7;\r\n    case 'Aug': return 8;\r\n    case 'Sep': return 9;\r\n    case 'Oct': return 10;\r\n    case 'Nov': return 11;\r\n    case 'Dec': return 12;\r\n    default: break;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst LineChart = ({ currentData,style }) => {\r\n  const dataset = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n  for (var i = 0; i < 12; i++) {\r\n    let dataMonth = getMonth(currentData && currentData[i] && currentData[i]._id)\r\n    if ((currentData && currentData[i] && currentData[i]._id)) {\r\n      dataset[dataMonth - 1] = currentData && currentData[i] && currentData[i].count;\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    // labels:currentData && currentData.map(item=>item._id),\r\n    labels,\r\n    datasets: [\r\n      {\r\n        // data: currentData && currentData.map(item=>item.count),\r\n        data: dataset,\r\n        barPercentage: 0.5,\r\n        backgroundColor: \"#ff9000\",\r\n        borderColor: \"#ff9000\",\r\n        fill: false,\r\n        lineTension: 0.4,\r\n        //  pointRadius: 0,     \r\n        radius: 6,\r\n      },\r\n\r\n    ],\r\n  };\r\n  return (\r\n    <div className='dashboard_box' style={style}>\r\n      <p className='dashboard_p'>Appointments by month</p>\r\n      <Line options={options} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\DasboardCard.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\DashboardCard.js",["2335"],"import React from 'react';\r\nimport SkeletonStyles from './Skeletons.module.css';\r\n\r\nconst DashboardCard = () => {\r\n\tconst data = [ 1, 2, 3 ];\r\n\treturn (\r\n\t\t<div className={SkeletonStyles.cardSkeletons}>\r\n\t\t\t<div className={[ SkeletonStyles.cardSkeleton, SkeletonStyles.skeleton ].join(' ')} />\r\n\t\t\t<div className={[ SkeletonStyles.cardSkeleton1, SkeletonStyles.skeleton ].join(' ')} />\r\n\t\t\t<div className={[ SkeletonStyles.cardSkeleton1, SkeletonStyles.skeleton ].join(' ')} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DashboardCard;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\DashboardScreen\\BarChar.js",["2336"],"import React from 'react'\r\nimport moment from \"moment\"\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\n\r\n\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','November','December'];\r\n\r\n  \r\n  export const options = {\r\n    responsive: true,\r\n    scales: {\r\n        x: {\r\n           grid: {\r\n              display: false\r\n           }\r\n        },\r\n        y: {\r\n           grid: {\r\n              display: false\r\n           }\r\n        }\r\n   },\r\n    plugins: {\r\n      legend: {\r\n        display:false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Bar Chart',\r\n      },\r\n    },\r\n  };\r\n\r\nconst BarChar = ({appointmentData,role}) => {\r\n    const data = {\r\n        labels:role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.salonData  && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item=> moment(item._id).format('MMM Do, h:mm a')),\r\n        datasets: [\r\n          {\r\n            // label: 'Dataset 1',\r\n            data: role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item=>item.count),\r\n            barThickness: 20,\r\n            // maxBarThickness:40,\r\n            // minBarLength: 10,\r\n            backgroundColor: '#ff9000',\r\n          },\r\n          \r\n        ],\r\n      };\r\n    \r\n  return (\r\n    <div className='dashboard_section_2'>\r\n        <p className='dashboard_p'>Number of appointments</p>\r\n        <Bar options={options} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChar","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\AllPackages.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\Inputs\\Input.js",["2337","2338","2339","2340","2341","2342","2343","2344"],"import moment from 'moment';\r\nimport React from 'react';\r\nimport TextBox from './TextBox.module.css';\r\n\r\nconst Input = ({ type, placeholder, value, onChange, errorMessage, label, name, icon, style, disabled, defaultValue, min }) => {\r\n\tconst disableDate = () => {\r\n\t\tvar today, dd, mm, yyyy;\r\n\t\ttoday = new Date();\r\n\t\tdd = today.getDate() + 1;\r\n\t\tmm = today.getMonth() + 1;\r\n\t\tyyyy = today.getFullYear();\r\n\t\treturn yyyy + \"-\" + \"mm\" + \"-\" + dd\r\n\t}\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className={TextBox.form_input__label}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className={TextBox.form_input__container} style={style}>\r\n\t\t\t\t{icon &&\r\n\t\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t</svg>}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={type ? type : 'text'}\r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmin={type === 'date' && moment().format('YYYY-MM-DD') || type === 'time' && min}\r\n\t\t\t\t\tdisabled={disabled ? disabled : false}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tclassName={TextBox.form_input__box}\r\n\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\DeleteSubscription.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\CreateSubscription.js",["2345"],"import React, { Fragment } from 'react'\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport Textareabox from '../../components/formInputs/TextareaBox'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\n\r\nconst CreateSubscription = ({ addPackageModal, data }) => {\r\n    const {\r\n        editPackageModal,\r\n        handleSubsModalClose,\r\n\r\n        name,\r\n        setName,\r\n        nameError,\r\n        setNameError,\r\n\r\n        description,\r\n        setDescription,\r\n        descriptionError,\r\n        setDescriptionError,\r\n\r\n        monthlyPrice,\r\n        setMonthlyPrice,\r\n        monthlyPriceError,\r\n        setMonthlyPriceError,\r\n\r\n        annualPrice,\r\n        setAnnualPrice,\r\n        annualPriceError,\r\n        setAnnualPriceError,\r\n\r\n\r\n        maxCalendar,\r\n        setMaxCalendar,\r\n        maxCalendarError,\r\n        setMaxCalendarError,\r\n\r\n        handleSubmit\r\n    } = data\r\n    return (\r\n        <Modal show={addPackageModal}>\r\n            <ModalHeading heading={editPackageModal.status ? \"Update Subscription\" : 'Add Subscription'} onClose={handleSubsModalClose} />\r\n            <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n                <InputsSection>\r\n                    <InputBox\r\n                        label='Name'\r\n                        icon='user'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(event) => {\r\n                            setName(event.target.value);\r\n                            setNameError('');\r\n                        }}\r\n                        errorMessage={nameError}\r\n                    />\r\n\r\n                    <Textareabox\r\n                        label='Description'\r\n                        icon='user'\r\n                        placeholder='Enter Description'\r\n                        value={description}\r\n                        onChange={(event) => {\r\n                            setDescription(event.target.value);\r\n                            setDescriptionError('');\r\n                        }}\r\n                        errorMessage={descriptionError}\r\n                    />\r\n\r\n                </InputsSection>\r\n                <InputsSection>\r\n\r\n                    <SelectBox\r\n                        name='Maximum Calendars'\r\n                        label='Maximum Calendars'\r\n                        icon=\"calendar\"\r\n                        value={maxCalendar}\r\n                        onChange={(e) => setMaxCalendar(e.target.value)}\r\n                        errorMessage={maxCalendarError}\r\n                    >\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                    </SelectBox>\r\n\r\n                    {\r\n                        !editPackageModal.status &&\r\n                        <Fragment>\r\n                            <InputBox\r\n                                label='Montly Price (in $)'\r\n                                icon='dollar'\r\n                                placeholder='eg 250'\r\n                                value={monthlyPrice}\r\n                                onChange={(event) => {\r\n                                    setMonthlyPrice(event.target.value);\r\n                                    setMonthlyPriceError('');\r\n                                }}\r\n                                errorMessage={monthlyPriceError}\r\n                            />\r\n\r\n                            <InputBox\r\n                                label='Annual Price (in $)'\r\n                                icon='dollar'\r\n                                placeholder='eg 250'\r\n                                value={annualPrice}\r\n                                onChange={(event) => {\r\n                                    setAnnualPrice(event.target.value);\r\n                                    setAnnualPriceError('');\r\n                                }}\r\n                                errorMessage={annualPriceError}\r\n                            />\r\n                        </Fragment>}\r\n                </InputsSection>\r\n                <ModalButton\r\n                    label={editPackageModal.status ? 'Update' : 'Add New'}\r\n                    icon={editPackageModal.status ? 'edit' : 'plus'}\r\n                    onClick={handleSubmit}\r\n                />\r\n            </ModalForm>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateSubscription","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\BookAnAppointmentModal.js",["2346","2347","2348","2349"],"import React, { useState, Fragment } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport moment from 'moment';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport imgGif from '../../components/assets/check-green.gif'\r\n\r\nconst BookAnAppointmentModal = ({ data }) => {\r\n\tconst { modalState, setModalState, name, setName, email, setEmail, phone, setPhone, comments, setComments, info, gender, setGender, handleBookAppointment, dateHour, publicAddAppointment, getUserInfo, userLogin } = data;\r\n\tconst onClose = () => {\r\n\t\tsetName({ value: '', error: '' });\r\n\t\tsetEmail({ value: '', error: '' });\r\n\t\tsetPhone({ value: '', error: '' });\r\n\t\tsetComments({ value: '', error: '' })\r\n\t\tsetGender({ value: '', error: '' })\r\n\t\tsetModalState(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={modalState} style={{background: 'white'}}>\r\n\t\t\t<Fragment>\r\n\t\t\t\t<ModalHeading onClose={onClose} />\r\n\t\t\t\t{\r\n\t\t\t\t\tpublicAddAppointment &&\r\n\t\t\t\t\t\tpublicAddAppointment.session &&\r\n\t\t\t\t\t\tpublicAddAppointment.session.status ?\r\n\t\t\t\t\t\t<div className='thankyou'>\r\n\t\t\t\t\t\t\t<img className='thankyou-img' src={imgGif} />\r\n\t\t\t\t\t\t\t<h1>Thank You!</h1>\r\n\t\t\t\t\t\t\t<p>You booked {info && info.subServiceName} session on {moment(info && info.dateAsAString).format('MMM DD')} at {info && info.timeAsAString}</p>\r\n\t\t\t\t\t\t</div> :\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"popup_heading\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"appointment_header1\">Book an appointment</h1>\r\n\t\t\t\t\t\t\t\t<p className=\"appointment_subheading1\">{`${info && info.subServiceName} at ${moment(info && info.dateAsAString).format('MMM DD')} ${info && info.timeAsAString}`}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuserLogin && !userLogin.userInfo &&\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<ModalForm\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '2.5rem', gap: '2rem', display: 'flex' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Full name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetName({ value: event.target.value });\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={name.error}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)' }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"johndoe@example.com\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetEmail({ value: event.target.value });\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={email.error}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)' }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ModalForm>\r\n\t\t\t\t\t\t\t\t\t<ModalForm style={{ marginBottom: '2.5rem', gap: '2rem', display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"123 456 7890\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetPhone(({ value: inputPhoneMasking(event.target.value) }));\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={phone.error}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)' }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={gender.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetGender({ value: event.target.value })\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={gender.error}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)' }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option disabled value=\"\">--Select Gender--</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value='male'>Male</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value='female'>Female</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value='other'> Other</option>\r\n\t\t\t\t\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t\t\t\t</ModalForm>\r\n\t\t\t\t\t\t\t\t</>}\r\n\t\t\t\t\t\t\t<ModalForm style={{ marginBottom: '2.5rem', gap: '2rem' }}>\r\n\t\t\t\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\t\t\t\t// icon=\"phone\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"additional comments\"\r\n\t\t\t\t\t\t\t\t\tvalue={comments.value}\r\n\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetComments({ value: event.target.value });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\terrorMessage={comments.error}\r\n\t\t\t\t\t\t\t\t\ttextBoxStyle={{ color: 'black' }}\r\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--pure-white)', width: '100%', marginBottom: '2rem' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/* <InputsSectionColumn>\r\n\t\t\t\t\t\t<div className=\"flex\" style={{ gap: '2rem' }}>\r\n\t\t\t\t\t\t\t<TextareaBox\r\n\r\n\t\t\t\t\t\t\t\tplaceholder=\"Additional comments\"\r\n\t\t\t\t\t\t\t\tvalue={comments.value}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetComments({ value: event.target.value });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={comments.error}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InputsSectionColumn> */}\r\n\t\t\t\t\t\t\t\t<h3 style={{ fontWeight: '600', fontSize: '1.5rem' }}>Your current waitlist is &nbsp;<span style={{ color: 'green' }} >{info && info.availableList && info.availableList.length}</span></h3>\r\n\t\t\t\t\t\t\t\t<div className=\"popup_total_outer\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"popup_total\">\r\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"appointment_header1\">Total</h1>\r\n\t\t\t\t\t\t\t\t\t\t{/* <p className=\"appointment_subheading1\">Hair cut</p> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<h1 className=\"appointment_header1\">${info && info.charges}</h1>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<ModalButton label=\"Book an appointment\" icon=\"edit\" onClick={handleBookAppointment} />\r\n\t\t\t\t\t\t\t</ModalForm>\r\n\t\t\t\t\t\t</>}\r\n\r\n\t\t\t</Fragment>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default BookAnAppointmentModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\AddPriceModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\DownloadButton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\AllPackages.js",["2350"],"import React, { Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updatePlanAction, deletePlanAction, createPlanAction } from '../../redux/actions/subscriptionAction';\r\nimport PackagesStyles from './Packages.module.css';\r\nimport AddPriceModal from './AddPriceModal';\r\nimport NoData from '../../website/components/NoData';\r\n\r\nconst PackagesCard = ({\r\n\tpackages,\r\n\tgetPackages,\r\n\tsetEditPackageModal,\r\n\tsetDeletePackageModal,\r\n\tonChangeHandler,\r\n\teditPackageHandler\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [addPlan, setAddPlan] = React.useState({ interval: '', data: {}, status: false });\r\n\tconst [priceValue, setPriceValue] = React.useState({ value: '', error: '' });\r\n\r\n\tconst handleAddPlan = async () => {\r\n\t\tconst formData = {\r\n\t\t\tamount: priceValue.value,\r\n\t\t\tcurrency: 'usd',\r\n\t\t\tinterval: addPlan.interval,\r\n\t\t\tproduct: addPlan.data.id\r\n\t\t};\r\n\t\tconst data = await dispatch(createPlanAction(formData));\r\n\t\tif (data && data.status) {\r\n\t\t\thandleAddPlanModalClose();\r\n\t\t\ttoast.success(data.message);\r\n\t\t\tgetPackages();\r\n\t\t} else {\r\n\t\t\ttoast.error('Something went wrong.');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddPlanModalClose = () => {\r\n\t\tsetAddPlan({ interval: '', data: {}, status: false });\r\n\t\tsetPriceValue({ value: '', error: '' });\r\n\t};\r\n\r\n\tconst togglePriceStatus = async (status, id) => {\r\n\t\tconst data = await dispatch(updatePlanAction(status, id));\r\n\r\n\t\tif (data && data.status) {\r\n\t\t\ttoast.success(data.message);\r\n\t\t\tgetPackages();\r\n\t\t} else {\r\n\t\t\ttoast.error('Something went wrong.');\r\n\t\t}\r\n\t};\r\n\r\n\tconst deletePrice = async (id) => {\r\n\t\tconst data = await dispatch(deletePlanAction(id));\r\n\r\n\t\tif (data && data.status) {\r\n\t\t\ttoast.success(data.message);\r\n\t\t\tgetPackages();\r\n\t\t} else {\r\n\t\t\ttoast.error('Something went wrong.');\r\n\t\t}\r\n\t};\r\n\t;\r\n\treturn (\r\n\t\t<div className={PackagesStyles.pricing_cards}>\r\n\t\t\t{\r\n\t\t\t\tpackages &&\r\n\t\t\t\t\tpackages.data &&\r\n\t\t\t\t\tpackages.data.data &&\r\n\t\t\t\t\tpackages.data.data &&\r\n\t\t\t\t\tpackages.data.data.length > 0 ?\r\n\t\t\t\t\t(packages.data.data.map((data) => (\r\n\t\t\t\t\t\t<div className={PackagesStyles.pricing_card} key={data.id}>\r\n\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_header}>\r\n\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_icon_box}>\r\n\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_icon}>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-subscribe`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<h3 className={PackagesStyles.pricing_card_heading}>{data.name}</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_header} style={{ margin: '2rem 0' }}>\r\n\t\t\t\t\t\t\t\t{data.plans && data.plans.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t{data.plans.map((plan) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_price} key={plan.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>$</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={PackagesStyles.pricing_card_price_amount}>{plan.amount}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>per {plan.interval} </p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={plan.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={plan.active}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttogglePriceStatus(!plan.active, plan.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={PackagesStyles.pricing_card_action_btn_delete}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDeletePackageModal({ data, status: true })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_action_icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.plans.length === 1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={PackagesStyles.pricing_card_add_plan_btn}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAddPlan({ interval: plan.interval === 'month' ? 'year' : 'month', data, status: true })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd {plan.interval === 'month' ? 'annual' : 'monthly'} plan\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={PackagesStyles.pricing_card_add_plan_btn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setAddPlan({ interval: 'month', data, status: true })}>\r\n\t\t\t\t\t\t\t\t\t\tAdd monthly plan\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{data &&\r\n\t\t\t\t\t\t\t\t\tdata.plans &&\r\n\t\t\t\t\t\t\t\t\t(data.plans.length === 0 || data.plans.length === 1) && (\r\n\t\t\t\t\t\t\t\t\t\t<AddPriceModal\r\n\t\t\t\t\t\t\t\t\t\t\tdata={addPlan.data}\r\n\t\t\t\t\t\t\t\t\t\t\taddPlanModal={addPlan.status}\r\n\t\t\t\t\t\t\t\t\t\t\tinterval={addPlan.interval}\r\n\t\t\t\t\t\t\t\t\t\t\tpriceValue={priceValue}\r\n\t\t\t\t\t\t\t\t\t\t\tsetPriceValue={setPriceValue}\r\n\t\t\t\t\t\t\t\t\t\t\thandleAddPlan={handleAddPlan}\r\n\t\t\t\t\t\t\t\t\t\t\thandleAddPlanModalClose={handleAddPlanModalClose}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{data.metadata &&\r\n\t\t\t\t\t\t\t\tdata.metadata.users && (\r\n\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_features}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature_icon_box}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_feature_icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-check`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className={PackagesStyles.pricing_card_feature_text}>{data.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature_icon_box}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_feature_icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className={PackagesStyles.pricing_card_feature_text}>{data.metadata.users} users</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_feature_icon_box}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_feature_icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-calendar`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className={PackagesStyles.pricing_card_feature_text}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.metadata.calendars} Calendar\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className={PackagesStyles.pricing_card_actions}>\r\n\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\t\t\t\t\tchecked={data.active}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tonChangeHandler(data);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={PackagesStyles.pricing_card_action_btn}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetEditPackageModal({ data, status: true })\r\n\t\t\t\t\t\t\t\t\t\teditPackageHandler(data)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_action_icon}>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={PackagesStyles.pricing_card_action_btn_delete}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setDeletePackageModal({ data, status: true })}>\r\n\t\t\t\t\t\t\t\t\t<svg className={PackagesStyles.pricing_card_action_icon}>\r\n\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))) : (\r\n\t\t\t\t\t\t<NoData\r\n\t\t\t\t\t\t\ttitle='No Data Found!'\r\n\t\t\t\t\t\t\tsubName='We could not find any subscription data.'\r\n\t\t\t\t\t\t\theight='40vh'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PackagesCard;\r\n\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\DeleteSubscription.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewSubscriptionScreen\\CreateSubscription.js",["2351"],"import React, { Fragment } from \"react\";\r\nimport InputBox from \"../../components/NewInputBox\";\r\nimport Modal from \"../../components/NewModal\";\r\nimport InputsSection from \"../../components/NewModal/InputsSection\";\r\nimport Textareabox from \"../../components/NewTextareaBox\";\r\nimport ModalForm from \"../../components/NewModal/ModalForm\";\r\nimport ModalHeading from \"../../components/NewModal/ModalHeading\";\r\nimport ModalButton from \"../../components/NewModal/ModalButton\";\r\nimport SelectBox from \"../../components/NewSelectBox/SelectBox\";\r\nimport Styles from \"./Packages.module.css\";\r\n\r\nconst CreateSubscription = ({ addPackageModal, data }) => {\r\n  const {\r\n    editPackageModal,\r\n    handleSubsModalClose,\r\n\r\n    name,\r\n    setName,\r\n    nameError,\r\n    setNameError,\r\n\r\n    description,\r\n    setDescription,\r\n    descriptionError,\r\n    setDescriptionError,\r\n\r\n    monthlyPrice,\r\n    setMonthlyPrice,\r\n    monthlyPriceError,\r\n    setMonthlyPriceError,\r\n\r\n    annualPrice,\r\n    setAnnualPrice,\r\n    annualPriceError,\r\n    setAnnualPriceError,\r\n\r\n    maxCalendar,\r\n    setMaxCalendar,\r\n    maxCalendarError,\r\n    setMaxCalendarError,\r\n\r\n    handleSubmit,\r\n  } = data;\r\n  return (\r\n    <Modal show={addPackageModal}>\r\n      <ModalHeading\r\n        heading={\r\n          editPackageModal.status ? \"Update Subscription\" : \"Add Subscription\"\r\n        }\r\n        onClose={handleSubsModalClose}\r\n      />\r\n      <ModalForm>\r\n        <InputsSection>\r\n          <InputBox\r\n            className={Styles.input}\r\n            label=\"Name\"\r\n            icon=\"user\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(event) => {\r\n              setName(event.target.value);\r\n              setNameError(\"\");\r\n            }}\r\n            errorMessage={nameError}\r\n          />\r\n\r\n          <Textareabox\r\n            className={Styles.textArea}\r\n            style={{ padding: \"2rem 0rem 0rem 0rem\" }}\r\n            label=\"Description\"\r\n            icon=\"user\"\r\n            placeholder=\"Enter Description\"\r\n            value={description}\r\n            onChange={(event) => {\r\n              setDescription(event.target.value);\r\n              setDescriptionError(\"\");\r\n            }}\r\n            errorMessage={descriptionError}\r\n          />\r\n        </InputsSection>\r\n        <InputsSection>\r\n          <SelectBox\r\n            className={Styles.selects}\r\n            style={{ margintop: \"2.5rem\" }}\r\n            name=\"Maximum Calendars\"\r\n            label=\"Maximum Calendars\"\r\n            icon=\"calendar\"\r\n            value={maxCalendar}\r\n            onChange={(e) => setMaxCalendar(e.target.value)}\r\n            errorMessage={maxCalendarError}\r\n          >\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"6\">6</option>\r\n            <option value=\"7\">7</option>\r\n            <option value=\"8\">8</option>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"10\">10</option>\r\n          </SelectBox>\r\n\r\n          {!editPackageModal.status && (\r\n            <Fragment>\r\n              <InputBox\r\n                className={Styles.input}\r\n                label=\"Monthly Price (in $)\"\r\n                icon=\"dollar\"\r\n                placeholder=\"eg 250\"\r\n                value={monthlyPrice}\r\n                onChange={(event) => {\r\n                  setMonthlyPrice(event.target.value);\r\n                  setMonthlyPriceError(\"\");\r\n                }}\r\n                errorMessage={monthlyPriceError}\r\n              />\r\n\r\n              <InputBox\r\n                className={Styles.input}\r\n                label=\"Annual Price (in $)\"\r\n                icon=\"dollar\"\r\n                placeholder=\"eg 250\"\r\n                value={annualPrice}\r\n                onChange={(event) => {\r\n                  setAnnualPrice(event.target.value);\r\n                  setAnnualPriceError(\"\");\r\n                }}\r\n                errorMessage={annualPriceError}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </InputsSection>\r\n        <ModalButton\r\n          label={editPackageModal.status ? \"Update\" : \"Add New\"}\r\n          icon={editPackageModal.status ? \"edit\" : \"plus\"}\r\n          onClick={handleSubmit}\r\n        />\r\n      </ModalForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateSubscription;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\ServiceCard.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\salonStaffActions.js",["2352","2353","2354","2355"],"import axios from 'axios';\r\nimport {\r\n\tSALON_STAFF_REQUEST,\r\n\tSALON_STAFF_SUCCESS,\r\n\tSALON_STAFF_FAIL,\r\n\r\n\tDELETE_SALON_STAFF_SUCCESS,\r\n\tDELETE_SALON_STAFF_REQUEST,\r\n\tDELETE_SALON_STAFF_FAIL,\r\n\r\n\tCREATE_NEW_SALON_STAFF_REQUEST,\r\n\tCREATE_NEW_SALON_STAFF_SUCCESS,\r\n\tCREATE_NEW_SALON_STAFF_FAIL,\r\n\r\n\tUPDATE_SALON_STAFF_REQUEST,\r\n\tUPDATE_SALON_STAFF_RESET,\r\n\tUPDATE_SALON_STAFF_FAIL,\r\n\tUPDATE_SALON_STAFF_SUCCESS,\r\n\tCHANGE_STATUS_SALON_STAFF_REQUEST,\r\n\tCHANGE_STATUS_SALON_STAFF_SUCCESS,\r\n\tCHANGE_STATUS_SALON_STAFF_FAIL\r\n} from '../constants/salonStaffConstants';\r\nimport { BASE_URL } from './ip';\r\n\r\nexport const getSalonStaffListAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: SALON_STAFF_REQUEST });\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`${BASE_URL}/salon-staff/get-salon-staff?pageNumber=${formData.pageNumber}&pageSize=${formData.pageSize}&filterValue=${formData.filter}`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const deleteSalonStaffAction = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: DELETE_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.delete(`${BASE_URL}/salon-staff/delete-salon-staff?salonID=${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const createNewStaffSalonAction = (formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_NEW_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\r\n\t\tconst { data } = await axios.post(`${BASE_URL}/salon-staff/create-salon-staff`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_NEW_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const changeStatusSalonStaffAction = (id, formData) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: CHANGE_STATUS_SALON_STAFF_REQUEST });\r\n\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\ttoken: userInfo.data.token,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tconst { data } = await axios.patch(`${BASE_URL}/salon-staff/enable-disable-salon-staff?userID=${id}`, formData, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_STAFF_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: CHANGE_STATUS_SALON_STAFF_FAIL,\r\n\t\t\tpayload: err.response && err.response.data.message ? err.response.data.message : err.message\r\n\t\t});\r\n\t}\r\n};","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\CreateSalonStaffUser.js",["2356","2357"],"import React from 'react';\r\nimport Modal from '../../components/NewModal';\r\nimport ModalHeading from '../../components/NewModal/ModalHeading';\r\nimport ModalForm from '../../components/NewModal/ModalForm';\r\nimport InputsSection from '../../components/NewModal/InputsSection';\r\nimport InputsSectionColumn from '../../components/NewModal/InputsSectionColumn';\r\nimport InputBox from '../../components/NewInputBox';\r\nimport ModalButton from '../../components/NewModal/ModalButton';\r\nimport SelectBox from '../../components/NewSelectBox';\r\nimport { useSelector } from 'react-redux';\r\nimport TextareaBox from '../../components/NewTextareaBox';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport Styles from './SalonStaff.module.css'\r\n\r\nconst CreateSalonStaffUser = ({ data }) => {\r\n\tconst userData = useSelector((state) => state.getUserInfo);\r\n\r\n\tconst {\r\n\t\tshowAddModal,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\t\taddress,\r\n\t\trole,\r\n\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\t\tsetRole,\r\n\t\tsetAddress,\r\n\r\n\t\tnameError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\taddressError,\r\n\t\troleError,\r\n\r\n\t\tsetRoleError,\r\n\t\tsetNameError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\t\tsetAddressError,\r\n\r\n\t\tpassword,\r\n\t\tsetPassword,\r\n\t\tpasswordError,\r\n\t\tsetPasswordError,\r\n\r\n\t\tsalonId,\r\n\t\tsetSalonId,\r\n\t\tsalonError,\r\n\t\tsetSalonIdError,\r\n\r\n\t\tsalonList,\r\n\t\troleList,\r\n\t\tselectUpdateModel\r\n\t} = data;\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading heading={selectUpdateModel._id ? 'Update Staff' : 'Add New Staff'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm\r\n\t\t\t\tclassName={Styles.form}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\tstyle={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='User Name'\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tplaceholder='eg, John Doe'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\ticon='phone'\r\n\t\t\t\t\t\tplaceholder='eg, 123 456 7890'\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<div className='flex' style={{ gap: '2rem', alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t{userData &&\r\n\t\t\t\t\t\t\tuserData.userInfo &&\r\n\t\t\t\t\t\t\tuserData.userInfo.data &&\r\n\t\t\t\t\t\t\tuserData.userInfo.data.role === 'admin' && (\r\n\t\t\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\t\t\tclassName={Styles.selectBox}\r\n\t\t\t\t\t\t\t\t\tdisabled={selectUpdateModel._id ? true : false}\r\n\t\t\t\t\t\t\t\t\tvalue={salonId}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSalonId(e.target.value)}\r\n\t\t\t\t\t\t\t\t\terrorMessage={salonError}\r\n\t\t\t\t\t\t\t\t\tlabel='Select Salon'\r\n\t\t\t\t\t\t\t\t\ticon='salon'\r\n\t\t\t\t\t\t\t\t\tname='salon-name'>\r\n\t\t\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\t\t\tSelect Salon\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t{salonList &&\r\n\t\t\t\t\t\t\t\t\t\tsalonList.userInfo &&\r\n\t\t\t\t\t\t\t\t\t\tsalonList.userInfo.data &&\r\n\t\t\t\t\t\t\t\t\t\tsalonList.userInfo.data.result.map((salon, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={salon._id} key={salon._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{salon.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\tclassName={Styles.selectBox}\r\n\t\t\t\t\t\t\tvalue={role}\r\n\t\t\t\t\t\t\tdisabled={selectUpdateModel._id ? true : false}\r\n\t\t\t\t\t\t\tonChange={(e) => setRole(e.target.value)}\r\n\t\t\t\t\t\t\terrorMessage={roleError}\r\n\t\t\t\t\t\t\tlabel='Select Role'\r\n\t\t\t\t\t\t\ticon='stylist'\r\n\t\t\t\t\t\t\tname='role-name'>\r\n\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\tSelect Role\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{roleList &&\r\n\t\t\t\t\t\t\t\troleList.map((role) => (\r\n\t\t\t\t\t\t\t\t\t<option value={role.value} key={role._id}>\r\n\t\t\t\t\t\t\t\t\t\t{role.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t\t\t{!selectUpdateModel._id && (\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t\tplaceholder='••••••••••••••••'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetPassword(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetPasswordError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={passwordError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\tclassName={Styles.textArea}\r\n\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\ticon='pin'\r\n\t\t\t\t\t\tplaceholder='Enter Address'\r\n\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetAddress(event.target.value);\r\n\t\t\t\t\t\t\tsetAddressError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={addressError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSectionColumn>\r\n\r\n\t\t\t\t<ModalButton\r\n\t\t\t\t\tlabel={selectUpdateModel._id ? 'Update Staff' : 'Add New'}\r\n\t\t\t\t\ticon={selectUpdateModel._id ? 'edit' : 'plus'}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateSalonStaffUser;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\DeleteSalonUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonStaffScreen\\SalonStaffData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\LogOutUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\SendMessage.js",["2358","2359","2360","2361","2362"],"import React from 'react'\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/NewModal'\r\nimport InputsSection from '../../components/NewModal/InputsSection'\r\nimport ModalForm from '../../components/NewModal/ModalForm'\r\nimport ModalHeading from '../../components/NewModal/ModalHeading'\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport ModalButton from '../../components/NewModal/ModalButton'\r\n\r\nconst SendMessage = ({ data }) => {\r\n  const { messageHead, setMessageHead, messageTitle, setMessageTitle, messageError, messageTitleError, handleMessageClose, sendMessageModal, setSendMessageModal, handleMessageSubmit } = data\r\n  return (\r\n    <Modal show={sendMessageModal}>\r\n      <ModalHeading heading='Send Message' onClose={handleMessageClose} />\r\n      <ModalForm>\r\n        {/* <InputsSection>\r\n        <InputBox\r\n        label=\"Title\"\r\n        onChange={(e)=>setMessageTitle(e.target.value)}\r\n        value={messageTitle}\r\n        errorMessage={messageTitleError}\r\n        />\r\n    </InputsSection> */}\r\n        <InputsSection style={{\r\n          display: 'block',\r\n          backgroundColor: '#353434b5'\r\n        }}>\r\n          <TextareaBox\r\n            textBoxStyle={{ resize: 'none', overflowY: 'hidden', paddingRight: '1rem' }}\r\n            style={{\r\n              width: '90%',\r\n              height: '10rem',\r\n              backgroundColor: 'transparent',\r\n            }}\r\n            onChange={(e) => setMessageHead(e.target.value)}\r\n            value={messageHead}\r\n            errorMessage={messageError}\r\n            placeholder=\"Type message\"\r\n          />\r\n        </InputsSection>\r\n        <ModalButton\r\n          label='Send Message'\r\n          icon='message'\r\n          onClick={handleMessageSubmit}\r\n        />/\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SendMessage","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\AddNotes.js",["2363","2364","2365","2366"],"import React, { useEffect, useState } from 'react';\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AddNotes = ({ data, id }) => {\r\n  const { _id, addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit } = data\r\n  const getUserInfo = useSelector((state) => state.getUserInfo);\r\n\r\n  return (\r\n    <Modal show={addNotesModal}>\r\n      <ModalHeading heading={notes ? 'Update Notes' : 'Add Notes'} onClose={handleAddNotesModalClose} />\r\n      <ModalForm>\r\n        <InputsSection>\r\n          <TextareaBox\r\n            style={\r\n              { resize: 'none', height: '12rem' }\r\n            }\r\n            label=\"Notes\"\r\n            onChange={(e) => setNotes(e.target.value)}\r\n            value={notes}\r\n            errorMessage={notesError}\r\n          />\r\n\r\n        </InputsSection>\r\n        <ModalButton\r\n          label={notes ? 'Update Notes' : 'Add Notes'}\r\n          icon='plus'\r\n          onClick={(e) => handleNotesSubmit(e,_id)}\r\n        />\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNotes","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\SelectInput.js",["2367"],"import React, { useState } from 'react';\r\nimport './SelectBox.css';\r\n\r\nconst SelectInput = ({ children, icon, name, label, value, onChange, errorMessage, disabled, multiple }) => {\r\n\treturn (\r\n\t\t<div className='form_input'>\r\n\t\t\t<div className='textBox__input' style={{width: '10rem'}}>\r\n\t\t\t\t<select multiple={multiple} disabled={disabled} value={value} name={name} id={name} style={{ marginLeft: '0rem'  }} className='textBox__input--box' onChange={onChange}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</select>\r\n\t\t\t</div> \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectInput;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\CreateUser.js",["2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380"],"import React from 'react';\r\nimport Modal from '../../components/NewModal';\r\nimport ModalHeading from '../../components/NewModal/ModalHeading';\r\nimport ModalForm from '../../components/NewModal/ModalForm';\r\nimport InputsSection from '../../components/NewModal/InputsSection';\r\nimport InputsSectionColumn from '../../components/NewModal/InputsSectionColumn';\r\nimport InputBox from '../../components/NewInputBox';\r\nimport ModalButton from '../../components/NewModal/ModalButton';\r\nimport RadioButtons from '../../components/NewRadioButton/RadioButtons';\r\nimport SelectBox from '../../components/NewSelectBox';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport TextareaBox from '../../components/NewTextareaBox';\r\nimport { useSelector } from 'react-redux';\r\nimport Styles from './Users.module.css'\r\n\r\nconst CreateUser = ({ data }) => {\r\n\tconst {\r\n\t\tshowAddModal,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\t\tgender,\r\n\t\tsetGender,\r\n\t\tsetGenderError,\r\n\t\tgenderError,\r\n\t\t// dob,\r\n\t\t// dobError,\r\n\t\t// setDOB,\r\n\t\t// setDOBError,\r\n\t\t// age,\r\n\t\t// setAge,\r\n\t\t// setAgeError,\r\n\t\t// ageError,\r\n\t\tstylist,\r\n\t\tsetStylist,\r\n\t\tsetStylistNameError,\r\n\t\tstylistNameError,\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\t\tnameError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\tsetNameError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\r\n\t\tstylistList,\r\n\t\tselectUpdateModelUser,\r\n\t\tsetSelectUpdateModelUser,\r\n\t\tnotes, setNotes, notesError\r\n\t} = data;\r\n\r\n\tconst userRole = useSelector((state) => state.getUserInfo);\r\n\t// console.log(userRole , \"userRole\");\r\n\r\n\tconst onChangeContentType = (e) => {\r\n\t\tsetGenderError('');\r\n\t\tsetGender(e.target.value);\r\n\t};\r\n\r\n\tconst getAge = (birthDateString) => {\r\n\t\tconst today = new Date();\r\n\t\tconst birthDate = new Date(birthDateString);\r\n\r\n\t\tconst yearsDifference = today.getFullYear() - birthDate.getFullYear();\r\n\r\n\t\tif (\r\n\t\t\ttoday.getMonth() < birthDate.getMonth() ||\r\n\t\t\t(today.getMonth() === birthDate.getMonth() && today.getDate() < birthDate.getDate())\r\n\t\t) {\r\n\t\t\treturn yearsDifference - 1;\r\n\t\t}\r\n\r\n\t\treturn yearsDifference;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={selectUpdateModelUser._id ? 'Update User' : 'Add New User'}\r\n\t\t\t\tonClose={handleAddModalClose}\r\n\t\t\t/>\r\n\t\t\t<ModalForm onSubmit={handleSubmit} >\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\tplaceholder=\"eg, John Doe\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ticon=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"eg, johndoe@example.com\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tclassName={Styles.input}\r\n\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\tplaceholder=\"eg, 123 456 7890\"\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<div className=\"flex\" style={{ gap: '2rem' }}>\r\n\t\t\t\t\t\t<RadioButtons style={{ marginTop: \"5rem\" }}\r\n\t\t\t\t\t\t\tlabel=\"Gender\"\r\n\t\t\t\t\t\t\tplaceholder=\"Gender\"\r\n\t\t\t\t\t\t\tradioButtons={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Male',\r\n\t\t\t\t\t\t\t\t\tvalue: 'male'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Female',\r\n\t\t\t\t\t\t\t\t\tvalue: 'female'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tchecked={gender}\r\n\t\t\t\t\t\t\tonChange={onChangeContentType}\r\n\t\t\t\t\t\t\terror={genderError}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tlabel='Date of Birth'\r\n\t\t\t\t\t\t\ticon='birthday-cake'\r\n\t\t\t\t\t\t\tplaceholder='Age'\r\n\t\t\t\t\t\t\tvalue={dob}\r\n\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetAge(getAge(dob));\r\n\t\t\t\t\t\t\t\tsetDOB(event.target.value);\r\n\t\t\t\t\t\t\t\tsetDOBError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={dobError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t <SelectBox\r\n\t\t\t\t\t\t\tlabel='Salon Name'\r\n\t\t\t\t\t\t\ticon='salon'\r\n\t\t\t\t\t\t\tname='salon-name'\r\n\t\t\t\t\t\t\tvalue={salon_name}\r\n\t\t\t\t\t\t\tonChange={(e) => setSalonName(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value=''>Select Salon</option>\r\n\t\t\t\t\t\t\t{salonList &&\r\n\t\t\t\t\t\t\t\tsalonList.data &&\r\n\t\t\t\t\t\t\t\tsalonList.data.map((salon) => (\r\n\t\t\t\t\t\t\t\t\t<option value={salon._id} key={salon._id}>\r\n\t\t\t\t\t\t\t\t\t\t{salon.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox> */}\r\n\r\n\t\t\t\t\t\t{/* <SelectBox\r\n\t\t\t\t\t\t// style={{paddingTop:\"2rem\"}}\r\n\t\t\t\t\t\t\tvalue={stylist}\r\n\t\t\t\t\t\t\tonChange={(e) => setStylist(e.target.value)}\r\n\t\t\t\t\t\t\tlabel=\"Select Stylist name\"\r\n\t\t\t\t\t\t\ticon=\"stylist\"\r\n\t\t\t\t\t\t\tname=\"stylist-name\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option className=\"optionBox\" value=\"\">\r\n\t\t\t\t\t\t\t\tSelect Stylist\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{stylistList &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.status &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.data.result.length > 0 &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.data.result.map((stylist) => (\r\n\t\t\t\t\t\t\t\t\t<option value={stylist._id} key={stylist._id}>\r\n\t\t\t\t\t\t\t\t\t\t{stylist.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox> */}\r\n\t\t\t\t\t\t{/* {userRole?.userInfo?.data.role === 'salon' && (\r\n\t\t\t\t\t\t\t< TextareaBox\r\n\t\t\t\t\t\t\t\tlabel=\"Notes\"\r\n\t\t\t\t\t\t\t\tstyle={{ height: '8rem', backgroundColor: \"#353434b5\", marginTop: \"0rem\" }}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNotes(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={notes}\r\n\t\t\t\t\t\t\t\terrorMessage={notesError}\r\n\t\t\t\t\t\t\t\tplaceholder='notes..'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSectionColumn>\r\n\r\n\t\t\t\t<ModalButton\r\n\t\t\t\t\tlabel={selectUpdateModelUser._id ? 'Update User' : 'Add New'}\r\n\t\t\t\t\ticon={selectUpdateModelUser._id ? 'edit' : 'plus'}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateUser;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\DeleteUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewUsersScreen\\UsersData.js",["2381","2382"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\SalonBarChar.js",["2383"],"import React from 'react'\r\nimport moment from \"moment\"\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\n\r\n\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','November','December'];\r\n\r\n  const createGradient = (context) => {\r\n    const gradient = context.chart.ctx.createLinearGradient(120, 120, 180, 300);\r\n    gradient.addColorStop(0, '#ff9000');  // Start color\r\n    return gradient;\r\n  };\r\n\r\n  export const options = {\r\n    responsive: true,\r\n    scales: {\r\n        x: {\r\n           grid: {\r\n              display: false,\r\n              color: 'white'\r\n           }\r\n        },\r\n        y: {\r\n           grid: {\r\n            color: '#ffffff1c',\r\n            margin: '1rem'\r\n           }\r\n        }\r\n   },\r\n    plugins: {\r\n      legend: {\r\n        display:false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Bar Chart',\r\n      },\r\n    },\r\n  };\r\n\r\nconst SalonBarChar = ({appointmentData,role}) => {\r\n    const data = {\r\n        labels:role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.salonData  && item.salonData.name) : appointmentData && appointmentData.appointmentChart.map(item=> moment(item._id).format('MMM Do, h:mm a')),\r\n        datasets: [\r\n          {\r\n            // label: 'Dataset 1',\r\n            data: role===\"admin\"?appointmentData && appointmentData.map(item=>item && item.appointmentCount) : appointmentData && appointmentData.appointmentChart.map(item=>item.count),\r\n            barThickness: 20,\r\n            // maxBarThickness:40,\r\n            // minBarLength: 10,\r\n            backgroundColor: (context) => createGradient(context),\r\n            borderWidth: 1,\r\n            borderColor: 'white',\r\n\r\n          },\r\n          \r\n        ],\r\n      };\r\n    \r\n  return (\r\n    <div className='dashboard_section_2_1'>\r\n        <p className='dashboard_p'>Number of appointments</p>\r\n        <Bar options={options} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalonBarChar","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\SubscriptionDetail.js",["2384","2385","2386"],"import React from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport InputsSection from \"../../components/Modal/InputsSection\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport { inputPhoneMasking } from \"../../utils/validators\";\r\nimport \"./Dashboard.css\";\r\nimport moment from \"moment\";\r\nimport Styles from \"./Dashboard.css\";\r\n\r\nconst SubscriptionDetail = ({ data }) => {\r\n  const {\r\n    handleSubscriptionModal,\r\n    handleSubscriptionModalClose,\r\n    subscriptionModal,\r\n    subscriptionInfo,\r\n  } = data;\r\n\r\n  return (\r\n    <Modal show={subscriptionModal}>\r\n      <ModalHeading\r\n        heading=\"Salon Subscription\"\r\n        onClose={handleSubscriptionModalClose}\r\n      />\r\n      <ModalForm style={{ marginBottom: \"2.5rem\" }}>\r\n        <h2\r\n          style={{\r\n            color: \"#ffffff\",\r\n            fontWeight: \"500\",\r\n            marginBottom: \"1rem\",\r\n          }}\r\n        >\r\n          Salon Information\r\n        </h2>\r\n\r\n        <InputsSection\r\n          style={{ padding: \"3rem 2rem\", flexDirection: \"column\" }}\r\n        >\r\n          <div\r\n            className=\"salon_status\"\r\n            style={{ color: \"white \", alignItems: \"flex-start\" }}\r\n          >\r\n            Subscription Status:{\" \"}\r\n            {subscriptionInfo &&\r\n            subscriptionInfo.subscription &&\r\n            subscriptionInfo.subscription[0] &&\r\n            subscriptionInfo.subscription[0].active ? (\r\n              <p className=\"table__status\" style={{ width: \"8rem\" }}>\r\n                <span>•</span> Active\r\n              </p>\r\n            ) : (\r\n              <p\r\n                className=\"table__status_deactive\"\r\n                style={{ width: \"8rem\", color: \"#ffffff\" }}\r\n              >\r\n                <span>•</span> Deactive\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"stylist_box\">\r\n            <img\r\n              src={subscriptionInfo && subscriptionInfo.photo}\r\n              className=\"stylist_img\"\r\n            ></img>\r\n            <div className=\"stylist_text\">\r\n              <span>{subscriptionInfo && subscriptionInfo.name}</span>\r\n              <p style={{ fontWeight: 499 }}>\r\n                {subscriptionInfo && subscriptionInfo.email} |{\" \"}\r\n                {inputPhoneMasking(subscriptionInfo && subscriptionInfo.phone)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </InputsSection>\r\n\r\n        <h2\r\n          style={{ color: \"#ffffff\", fontWeight: \"500\", marginBottom: \"1rem\" }}\r\n        >\r\n          Subscription Details\r\n        </h2>\r\n        <InputsSection style={{ padding: \"3rem 2rem\" }}>\r\n          <div>\r\n            <span style={{ color: \"#ffffff\" }}>\r\n              Start Date:{\" \"}\r\n              {subscriptionInfo &&\r\n                subscriptionInfo.subscription &&\r\n                subscriptionInfo.subscription[0] &&\r\n                moment(subscriptionInfo.subscription[0].startDate).format(\r\n                  \"DD-MM-YYYY\"\r\n                )}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span style={{ color: \"#ffffff\" }}>\r\n              End Date:{\" \"}\r\n              {subscriptionInfo &&\r\n                subscriptionInfo.subscription &&\r\n                subscriptionInfo.subscription[0] &&\r\n                moment(subscriptionInfo.subscription[0].packageExpiry).format(\r\n                  \"DD-MM-YYYY\"\r\n                )}\r\n            </span>\r\n          </div>\r\n        </InputsSection>\r\n      </ModalForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SubscriptionDetail;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\AppointmentDetail.js",["2387","2388","2389"],"import React from 'react'\r\nimport Modal from '../../components/NewModal'\r\nimport InputsSection from '../../components/NewModal/InputsSection'\r\nimport ModalForm from '../../components/NewModal/ModalForm'\r\nimport ModalHeading from '../../components/NewModal/ModalHeading'\r\nimport { inputPhoneMasking } from '../../utils/validators'\r\nimport styles from \"./Dashboard.css\"\r\n\r\nconst AppointmentDetail = ({ data }) => {\r\n  const {\r\n    handleAppointmentModal,\r\n    handleAppointmentModalClose,\r\n    appointmentModal,\r\n    appointmentInfo\r\n  } = data;\r\n\r\n  return (\r\n    <Modal show={appointmentModal}>\r\n      <ModalHeading heading={`Appointment ${appointmentInfo && appointmentInfo.appointmentId}`} onClose={handleAppointmentModalClose} />\r\n      <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n        <h2 style={{ color: \"white\", marginLeft: '1rem', marginBottom: '1rem', fontWeight: 500 }}>User Information</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem', justifyContent: 'space-between', color: \"white\" }}>\r\n          <div>\r\n            <span>Name: {appointmentInfo && appointmentInfo.userName}</span>\r\n          </div>\r\n          <div>\r\n            <span>Email: {appointmentInfo && appointmentInfo.userEmail}</span>\r\n          </div>\r\n          <div>\r\n            <span>Phone: {inputPhoneMasking(appointmentInfo && appointmentInfo?.userData && appointmentInfo.userData.phone)}</span>\r\n          </div>\r\n        </InputsSection>\r\n        <h2 style={{ color: \"white\", marginLeft: '1rem', marginBottom: '1rem', fontWeight: 500 }}>Stylist Information</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem' }}>\r\n          {/* <img src={appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.photo\r\n\t\t\t\t\t\t\t\t} className='stylist_img'></img> */}\r\n          <div className='stylist_box'>\r\n            <img src={appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.photo\r\n            } className='stylist_img'></img>\r\n            <div className='stylist_text'>\r\n              <span style={{ color: 'white', fontSize: '1.3rem', fontWeight: 500 }}>{appointmentInfo && appointmentInfo.stylistData && appointmentInfo.stylistData.name}</span>\r\n             <div style={{display: 'flex', gap: '2rem'}}>\r\n              <p style={{ color: 'white', fontWeight: 500 }}>\r\n                {appointmentInfo &&\r\n                  appointmentInfo.stylistData &&\r\n                  appointmentInfo.stylistData.email}  \r\n                </p>\r\n              <p style={{ color: 'white', fontWeight: 500 }}>\r\n              {inputPhoneMasking(appointmentInfo &&\r\n                  appointmentInfo.stylistData &&\r\n                  appointmentInfo.stylistData.phone\r\n                )} \r\n                </p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </InputsSection>\r\n        <h2 style={{ color: \"white\", marginLeft: '1rem', marginBottom: '1rem', fontWeight: 500 }}>Appointment Details</h2>\r\n        <InputsSection style={{ padding: '3rem 2rem', color: \"white\" }}>\r\n          <div>\r\n            <span>Appointment Time: {appointmentInfo && appointmentInfo.timeAsAString}</span>\r\n          </div>\r\n          <div>\r\n            <span>Service: Cut and Shave</span>\r\n          </div>\r\n          <div>\r\n            <span>Category: {appointmentInfo &&\r\n              appointmentInfo.subServiceData &&\r\n              appointmentInfo.subServiceData.title}\r\n            </span>\r\n          </div>\r\n        </InputsSection>\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AppointmentDetail","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\RangeDatePickerModal.js",["2390","2391","2392"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\Stylist.js",["2393"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Stylist = ({ data }) => {\r\n    const history = useHistory()\r\n    return (\r\n        <div className='dashboard_box'>\r\n            <p className='dashboard_p'>Stylist</p>\r\n            <div className='stylist_list'>\r\n                {\r\n                    data &&\r\n                    data.length > 0 ?\r\n                    \r\n                    data && data.map((item, id) => (\r\n                    <div key={id + 1} className='stylist_info' onClick={() => history.push(`stylist-sessions/${item && item.stylistData && item.stylistData._id}/${item && item.stylistData && item.stylistData.name}`)}>\r\n                            <div style={{ display: 'flex', gap: '2rem', alignItems: 'center' }}>\r\n                                <img \r\n                                src={item && item.stylistData && item.stylistData.photo} \r\n                                className='stylist_img' style={{ width: '5rem', height: '5rem' }}\r\n                                />\r\n                                <p className='stylist_text'>{item && item.stylistData && item.stylistData.name}</p>\r\n                            </div>\r\n                            <div className='stylist_count'>\r\n                                Appointments: {item && item.count}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                    :\r\n                    <span className='dashboard_span'>No appointments to show</span>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stylist","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\LineChart.js",["2394"],"import React, { useEffect } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      grid: {\r\n        display: true,\r\n        color: '#4d4d4d4f', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false,\r\n        borderDash: []\r\n      },\r\n      ticks: {\r\n        display: true,\r\n        color: 'white', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false\r\n      }\r\n    },\r\n    y: {\r\n      grid: {\r\n        display: true,\r\n        drawBorder: false,\r\n        color: '#4d4d4d4f', \r\n        borderDash: []\r\n      },\r\n      ticks: {\r\n        display: true,\r\n        color: 'white', // Change this to the desired color (e.g., red with 20% opacity)\r\n        drawBorder: false,\r\n        stepSize: 1\r\n      }\r\n    },\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: false,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Nov', 'Dec'];\r\nfunction getMonth(month) {\r\n  switch (month) {\r\n    case 'Jan': return 1;\r\n    case 'Feb': return 2;\r\n    case 'Mar': return 3;\r\n    case 'Apr': return 4;\r\n    case 'May': return 5;\r\n    case 'Jun': return 6;\r\n    case 'Jul': return 7;\r\n    case 'Aug': return 8;\r\n    case 'Sep': return 9;\r\n    case 'Oct': return 10;\r\n    case 'Nov': return 11;\r\n    case 'Dec': return 12;\r\n    default: break;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst LineChart = ({ currentData,style }) => {\r\n  const dataset = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n  for (var i = 0; i < 12; i++) {\r\n    let dataMonth = getMonth(currentData && currentData[i] && currentData[i]._id)\r\n    if ((currentData && currentData[i] && currentData[i]._id)) {\r\n      dataset[dataMonth - 1] = currentData && currentData[i] && currentData[i].count;\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    // labels:currentData && currentData.map(item=>item._id),\r\n    labels,\r\n    datasets: [\r\n      {\r\n        // data: currentData && currentData.map(item=>item.count),\r\n        data: dataset,\r\n        barPercentage: 0.5,\r\n        backgroundColor: \"#ff9000\",\r\n        borderColor: \"#ff9000\",\r\n        fill: false,\r\n        lineTension: 0.4,\r\n        //  pointRadius: 0,     \r\n        radius: 6,\r\n      },\r\n\r\n    ],\r\n  };\r\n  return (\r\n    <div className='dashboard_box' style={style}>\r\n      <p className='dashboard_p' style={{marginBottom: '1.2rem'}}>Appointments by month</p>\r\n      <Line options={options} data={data} style={{height: '2rem'}} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\DasboardCard.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\PieChart.js",["2395","2396","2397"],"import React, { useMemo } from 'react'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Styles from './NewStyles.module.css'\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nexport const config = {\r\n\r\n  plugins: {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Line Chart',\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'right',\r\n      align: 'center',\r\n      labels: {\r\n        font: {\r\n          size: 18\r\n        }\r\n      }\r\n    }\r\n  },\r\n  cutout: '65%',\r\n  radius: '80%',\r\n  maintainAspectRatio: false,\r\n  height: 200,\r\n}\r\n\r\nconst PieChart = ({ userPieData }) => {\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  const calculatePercentage = (count, totalUsers) => {\r\n    if (totalUsers === 0 || count === undefined) {\r\n      return 0;\r\n    } else {\r\n      const percentage = (count / totalUsers) * 100;\r\n      return Math.min(Math.round(percentage * 10) / 10, 100);\r\n    }\r\n  };\r\n\r\n  const options2 = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Line Chart',\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    cutout: '80%',\r\n    radius: '94%',\r\n    maintainAspectRatio: false,\r\n    height: 100\r\n  };\r\n\r\n  const data2 = {\r\n    labels: userPieData && userPieData.userChart.map(item => capitalizeFirstLetter(item._id)),\r\n    datasets: [\r\n      {\r\n        label: 'Gender Percentage',\r\n        data: userPieData && userPieData.userChart.map(item => item.count),\r\n        backgroundColor: [\r\n          '#FF9000',\r\n          '#FFFFFF',\r\n          '#0A0A0A',\r\n        ],\r\n        borderColor: '#0070ae',\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const maleCount = userPieData?.userChart.find(data => data._id === 'male')?.count || 0;\r\n  const femaleCount = userPieData?.userChart.find(data => data._id === 'female')?.count || 0;\r\n  const totalUsers = maleCount + femaleCount;\r\n\r\n  const memoizedMalePercentage = useMemo(\r\n    () => calculatePercentage(maleCount, totalUsers),\r\n    [userPieData, maleCount, totalUsers]\r\n  );\r\n\r\n  const memoizedFemalePercentage = useMemo(\r\n    () => calculatePercentage(femaleCount, totalUsers),\r\n    [userPieData, femaleCount, totalUsers]\r\n  );\r\n\r\n  return (\r\n    <div className={Styles.pie_chart_container}>\r\n      <p className={Styles.dashboard_p} style={{ width: \"100%\", float: 'left', fontSize: '2.2rem' }}>Clients</p>\r\n      <div className={Styles.chart8_circle}>\r\n        <div className={Styles.chart8_circle_info}>\r\n          <p className={Styles.chart8_circle_info_text}>\r\n            Clients Percentage\r\n          </p>\r\n        </div>\r\n        <div className={Styles.chart8_circle_chart}>\r\n          <Doughnut data={data2} options={options2} />\r\n        </div>\r\n      </div >\r\n      <div className={Styles.percenatage_container}>\r\n        <div className={Styles.dot_container}>\r\n          <div className={Styles.dot}></div>\r\n          <span className={Styles.male_percentage_Text}>Male: {memoizedMalePercentage === 0 ? '-' : memoizedMalePercentage} {memoizedMalePercentage === 0 ? '' : '%'}</span>\r\n\r\n        </div>\r\n        <div className={Styles.dot_container}>\r\n          <div className={Styles.dot1}></div>\r\n          <span className={Styles.male_percentage_Tex1}>Female: {memoizedFemalePercentage === 0 ? '-' : memoizedFemalePercentage} {memoizedFemalePercentage === 0 ? '' : '%'}</span>\r\n        </div>\r\n        {/* <div className={Styles.dot_container}>\r\n              <div className={Styles.dot}></div>\r\n              <span className={Styles.male_percentage_Text}>Male: {memoizedMalePercentage}</span>\r\n            </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PieChart","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\BarChatAdmin.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewDashBoardScreen\\BarChar.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\ProductsList\\Products.js",["2398","2399"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\Subscription.js",["2400","2401"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport PackagesStyles from './Packages.module.css';\r\n\r\nconst Subscription = ({ prevStep, nextStep, recurringType, setRecurringType, state, setState, navigateLogin }) => {\r\n  const getEnableSubscription = useSelector(state => state.getEnableSubscription);\r\n\r\n  const next = () => {\r\n    if (!(state.step2.selectedPackage.value && state.step2.selectedPackage.value.id)) {\r\n      setState(prevVal => ({\r\n        ...prevVal,\r\n        step2: { ...prevVal.step2, selectedPackage: { ...prevVal.step2.selectedPackage, error: 'Please select one of the subscription.' } },\r\n      }));\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='payment_btn_list'>\r\n        <div\r\n          className={recurringType === 'month' ? 'payment-container-active' : 'payment-container'}\r\n          onClick={() => {\r\n            setRecurringType('month');\r\n          }}\r\n        >\r\n          <div className='payment-price'>\r\n            <h3>Monthly</h3>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={recurringType === 'year' ? 'payment-container-active' : 'payment-container'}\r\n          onClick={() => {\r\n            setRecurringType('year');\r\n          }}\r\n        >\r\n          <div className='payment-price'>\r\n            <h3>Yearly</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form_container' style={{ margin: '1rem' }}>\r\n        {getEnableSubscription.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className='subscription_btn_list' style={{ padding: '1rem 1rem 0rem 0rem' }}>\r\n            {getEnableSubscription &&\r\n              getEnableSubscription.data &&\r\n              getEnableSubscription.data.data &&\r\n              getEnableSubscription.data.data.map(item => (\r\n                <div\r\n                  key={item.id}\r\n                  className={state.step2.selectedPackage.value.id === item.id ? 'sub-container-active' : 'sub-container'}\r\n                  onClick={() => {\r\n                    setState(prevVal => ({ ...prevVal, step2: { ...prevVal.step2, selectedPackage: { value: item, error: '' } } }));\r\n                  }}\r\n                >\r\n                  <h1 style={{ width: '30rem' }}>\r\n                    {item.name}\r\n                    <div className={PackagesStyles.pricing_card_feature}>\r\n                      <p className={PackagesStyles.pricing_card_feature_text}>{item.description}</p>\r\n                    </div>\r\n                  </h1>\r\n                  {item.metadata && item.metadata.users && (\r\n                    <div className={PackagesStyles.pricing_card_features}>\r\n                      <div className={PackagesStyles.pricing_card_feature}>\r\n                        <div className={PackagesStyles.pricing_card_feature_icon_box}>\r\n                          <svg className={PackagesStyles.pricing_card_feature_icon}>\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n                          </svg>\r\n                        </div>\r\n                        <p className={PackagesStyles.pricing_card_feature_text}>{item.metadata.users} User</p>\r\n                      </div>\r\n                      <div className={PackagesStyles.pricing_card_feature}>\r\n                        <div className={PackagesStyles.pricing_card_feature_icon_box}>\r\n                          <svg className={PackagesStyles.pricing_card_feature_icon}>\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-calendar`} />\r\n                          </svg>\r\n                        </div>\r\n                        <p className={PackagesStyles.pricing_card_feature_text}>{item.metadata.calendars} Calendar</p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className='sub-price'>\r\n                    <h2>$ {item.plans[0] ? item.plans[0].amount : 'NA'}</h2>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n        {state.step2.selectedPackage.error && (\r\n          <div className='onboard_error'>\r\n            <p>{state.step2.selectedPackage.error}</p>\r\n          </div>\r\n        )}\r\n      <div className='onboard_down'>\r\n        <p onClick={navigateLogin}>Back to login</p>\r\n        <div className='onboard_button'>\r\n          <button onClick={prevStep} className='prev'>\r\n            Previous\r\n          </button>\r\n          <button onClick={() => next()}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\StylistDetails.js",["2402"],"import React, { useState } from \"react\";\r\nimport { inputPhoneMasking } from \"../../utils/validators\";\r\nimport stylist from \"./onboarding.css\";\r\nconst StylistDetails = ({\r\n\tnextStep,\r\n\tprevStep,\r\n\tstate,\r\n\tsetState,\r\n\tsetShowAddModal,\r\n\tnavigateLogin,\r\n}) => {\r\n\tconst [disableStylist, setDisableStylist] = useState(false);\r\n\tconst [stylistError, setStylistError] = useState('');\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (state &&\r\n\t\t\tstate.step2 &&\r\n\t\t\tstate.step2.stylist &&\r\n\t\t\tstate.step2 &&\r\n\t\t\tstate.step2.stylist.length === 1) {\r\n\t\t\tsetDisableStylist(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDisableStylist(false);\r\n\t\t}\r\n\t}, [state, setState]);\r\n\r\n\t// React.useEffect(() => {\r\n\t// \tif (state &&\r\n\t// \t\tstate.step2 &&\r\n\t// \t\tstate.step2.stylist &&\r\n\t// \t\tstate.step2 &&\r\n\t// \t\tstate.step2.stylist.length.toString() <= state.step2.selectedPackage.value.metadata.users) {\r\n\t// \t\tsetStylistError('')\r\n\t// \t}\r\n\t// }, [state]);\r\n\r\n\tconst next = () => {\r\n\t\tif (state &&\r\n\t\t\tstate.step2 &&\r\n\t\t\tstate.step2.stylist &&\r\n\t\t\tstate.step2 &&\r\n\t\t\tstate.step2.selectedPackage &&\r\n\t\t\tstate.step2.selectedPackage.value &&\r\n\t\t\tstate.step2.stylist.length.toString() > state.step2.selectedPackage.value.metadata.users) {\r\n\t\t\tsetStylistError('You have selected more users than your plan.*')\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetStylistError('')\r\n\t\t}\r\n\t\tstate.step2.stylist && state.step2.stylist.length > 0\r\n\t\t\t? nextStep()\r\n\t\t\t: setShowAddModal(true);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t{!disableStylist && <div\r\n\t\t\t\tclassName=\"onboard_button\"\r\n\t\t\t\tstyle={{ marginTop: \"0rem\", marginBottom: \"20px\", opacity: disableStylist ? '30%' : '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<button className=\"button1\" style={{ opacity: disableStylist ? '30%' : '100%', }} onClick={() => setShowAddModal(true)}>\r\n\t\t\t\t\tAdd Stylist\r\n\t\t\t\t</button>\r\n\t\t\t</div>}\r\n\r\n\t\t\t<div className=\"form_container\">\r\n\t\t\t\t<div className=\"form_container_box\">\r\n\t\t\t\t\t<table className=\"tables\" style={{ marginBottom: \"10rem\", backgroundColor: '#3D3D3D' }}>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th >#</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t\t\t<th>Delete stylist</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{state.step2.stylist?.length > 0 ? (\r\n\t\t\t\t\t\t\t\tstate.step2.stylist.map((item, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{ color: \"#fff\" }}>{i + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{ color: \"#fff\" }}>{item.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{ color: \"#fff\" }}>{item.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{ color: \"#fff\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{inputPhoneMasking(item.phone)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"table__button table__button--delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isSalonEmailIdentical =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.email ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate.step1.email\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet newFormValues =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate.step2.stylist;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFormValues.splice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetState((prevVal) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevVal,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevVal.step1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiRole: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: isSalonEmailIdentical\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: prevVal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.step1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.multiRole\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep2: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstylist:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFormValues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxState: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus: isSalonEmailIdentical\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: prevVal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.step2\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.checkboxState\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.status,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temail: isSalonEmailIdentical\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: prevVal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.step2\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.checkboxState\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"table__button--icon-reds\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`/assets/sprite.svg#icon-delete`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Stylist</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ backgroundColor: \"#3D3D3D\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 style={{ color: \"#fff\", margin: 5 }}>Add Stylist</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{stylistError && <p style={{ color: 'red' }}>{stylistError}</p>}\r\n\t\t\t<div className=\"onboard_down\" style={{ marginTop: \"4rem\" }}>\r\n\t\t\t\t<div className='onboard_down1'>\r\n\t\t\t\t\t<span onClick={navigateLogin}>Back to login</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"onboard_button\">\r\n\t\t\t\t\t<button onClick={prevStep} className=\"prev\">\r\n\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={next}>Next</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StylistDetails;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\AddStylistModal.js",["2403","2404","2405"],"import React, { useState } from \"react\";\r\nimport InputBox from \"../../components/formInputs/InputBox\";\r\nimport SelectBox from \"../../components/formInputs/SelectBox\";\r\nimport Modal from \"../../components/Modal\";\r\nimport InputsSection from \"../../components/Modal/InputsSectionColumn\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport {\r\n\tinputPhoneMasking,\r\n\tunMasking,\r\n\tvalidateEmail,\r\n\tvalidatePassword,\r\n} from \"../../utils/validators\";\r\n\r\nconst AddStylistModal = ({ props }) => {\r\n\tconst { showAddModal, handleAddModalClose, state, setState } = props;\r\n\r\n\tconst [name, setName] = useState();\r\n\tconst [nameError, setNameError] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [emailError, setEmailError] = useState(\"\");\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\tconst [phoneError, setPhoneError] = useState(\"\");\r\n\tconst [gender, setGender] = useState(\"\");\r\n\tconst [genderError, setGenderError] = useState(\"\");\r\n\tconst [checkbox, setCheckbox] = useState({\r\n\t\tstatus: false,\r\n\t\temail: \"\",\r\n\t});\r\n\r\n\tconst addStylisthandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet result = state.step2.stylist.filter(function (o) {\r\n\t\t\treturn o.email == email;\r\n\t\t});\r\n\t\tlet resultphone = state.step2.stylist.filter(function (o) {\r\n\t\t\treturn o.phone == unMasking(phone);\r\n\t\t});\r\n\t\tif (name === \"\") {\r\n\t\t\tsetNameError(\"Please enter name\");\r\n\t\t} else if (email === \"\") {\r\n\t\t\tsetEmailError(\"Please enter email\");\r\n\t\t} else if (!validateEmail(email)) {\r\n\t\t\tsetEmailError(\"Please enter valid email\");\r\n\t\t} else if (result.length > 0) {\r\n\t\t\tsetEmailError(\r\n\t\t\t\t\"A stylist with this email address already exists. Please enter different email address.\"\r\n\t\t\t);\r\n\t\t} else if (phone === \"\") {\r\n\t\t\tsetPhoneError(\"Please enter phone no.\");\r\n\t\t} else if (resultphone.length > 0) {\r\n\t\t\tsetPhoneError(\r\n\t\t\t\t\"A stylist with this phone already exists. Please enter different phone number.\"\r\n\t\t\t);\r\n\t\t} else if (gender === \"\") {\r\n\t\t\tsetGenderError(\"Please enter gender\");\r\n\t\t} else {\r\n\t\t\tconst stylist = [];\r\n\t\t\tstylist.push({\r\n        name: name,\r\n\t\t\t\temail: email,\r\n\t\t\t\tphone: unMasking(phone),\r\n\t\t\t\tgender: gender,\r\n\t\t\t\tmultiRole: checkbox.status,\r\n\t\t\t});\r\n\t\t\tsetState((prevVal) => ({\r\n\t\t\t\t...prevVal,\r\n\t\t\t\tstep1: {\r\n\t\t\t\t\t...prevVal.step1,\r\n\t\t\t\t\tmultiRole: {\r\n\t\t\t\t\t\tvalue: checkbox.status,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tstep2: {\r\n\t\t\t\t\t...prevVal.step2,\r\n\t\t\t\t\tstylist: stylist,\r\n\t\t\t\t\tcheckboxState: checkbox,\r\n\t\t\t\t},\r\n\t\t\t}));\r\n\r\n\t\t\thandleClearState();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCheckboxClick = (event) => {\r\n\t\tconst isChecked = event.target.checked;\r\n\r\n\t\tif (isChecked) {\r\n\t\t\tsetEmail(state.step1.email.value);\r\n\t\t\tsetCheckbox({\r\n\t\t\t\tstatus: true,\r\n\t\t\t\temail: state.step1.email.value,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetEmail(\"\");\r\n\t\t\tsetCheckbox({\r\n\t\t\t\tstatus: false,\r\n\t\t\t\temail: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClearState = () => {\r\n\t\tsetName(\"\");\r\n\t\tsetEmail(\"\");\r\n\t\tsetPhone(\"\");\r\n\t\tsetGender(\"\");\r\n\r\n\t\tsetNameError(\"\");\r\n\t\tsetEmailError(\"\");\r\n\t\tsetPhoneError(\"\");\r\n\t\tsetGenderError(\"\");\r\n\t\tsetCheckbox({\r\n\t\t\tstatus: false,\r\n\t\t\temail: \"\",\r\n\t\t});\r\n\t\thandleAddModalClose(false);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={\"Add New Stylist\"}\r\n\t\t\t\tonClose={handleClearState}\r\n\t\t\t/>\r\n\t\t\t<ModalForm>\r\n\t\t\t\t{!state.step2.checkboxState.status && !(Array.isArray(state?.step2?.stylist) && state.step2.stylist.find(obj => obj.multiRole === true)) && (state?.step2?.stylist?.length === 0) && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: \"2rem\",\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\tgap: \"1rem\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"isSalon\"\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: \"2rem\",\r\n\t\t\t\t\t\t\t\twidth: \"2rem\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={(e) => handleCheckboxClick(e)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tfor=\"isSalon\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: \"var(--pure-white)\",\r\n\t\t\t\t\t\t\t\tfontSize: \"1.2rem\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAssign Salon Admin role as well?\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<InputsSection\r\n\t\t\t\t\tstyle={{ display: \"flex\", flexDirection: \"row\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"Stylist Name\"\r\n\t\t\t\t\t\ticon=\"stylist\"\r\n\t\t\t\t\t\tplaceholder=\"eg, BookB Salon-Stylist\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ticon=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"eg, johndoe@example.com\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t\tdisabled={checkbox.status}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSection\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\tplaceholder=\"eg, 123 456 7890\"\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\tlabel=\"Gender\"\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value);\r\n\t\t\t\t\t\t\tsetGenderError(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\tname=\"Service\"\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t\tstyle={{ marginBottom: \"1rem\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className=\"optionBox\" value=\"\">\r\n\t\t\t\t\t\t\t--Select Gender--\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"male\">Male</option>\r\n\t\t\t\t\t\t<option value=\"female\">Female</option>\r\n\t\t\t\t\t\t<option value=\"other\"> Other</option>\r\n\t\t\t\t\t</SelectBox>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<ModalButton\r\n\t\t\t\t\tlabel={\"Add New\"}\r\n\t\t\t\t\ticon={\"plus\"}\r\n\t\t\t\t\tonClick={(e) => addStylisthandler(e)}\r\n\t\t\t\t/>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddStylistModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\onboardingActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\SalonInfo.js",["2406"],"import React, { useState, useEffect } from 'react';\r\nimport { inputPhoneMasking, unMasking, validateEmail, validatePassword, validatePhone } from '../../utils/validators';\r\nimport BaseInput from '../../components/BaseInputNew/BaseInput';\r\nimport ReactCountryFlag from 'react-country-flag';\r\nimport { countryCodeList } from '../../utils/CountryCodesList';\r\n\r\nconst SalonInfo = ({ nextStep, state, setState, navigateLogin }) => {\r\n  const [selectedCountry, setSelectedCountry] = useState(countryCodeList[0]);\r\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  \r\n  const handleDropdownToggle = () => {\r\n    setDropdownVisible(!isDropdownVisible);\r\n  };\r\n\r\n  const handleCountryCodeSelect = (country) => {\r\n    setSelectedCountry(country);\r\n    setState(prevVal => ({\r\n      ...prevVal,\r\n      step1: {\r\n        ...prevVal.step1,\r\n        countryCode: {\r\n          value: country.dialCode,\r\n          error: ''\r\n        }\r\n      }\r\n    }));\r\n    setDropdownVisible(false);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const filteredCountryList = countryCodeList.filter(country =>\r\n    country.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!state.step1.countryCode.value) { \r\n      setState(prevVal => ({\r\n        ...prevVal,\r\n        step1: {\r\n          ...prevVal.step1,\r\n          countryCode: {\r\n            value: countryCodeList[0].dialCode,\r\n            error: ''\r\n          }\r\n        }\r\n      }));\r\n      setSelectedCountry(countryCodeList[0]); \r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentCountry = countryCodeList.find(country => country.dialCode === state.step1.countryCode.value);\r\n    if (currentCountry) {\r\n      setSelectedCountry(currentCountry);\r\n    }\r\n  }, [state.step1.countryCode.value]);\r\n\r\n  const handleNextStep = () => {\r\n    if (state.step1.name.value === '') {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, name: { ...prevVal.step1.name, error: 'Please enter name.' } } }));\r\n    }\r\n    if (state.step1.address.value === '') {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, address: { ...prevVal.step1.address, error: 'Please enter address' } } }));\r\n    }\r\n    if (state.step1.email.value === '') {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, email: { ...prevVal.step1.email, error: 'Please enter email' } } }));\r\n    }\r\n    if (!validateEmail(state.step1.email.value)) {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, email: { ...prevVal.step1.email, error: 'Please enter valid email' } } }));\r\n    }\r\n    if (!validatePhone(unMasking(state.step1.phone.value))) {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, phone: { ...prevVal.step1.phone, error: 'Please enter valid phone no.' } } }));\r\n    }\r\n    if (state.step1.countryCode.value === '') {\r\n      setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, countryCode: { ...prevVal.step1.countryCode, error: 'Please enter country code' } } }));\r\n    }\r\n    if (!validatePassword(state.step1.password.value)) {\r\n      setState(prevVal => ({\r\n        ...prevVal,\r\n        step1: { ...prevVal.step1, password: { ...prevVal.step1.password, error: 'Password should have uppercase, lowercase, symbol and 8 characters long.' } },\r\n      }));\r\n    }\r\n    if (state.step1.password.value !== state.step1.passwordConfirm.value) {\r\n      setState(prevVal => ({\r\n        ...prevVal,\r\n        step1: { ...prevVal.step1, passwordConfirm: { ...prevVal.step1.passwordConfirm, error: 'Password does not match' } },\r\n      }));\r\n    }\r\n\r\n    if (\r\n      state.step1.name.value &&\r\n      state.step1.email.value &&\r\n      validateEmail(state.step1.email.value) &&\r\n      state.step1.address.value &&\r\n      state.step1.phone.value &&\r\n      validatePassword(state.step1.password.value) &&\r\n      state.step1.password.value === state.step1.passwordConfirm.value\r\n    ) {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='onboard_form'>\r\n      <div className='onboard_form_input'>\r\n        <div>\r\n          <BaseInput\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem' }}\r\n            style={{ background: 'none' }}\r\n            placeholder={'Enter the name'}\r\n            title={'Salon Name'}\r\n            icon={'icon-new-salon'}\r\n            value={state.step1.name.value}\r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, name: { value: e.target.value, error: '' } } }));\r\n            }}\r\n          />\r\n          <p className='onboard_error'>{state.step1.name.error}</p>\r\n        </div>\r\n        <div>\r\n          <BaseInput\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem' }}\r\n            style={{ background: 'none' }}\r\n            placeholder={'Enter the email'}\r\n            title={'Email'}\r\n            icon={'icon-new-email'}\r\n            value={state.step1.email.value}\r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, email: { value: e.target.value, error: '' } } }));\r\n            }}\r\n          />\r\n          <p className='onboard_error'>{state.step1.email.error}</p>\r\n        </div>\r\n      </div>\r\n      <div className='onboard_form_input'>\r\n        <div>\r\n          <BaseInput\r\n            style={{ background: 'none' }}\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem', position: 'relative' }}\r\n            placeholder={'Enter the phone no.'}\r\n            title={'Phone'}\r\n            icon={'icon-down'}\r\n            value={state.step1.phone.value}\r\n            onIconClick={handleDropdownToggle} \r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, phone: { value: inputPhoneMasking(e.target.value), error: '' } } }));\r\n            }}\r\n            customIcon={\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <ReactCountryFlag countryCode={selectedCountry.code} svg style={{ width: '15px', height: '15px' }} />\r\n              </div>\r\n            }\r\n          />\r\n          {isDropdownVisible && (\r\n            <div style={{ position: 'relative' }}>\r\n              <input\r\n                type='text'\r\n                placeholder='Search'\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '1.5rem',\r\n                  color: '#fff', \r\n                  maxWidth: 200,\r\n                  border: '1px solid #000', \r\n                  outline: 'none', \r\n                  backgroundColor: \"#3D3D3D\",\r\n                  marginLeft: '20px'\r\n                }}\r\n              />\r\n              <ul style={{\r\n                position: 'absolute',\r\n                top: '100%',\r\n                left: 20,\r\n                backgroundColor: '#3D3D3D',\r\n                zIndex: 1,\r\n                width: '100%',\r\n                listStyle: 'none',\r\n                padding: '0.5rem',\r\n                borderRadius: '0.5rem',\r\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                maxWidth: 200,\r\n                overflow: 'auto',\r\n                maxHeight: '200px',\r\n              }}>\r\n                {filteredCountryList.map(country => (\r\n                  <li key={country.code} style={{ padding: '0.5rem 0', display: 'flex', alignItems: 'center', cursor: 'pointer' }} onClick={() => handleCountryCodeSelect(country)}>\r\n                    <ReactCountryFlag countryCode={country.code} svg />\r\n                    <span style={{ marginLeft: 10, color: '#fff' }}>{country.name} ({country.dialCode})</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          <p className='onboard_error'>{state.step1.phone.error}</p>\r\n        </div>\r\n        <div>\r\n          <BaseInput\r\n            style={{ background: 'none' }}\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem' }}\r\n            placeholder={'Enter the address'}\r\n            title={'Address'}\r\n            icon={'icon-new-location'}\r\n            value={state.step1.address.value}\r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, address: { value: e.target.value, error: '' } } }));\r\n            }}\r\n          />\r\n          <p className='onboard_error'>{state.step1.address.error}</p>\r\n        </div>\r\n      </div>\r\n      <div className='onboard_form_input'>\r\n        <div>\r\n          <BaseInput\r\n            style={{ background: 'none' }}\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem' }}\r\n            placeholder={'Enter the password'}\r\n            title={'Password'}\r\n            icon={'icon-new-key'}\r\n            value={state.step1.password.value}\r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, password: { value: e.target.value, error: '' } } }));\r\n            }}\r\n            type='password'\r\n          />\r\n          <p className='onboard_error'>{state.step1.password.error}</p>\r\n        </div>\r\n        <div>\r\n          <BaseInput\r\n            style={{ background: 'none' }}\r\n            containerStyle={{ background: '#3D3D3D', borderRadius: '1rem' }}\r\n            placeholder={'Re-enter password'}\r\n            title={'Re-enter password'}\r\n            icon={'icon-new-key'}\r\n            value={state.step1.passwordConfirm.value}\r\n            onChange={e => {\r\n              setState(prevVal => ({ ...prevVal, step1: { ...prevVal.step1, passwordConfirm: { value: e.target.value, error: '' } } }));\r\n            }}\r\n            type='password'\r\n          />\r\n          <p className='onboard_error'>{state.step1.passwordConfirm.error}</p>\r\n        </div>\r\n      </div>\r\n      <div className='onboard_down'>\r\n      <div className='onboard_down1'>\r\n      <span onClick={navigateLogin}>Back to login</span>\r\n        </div>\r\n        <div className='onboard_button'>\r\n          <button onClick={handleNextStep}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalonInfo;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\Payment.js",["2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  CardCvcElement,\r\n  CardElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAdminCouponsAction,\r\n  verifyCouponAction,\r\n} from \"../../redux/actions/couponActions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { VERIFY_COUPON_RESET } from \"../../redux/constants/couponConstants\";\r\nimport { completeOnboardAction } from \"../../redux/actions/onboardingActions\";\r\nimport { CREATE_NEW_ONBOARD_USER_RESET } from \"../../redux/constants/onboardingConstants\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport InputCoupon from \"../../components/formInputs/InputBox/InputCoupon\";\r\nimport {\r\n  getEnableSubscriptionAction,\r\n  getTotalPriceAction,\r\n} from \"../../redux/actions/subscriptionAction\";\r\nimport Modal from \"../../components/Modal\";\r\nimport payment from \"./Payment.module.css\";\r\nimport AddStylistComponent from \"../../components/formInputs/InputBox/AddStylistComponent\";\r\n\r\n// import { getEnableSubscriptionAction, getTotalPriceAction } from \"../../redux/actions/subscriptionAction\";\r\n//const stripePromise = loadStripe(\"pk_test_HLKSK1hyuVsxEIZxIsEivNEj00RsqCdrBq\");\r\nimport { stripePublicKey } from '../../redux/actions/ip';\r\nconst stripePromise = loadStripe(stripePublicKey);\r\n\r\nconst CheckOut = ({\r\n  state,\r\n  setState,\r\n  coupon,\r\n  handleSubmit,\r\n  prevStep,\r\n  couponData,\r\n  getTotalPrice,\r\n  verfifyCoupon,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const onBoardRegister = useSelector((state) => state.onBoardRegister);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      onBoardRegister &&\r\n      onBoardRegister.data &&\r\n      onBoardRegister.data.status\r\n    ) {\r\n      dispatch({ type: CREATE_NEW_ONBOARD_USER_RESET });\r\n      confirmCardPayment(onBoardRegister.data.data);\r\n    } else if (\r\n      onBoardRegister &&\r\n      onBoardRegister.data &&\r\n      !onBoardRegister.data.status\r\n    ) {\r\n      dispatch({ type: CREATE_NEW_ONBOARD_USER_RESET });\r\n      toast.error(onBoardRegister.data.message);\r\n    }\r\n  }, [onBoardRegister, dispatch]);\r\n\r\n  const confirmCardPayment = async (formData) => {\r\n    const { clientId, client_secret, status } = formData;\r\n    if (status === \"requires_action\") {\r\n      stripe.confirmCardPayment(client_secret).then(async function (result) {\r\n        if (result.error) {\r\n          toast.error(result.error);\r\n        } else {\r\n          await dispatch(\r\n            completeOnboardAction({\r\n              clientId,\r\n              plan: state.step2.selectedPackage.value.plans[0].id,\r\n            })\r\n          );\r\n          toast.success(\"Your payment is successful.\");\r\n        }\r\n      });\r\n    } else if (status === \"fail\") {\r\n      toast.error(formData.msg);\r\n    } else {\r\n      await dispatch(\r\n        completeOnboardAction({\r\n          clientId,\r\n          plan: state.step2.selectedPackage.value.plans[0].id,\r\n        })\r\n      );\r\n      toast.success(\"Your payment is successful.\");\r\n    }\r\n  };\r\n\r\n  const handlePaymentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardNumberElement),\r\n      billing_details: {\r\n        name: state.step1.name.value,\r\n        email: state.step1.email.value,\r\n      },\r\n    });\r\n\r\n    if (!error) {\r\n      const { id } = paymentMethod;\r\n      const paymentData = {\r\n        id,\r\n        promotion_code:\r\n          couponData.promotionCode && couponData.promotionCode.length\r\n            ? couponData.promotionCode[0].id\r\n            : \"\",\r\n      };\r\n\r\n      // setState(prevVal => ({ ...prevVal, step5: {  paymentData } }));\r\n\r\n      if (paymentData.id) {\r\n        handleSubmit(paymentData);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <CardElement /> */}\r\n      <div className=\"onboard_card_input\">\r\n        <CardNumberElement\r\n          options={{\r\n            showIcon: true,\r\n            style: {\r\n              base: {\r\n                iconColor: \"#ffff\",\r\n                color: \"#fff\",\r\n                fontWeight: \"500\",\r\n                fontFamily: \"Poppins, sans-serif\",\r\n                fontSize: \"14px\",\r\n                fontSmoothing: \"antialiased\",\r\n                padding: \"25px\",\r\n                \":-webkit-autofill\": {\r\n                  color: \"#aa9999\",\r\n                },\r\n                \"::placeholder\": {\r\n                  color: \"#aa9999\",\r\n                  fontWeight: \"500\",\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"form_section\">\r\n        <div className=\"onboard_card_input\">\r\n          <CardExpiryElement\r\n            options={{\r\n              showIcon: true,\r\n              style: {\r\n                base: {\r\n                  iconColor: \"#000000\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"500\",\r\n                  textAlign: \"center\",\r\n                  fontFamily: \"Poppins, sans-serif\",\r\n                  fontSize: \"14px\",\r\n                  fontSmoothing: \"antialiased\",\r\n                  padding: \"25px\",\r\n                  \":-webkit-autofill\": {\r\n                    color: \"#aa9999\",\r\n                  },\r\n                  \"::placeholder\": {\r\n                    color: \"#aa9999\",\r\n                    fontWeight: \"500\",\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"onboard_card_input\">\r\n          <CardCvcElement\r\n            options={{\r\n              showIcon: true,\r\n              style: {\r\n                base: {\r\n                  iconColor: \"#000000\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"500\",\r\n                  textAlign: \"center\",\r\n                  fontFamily: \"Poppins, sans-serif\",\r\n                  fontSize: \"14px\",\r\n                  fontSmoothing: \"antialiased\",\r\n                  padding: \"25px\",\r\n                  \":-webkit-autofill\": {\r\n                    color: \"#aa9999\",\r\n                  },\r\n                  \"::placeholder\": {\r\n                    color: \"#aa9999\",\r\n                    fontWeight: \"500\",\r\n                  },\r\n                },\r\n                invalid: {\r\n                  iconColor: \"#FFC7EE\",\r\n                  color: \"#FFC7EE\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className={payment.onboarding_price}>\r\n          <span className={payment.priceText}>Price :</span>\r\n          {getTotalPrice &&\r\n            getTotalPrice?.data &&\r\n            getTotalPrice?.data?.price && (\r\n              <span className={payment.finalPrice}>\r\n                ${getTotalPrice?.data?.price}\r\n              </span>\r\n            )}\r\n        </div>\r\n        {verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.status ? (\r\n          <div className={payment.onboarding_price}>\r\n            <span className={payment.priceText}>\r\n              Coupon{\" \"}\r\n              <span className={payment.testing}>\r\n                ({coupon} {getTotalPrice?.data?.discountPercentage}% off applied) :\r\n              </span>\r\n            </span>\r\n            <div className={payment.total_Price}>\r\n              {getTotalPrice &&\r\n                getTotalPrice?.data &&\r\n                getTotalPrice?.data?.price && (\r\n                  <span className={payment.discountedPrice}>\r\n                    ${getTotalPrice?.data?.price}{\" \"}\r\n                  </span>\r\n                )}\r\n              {getTotalPrice &&\r\n                getTotalPrice?.data &&\r\n                getTotalPrice?.data?.discountAmount && (\r\n                  <span className={payment.finalPrice}>\r\n                    ${(\r\n                      getTotalPrice?.data?.price -\r\n                      getTotalPrice?.data?.discountAmount\r\n                    ).toFixed(2)}\r\n                    \r\n                  </span>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div className={payment.onboarding_price}>\r\n          {getTotalPrice &&\r\n            getTotalPrice?.data &&\r\n            getTotalPrice?.data?.subtotal && (\r\n              <span className={payment.subTotal}>\r\n                Subtotal{\" \"}\r\n                <span className={payment.fees}>\r\n                  (Including {getTotalPrice?.data?.taxPercentage}% transaction\r\n                  fees)\r\n                </span>{\" \"}\r\n                :\r\n              </span>\r\n            )}\r\n          {getTotalPrice &&\r\n            getTotalPrice?.data &&\r\n            getTotalPrice?.data?.subtotal && (\r\n              <span className={payment.finalPrice}>\r\n                ${getTotalPrice?.data?.total}\r\n              </span>\r\n            )}\r\n        </div>\r\n        <div className={payment.divider} />\r\n        <div className={payment.totalRow}>\r\n          <span className={payment.totalText}>Total</span>\r\n          {getTotalPrice &&\r\n            getTotalPrice?.data &&\r\n            getTotalPrice?.data?.total && (\r\n              <span className={payment.totalAmount}>\r\n                ${getTotalPrice?.data?.total}\r\n              </span>\r\n            )}\r\n        </div>\r\n      </div>\r\n\r\n      {onBoardRegister && onBoardRegister.loading ? (\r\n        <div className=\"onboard_button\">\r\n          <button disabled>Processing...</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"onboard_button\">\r\n          <button onClick={prevStep} className=\"prev\">\r\n            Previous\r\n          </button>\r\n          <button disabled={!stripe} onClick={handlePaymentSubmit}>\r\n            Pay\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Payment = ({\r\n  prevStep,\r\n  handleSubmit,\r\n  state,\r\n  setState,\r\n  navigateLogin,\r\n  couponData,\r\n  setCouponData,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [coupon, setCoupon] = useState(\"\");\r\n  const [couponError, setCouponError] = useState(\"\");\r\n  const [active, setActive] = useState(false);\r\n  const verfifyCoupon = useSelector((state) => state.verfifyCoupon);\r\n  const getAdminCoupon = useSelector((state) => state.getAdminCoupon);\r\n\r\n  const getEnableSubscription = useSelector(\r\n    (state) => state.getEnableSubscription\r\n  );\r\n  const getTotalPrice = useSelector((state) => state.getTotalPrice);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n\r\n  const trData = getEnableSubscription?.data?.data?.formattedTiers;\r\n  const packageId = getEnableSubscription?.data?.data?.id;\r\n  const product = getEnableSubscription?.data?.data?.product;\r\n  const [isModalVisible1, setModalVisible1] = useState(false);\r\n  const [applyCoupenLoading, setApplyCoupenLoading] = useState(false);\r\n\r\n  const priceId = quantity ? quantity : 1;\r\n\r\n  useEffect(() => {\r\n    dispatch(getEnableSubscriptionAction());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTotalPriceAction(priceId));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      step4: { quantity: priceId, package: product, plan: packageId },\r\n    });\r\n  }, [trData, quantity]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminCouponsAction());\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    if (verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.status) {\r\n      toast.success(verfifyCoupon.data.message);\r\n      setCouponError(\"\");\r\n      setCouponData(\r\n        verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.data\r\n      );\r\n    } else {\r\n      toast.error(\r\n        verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.message\r\n      );\r\n      setCouponError(\r\n        verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.message\r\n      );\r\n    }\r\n  }, [verfifyCoupon]);\r\n\r\n  const handleClick = async () => {\r\n    if (coupon === \"\") {\r\n      setCouponError(\"Please enter coupon\");\r\n      setCouponData(\"\");\r\n      setCoupon(\"\");\r\n    } else {\r\n      setModalVisible1(true);\r\n      dispatch(verifyCouponAction(coupon));\r\n      setApplyCoupenLoading(true);\r\n      try {\r\n        await dispatch(getTotalPriceAction(priceId, coupon));\r\n      } catch (error) {\r\n        console.error(\"Error fetching total price:\", error);\r\n      } finally {\r\n        setApplyCoupenLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickCoupon = (d) => {\r\n    dispatch(verifyCouponAction(d && d.code));\r\n    setActive(false);\r\n    setCoupon(d && d.code);\r\n  };\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div className={payment.flexRowContainer}>\r\n        <div className={`onboard_inputView ${payment.onboardInputView}`}>\r\n          <div className=\"onboard_input\">\r\n            <InputCoupon\r\n              type=\"text\"\r\n              placeholder=\"Enter Coupon Code\"\r\n              value={coupon}\r\n              onFocus={(e) => {\r\n                setActive(!active);\r\n              }}\r\n              onChange={(e) => {\r\n                setCoupon(e.target.value);\r\n                setCouponError(\"\");\r\n              }}\r\n              errorMessage={couponError}\r\n              label=\"Apply Coupon\"\r\n              icon=\"ticket\"\r\n              handler={handleClick}\r\n              verfifyCoupon={verfifyCoupon}\r\n              couponData={couponData}\r\n              setCouponData={setCouponData}\r\n              setCoupon={setCoupon}\r\n              priceId={priceId}\r\n              coupon={coupon}\r\n              applyCoupenLoading={applyCoupenLoading}\r\n              isModalVisible1\r\n              setModalVisible1\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <AddStylistComponent\r\n          data={trData}\r\n          quantity={quantity}\r\n          setQuantity={setQuantity}\r\n          type=\"text\"\r\n          label1=\"No. Of Stylist\"\r\n          coupon={coupon}\r\n        />\r\n      </div>\r\n\r\n      <CheckOut\r\n        prevStep={prevStep}\r\n        setState={setState}\r\n        coupon={coupon}\r\n        state={state}\r\n        handleSubmit={handleSubmit}\r\n        couponData={couponData}\r\n        navigateLogin={navigateLogin}\r\n        getTotalPrice={getTotalPrice}\r\n        verfifyCoupon={verfifyCoupon}\r\n      />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\NewStylistSessionScreen\\RangeDatePickerModal.js",["2419","2420"],"import React from 'react';\r\n// import InputsSection from '../../components/Modal/InputsSection';\r\nimport './Picker.css';\r\nimport TemplateAssignStyles from './TemplateAssign.module.css';\r\n\r\nimport {\r\n\tRangeDatePicker,\r\n\tSingleDatePicker\r\n} from \"react-google-flight-datepicker\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst RangeDatePickerModal = ({ data }) => {\r\n\r\n\tconst {\r\n\t\tfromDate,\r\n\t\ttoDate,\r\n\t\tsetFromDate,\r\n\t\tsetToDate,\r\n\t\tdatePickerHandler\r\n\t} = data;\r\n\r\n\treturn (\r\n\t\t<div className='flex' style={{marginTop: '2.2rem'}}>\r\n\t\t\t<div style={{ borderRadius:'1rem',marginBottom:'1rem' }}>\r\n\t\t\t\t<div className={TemplateAssignStyles.muscleType}>\r\n\t\t\t\t\t<RangeDatePicker\r\n\t\t\t\t\t\tstartDate={moment(fromDate).format('MM/DD/YYYY')}\r\n\t\t\t\t\t\tendDate={moment(toDate).format('MM/DD/YYYY')}\r\n\t\t\t\t\t\tminDate={new Date(2022, 0, 1)}\r\n\t\t\t\t\t\tstartDatePlaceholder=\"From\"\r\n\t\t\t\t\t\tendDatePlaceholder=\"To\"\r\n\t\t\t\t\t\tdateFormat=\"MM/DD/YYYY\"\r\n\t\t\t\t\t\tmonthFormat=\"MMM YYYY\"\r\n\t\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\t\tsingleCalendar={true}\r\n\t\t\t\t\t\tonChange={(startDate, endDate) => {\r\n\t\t\t\t\t\t\tsetFromDate(moment(startDate).format('MM/DD/YYYY'));\r\n\t\t\t\t\t\t\tsetToDate(moment(endDate).format('MM/DD/YYYY'));  \r\n\t\t\t\t\t\t\t// datePickerHandler(moment(startDate).format('MM/DD/YYYY'), moment(endDate).format('MM/DD/YYYY'));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RangeDatePickerModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\Onborading\\BusinessHours.js",["2421","2422","2423"],"import React, { Fragment, useCallback, useState } from 'react';\r\nimport AvailabilityStyle from '../../screens/StylistSessionScreen/StylistAvailability.module.css';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport moment from 'moment';\r\n\r\nconst BusinessHours = ({ prevStep, nextStep, data, navigateLogin }) => {\r\n  const [weekDays, setWeekDays] = useState([...data]);\r\n  const [error, setErrors] = useState('');\r\n\r\n  const handleChange = (e, mainIndex, index, item) => {\r\n    e.preventDefault();\r\n    let newFormValues = [...weekDays];\r\n    weekDays[mainIndex].slot[index][e.target.name] = e.target.value;\r\n    item[e.target.name] = e.target.value;\r\n    setWeekDays([...newFormValues]);\r\n  };\r\n\r\n  const addFormFields = slot => {\r\n    if (slot) {\r\n      slot.push({\r\n        startTime: '',\r\n        endTime: '',\r\n      });\r\n    }\r\n    setWeekDays([...weekDays]);\r\n  };\r\n\r\n  const removeFormFields = (i, mainIndex, day) => {\r\n    const newFormValues = [...weekDays];\r\n    newFormValues[mainIndex].slot.splice(i, 1);\r\n    setWeekDays(newFormValues);\r\n    day.slot.splice(i, 1);\r\n  };\r\n\r\n  const handleNext = useCallback(() => {\r\n    const hasSlotFilled = data.some(item => item.slot.length > 0);\r\n  \r\n    if (!hasSlotFilled) {\r\n      setErrors('Please fill at least one slot.');\r\n      return;\r\n    }\r\n    const hasAllSlotsFilled = data.every(item =>\r\n      item.slot.every(slot => slot.startTime && slot.endTime)\r\n    );\r\n  \r\n    if (!hasAllSlotsFilled) {\r\n      setErrors('Please ensure all slots have both start time and end time.');\r\n      return;\r\n    }\r\n    nextStep();\r\n  }, [data, nextStep]);\r\n\r\n  return (\r\n    <div>\r\n      <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n        <div className='form_container_new' style={{ justifyContent: 'flex-start' }}>\r\n          {weekDays &&\r\n            weekDays.length > 0 &&\r\n            weekDays.map((day, mainIndex) => (\r\n              <Fragment key={mainIndex}>\r\n                <div className='form_section'>\r\n                  <h1 className='onboard_day' style={{ width: '5rem', color: 'white' }}>\r\n                    {day.day}\r\n                  </h1>\r\n                  <InputsSectionColumn style={{ padding: '0rem', margin: '0rem', backgroundColor: 'transparent' }}>\r\n                    {day.slot.length > 0 ? (\r\n                      day.slot.map((item, index) => (\r\n                        <div key={mainIndex + index} className={AvailabilityStyle.slotRow}>\r\n                          <div className='onboard_input'>\r\n                            <label>{index == 0 ? 'Start Time' : false}</label>\r\n                            <input\r\n                              placeholder='eg, 1:00 PM'\r\n                              value={item.startTime}\r\n                              name='startTime'\r\n                              type='time'\r\n                              // step=\"3600000\"\r\n                              onChange={e => handleChange(e, mainIndex, index, item)}\r\n                              min={index > 0 ? day.slot[index - 1].endTime : ''}\r\n                              required={true}\r\n                            />\r\n                            {item.startTime > (index > 0 && day.slot[index - 1].endTime) && (\r\n                              <p className='onboard_error'>\r\n                                {item.startTime < (index > 0 && day.slot[index - 1].endTime) ? 'Start time should be greater than previous End Time' : ''}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                          :\r\n                          <div className='onboard_input'>\r\n                            <label>{index == 0 ? 'End Time' : false}</label>\r\n                            <input\r\n                              icon='stopwatch'\r\n                              placeholder='eg, 2:00 PM'\r\n                              value={item.endTime}\r\n                              name='endTime'\r\n                              type='time'\r\n                              // step=\"3600000\"\r\n                              required={true}\r\n                              onChange={e => handleChange(e, mainIndex, index, item)}\r\n                              min={moment(item && item.startTime, 'HH:mm')\r\n                                .add(30, 'minutes')\r\n                                .format('HH:mm')}\r\n                            />\r\n                            {/* {item.startTime > item.endTime  && <p className='onboard_error'>{ \"End time should be greater than Start Time\"}</p>} */}\r\n                          </div>\r\n                          <button\r\n                            style={{ marginTop: index == 0 ? '2rem' : '0rem' }}\r\n                            className='table__button table__button--delete'\r\n                            onClick={e => {\r\n                              e.preventDefault();\r\n                              removeFormFields(index, mainIndex, day);\r\n                            }}\r\n                          >\r\n                            <svg className='table__button--icon-reds'>\r\n                              <use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n                            </svg>\r\n                            <span>Remove</span>\r\n                          </button>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <div className='onboard_button'>\r\n                        <button\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            addFormFields(day.slot);\r\n                          }}\r\n                        >\r\n                          Add time slot\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </InputsSectionColumn>\r\n                  {/* {\r\n\t\t\t\t\t\t\t\t\t\tday.slot.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t<div className='slot_button'>\r\n\t\t\t\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taddFormFields(day.slot)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>Add time slot</button>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t} */}\r\n                </div>\r\n              </Fragment>\r\n            ))}\r\n        </div>\r\n        {error && <span style={{ color: 'red' }}>\r\n          {error}\r\n        </span>}\r\n        <div className='onboard_down'>\r\n        <div className='onboard_down1'>\r\n        <span onClick={navigateLogin}>Back to login</span>\r\n        </div>\r\n          <div className='onboard_button'>\r\n            <button onClick={prevStep} className='prev'>\r\n              Previous\r\n            </button>\r\n            <button type='submit' onClick={handleNext}>Next</button>\r\n          </div>\r\n        </div>\r\n      </ModalForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessHours;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\DeleteService.js",["2424"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\InputBox\\index.js",["2425","2426","2427","2428","2429","2430","2431","2432"],"import moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport TextBox from './TextBox.module.css';\r\n\r\nconst InputBox = ({ type, placeholder, value, onChange, errorMessage, label, name, icon, style, disabled, defaultValue, min, required = false }) => {\r\n\tconst [inputType, setInputType] = useState(type);\r\n\r\n\tconst handlePasswordView = () => {\r\n\t\tif (type === 'password') {\r\n\t\t\tif (inputType === 'text') setInputType('password');\r\n\t\t\telse setInputType('text');\r\n\t\t}\r\n\t};\r\n\r\n\tconst disableDate = () => {\r\n\t\tvar today, dd, mm, yyyy;\r\n\t\ttoday = new Date();\r\n\t\tdd = today.getDate() + 1;\r\n\t\tmm = today.getMonth() + 1;\r\n\t\tyyyy = today.getFullYear();\r\n\t\treturn yyyy + \"-\" + \"mm\" + \"-\" + dd\r\n\t}\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className={TextBox.form_input__label}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className={TextBox.form_input__container} style={style}>\r\n\t\t\t\t<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={inputType}\r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmin={type === 'date' && moment().format('YYYY-MM-DD') || type === 'time' && min}\r\n\t\t\t\t\tdisabled={disabled ? disabled : false}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tclassName={TextBox.form_input__box}\r\n\t\t\t\t\trequired={required}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t{type === 'password' && (\r\n\t\t\t\t\t<svg className={TextBox.form_input__icon} onClick={handlePasswordView}>\r\n\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${inputType === 'text' ? 'visibility_off' : 'visibility'}`} />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\InputTime.js",["2433"],"import React from 'react';\r\nimport SelectInput from '../SelectBox/SelectInput';\r\nimport TextBox from './TextBox.module.css';\r\nimport colors from 'react-multi-date-picker/plugins/colors';\r\n\r\nconst InputTime = ({ type, placeholder, value, onChange, errorMessage, label, icon, style, disabled, defaultValue,typeTime, onChangeType }) => {\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className={TextBox.form_input__label}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className={TextBox.form_input__container} style={style}>\r\n\t\t\t\t<svg className={TextBox.form_input__icon} style={{ width: '6rem' }}>\r\n\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<input\r\n\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\ttype={type ? type : 'text'}\r\n\t\t\t\t\tid={label}\r\n\t\t\t\t\tdisabled={disabled ? disabled : false}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tclassName={TextBox.form_input__box}\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\ticon={false}\r\n\t\t\t\t\tname='Minutes'\r\n\t\t\t\t\tdefaultValue='Mins'\r\n\t\t\t\t\tvalue={typeTime}\r\n\t\t\t\t\tonChange={onChangeType} \r\n\t\t\t\t>\r\n\t\t\t\t\t<option value='Mins'>  Mins </option>\r\n\t\t\t\t\t<option value='Hours'>  Hours </option>\r\n\t\t\t\t</SelectInput>\r\n\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputTime;","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\components\\CheckOutForm\\index.js",["2434","2435","2436","2437"],"import React from \"react\";\r\nimport Styles from \"./CheckOutForm.module.css\";\r\n\r\nconst ProgressForm = ({ step }) => {\r\n\r\n  let style1 = Styles.step;\r\n  let style2 = Styles.step;\r\n  let style3 = Styles.step;\r\n  let style4 = Styles.step;\r\n  let style5 = Styles.step\r\n\r\n  if (step === 1) {\r\n    style1 = Styles.Complete + \" \" + Styles.step;\r\n  } else if (step === 2) {\r\n    style1 = Styles.Complete + \" \" + Styles.step;\r\n    style2 = Styles.Complete + \" \" + Styles.step;\r\n  } else if (step === 3) {\r\n    style1 = Styles.Complete + \" \" + Styles.step;\r\n    style2 = Styles.Complete + \" \" + Styles.step;\r\n    style3 = Styles.Complete + \" \" + Styles.step;\r\n  } else if (step === 4) {\r\n    style1 = Styles.Complete + \" \" + Styles.step;\r\n    style2 = Styles.Complete + \" \" + Styles.step;\r\n    style3 = Styles.Complete + \" \" + Styles.step;\r\n    style4 = Styles.Complete + \" \" + Styles.step;\r\n  } else if (step === 5) {\r\n    style1 = Styles.Complete + \" \" + Styles.step;\r\n    style2 = Styles.Complete + \" \" + Styles.step;\r\n    style3 = Styles.Complete + \" \" + Styles.step;\r\n    style4 = Styles.Complete + \" \" + Styles.step;\r\n    style5 = Styles.Complete + \" \" + Styles.step;\r\n  }\r\n\r\n  return (\r\n    <div className={Styles.container}>\r\n      <div className={style1}>\r\n        <div className={Styles.bullet}>\r\n          <span>1</span>\r\n        </div>\r\n        <p>Shipping  Details</p>\r\n      </div>\r\n      {/*   <div className={style2}>\r\n        <div className={Styles.bullet}>\r\n          <span>2</span>\r\n        </div>\r\n        <p>Shipping Details</p>\r\n      </div>\r\n      <div className={style3}>\r\n        <div className={Styles.bullet}>\r\n          <span>3</span>\r\n        </div>\r\n        <p>Payment Details</p>\r\n      </div>\r\n    <div className={style5}>\r\n        <div className={Styles.bullet}>\r\n          <span>4</span>\r\n        </div>\r\n        <p>Order Details</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressForm;","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ServiceScreen\\AddService.js",["2438","2439","2440","2441","2442","2443","2444","2445"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport SelectInput from '../../components/formInputs/SelectBox/SelectInput';\r\nimport MultiSelectBox from '../../components/formInputs/SelectBox/MultiSelectBox';\r\nimport ServiceStyle from './Service.module.css'\r\nimport { getEnableStylistListAction } from '../../redux/actions/stylistActions';\r\nimport InputTime from '../../components/formInputs/InputBox/InputTime';\r\nimport { GET_ENABLE_STYLER_LIST_RESET } from '../../redux/constants/stylistConstants';\r\n\r\nconst AddService = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst createService = useSelector((state) => state.createService);\r\n\tconst enableStylistList = useSelector((state) => state.enableStylistList);\r\n\tconst [stylistList, setStylistList] = useState([]);\r\n\tconst [text, setText] = useState('Service Category');\r\n\r\n\tconst hoursArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\tconst minutesArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];\r\n\r\n\tconst {\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tselectUpdateModel,\r\n\t\tenableServiceList,\r\n\r\n\t\ttitle,\r\n\t\tdescription,\r\n\t\tisMainService,\r\n\t\tsetIsMainService,\r\n\t\tcharges,\r\n\r\n\t\tsetTitle,\r\n\t\tsetDescription,\r\n\t\tsetCharges,\r\n\r\n\t\ttitleError,\r\n\t\tchargesError,\r\n\t\tdescriptionError,\r\n\r\n\t\tsetTitleError,\r\n\t\tsetChargesError,\r\n\t\tsetDescriptionError,\r\n\r\n\t\tservice,\r\n\t\tsetService,\r\n\t\tserviceError,\r\n\t\tsetServiceError,\r\n\r\n\t\tminutes,\r\n\t\tsetMinutes,\r\n\r\n\t\thours,\r\n\t\tsetHours,\r\n\t\thoursError,\r\n\t\tsetHoursError,\r\n\r\n\t\tstylistArray,\r\n\t\tsetStylistArray,\r\n\t\tstylistArrayError,\r\n\t\tsetStylistArrayError,\r\n\r\n\r\n\t\tleadTime,\r\n\t\tsetLeadTime,\r\n\t\tleadTimeError,\r\n\t\tsetLeadTimeError,\r\n\r\n\t\tbreakTime,\r\n\t\tsetBreakTime,\r\n\t\tbreakTimeError,\r\n\t\tsetBreakTimeError,\r\n\t} = data;\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getEnableStylistListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ENABLE_STYLER_LIST_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (isMainService) {\r\n\t\t\t\tsetText('Service Category');\r\n\t\t\t} else {\r\n\t\t\t\tsetText('Service');\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!stylistList.length) {\r\n\t\t\t\tif (enableStylistList &&\r\n\t\t\t\t\tenableStylistList.userInfo &&\r\n\t\t\t\t\tenableStylistList.userInfo.data &&\r\n\t\t\t\t\tenableStylistList.userInfo.data.result.length > 0) {\r\n\t\t\t\t\tenableStylistList.userInfo.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.name;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetStylistList(enableStylistList.userInfo.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[enableStylistList, stylistList]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive}>\r\n\t\t\t<ModalHeading heading={selectUpdateModel._id ? 'Update ' + text : 'Create New ' + text} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel={text + ' Name'}\r\n\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\tplaceholder='eg, hair cut'\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetTitle(event.target.value);\r\n\t\t\t\t\t\t\tsetTitleError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={titleError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputsSectionColumn style={{ gap: '1rem', padding: '0rem', margin: '0rem', alignItems: 'center', justifyContent: 'center' }}>\r\n\t\t\t\t\t\t<label className={ServiceStyle.form_input__label}>\r\n\t\t\t\t\t\t\tCategory/Service\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<InputsSectionColumn style={{ flexDirection: 'row', padding: '0rem', alignItems: 'center' }}>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', gap: '2rem' }}>\r\n\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='isVideo'\r\n\t\t\t\t\t\t\t\t\t\tchecked={isMainService}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetIsMainService(!isMainService);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tname='active' />\r\n\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t</InputsSectionColumn>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!isMainService &&\r\n\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\tvalue={service}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetService(e.target.value)\r\n\t\t\t\t\t\t\t\tsetServiceError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel='Select Service Category'\r\n\t\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\t\terrorMessage={serviceError}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\tSelect Service\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{enableServiceList &&\r\n\t\t\t\t\t\t\t\tenableServiceList.categories &&\r\n\t\t\t\t\t\t\t\tenableServiceList.categories.data &&\r\n\t\t\t\t\t\t\t\tenableServiceList.categories.data.map((res) => (\r\n\t\t\t\t\t\t\t\t\t<option value={res._id} key={res._id}>\r\n\t\t\t\t\t\t\t\t\t\t{res.title}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t}\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t{\r\n\t\t\t\t\t!isMainService &&\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<InputsSection>\r\n\t\t\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t<label className={ServiceStyle.form_input__label}>\r\n\t\t\t\t\t\t\t\t\tSelect Required Time\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<InputsSectionColumn style={{ flexDirection: 'row', padding: '0rem', alignItems: 'center', flexDirection: 'unset', display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t\t<SelectInput\r\n\t\t\t\t\t\t\t\t\t\tvalue={hours}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => { setHours(e.target.value); setHoursError('') }}\r\n\t\t\t\t\t\t\t\t\t\tlabel='Hours'\r\n\t\t\t\t\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\t\t\t\t\tname='Hours'\r\n\t\t\t\t\t\t\t\t\t\terrorMessage={hoursError}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{hoursArray &&\r\n\t\t\t\t\t\t\t\t\t\t\thoursArray.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\thoursArray.map((res) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={res} key={res}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{res} H\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</SelectInput>\r\n\t\t\t\t\t\t\t\t\t<h1>:</h1>\r\n\t\t\t\t\t\t\t\t\t<SelectInput\r\n\t\t\t\t\t\t\t\t\t\tvalue={minutes}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setMinutes(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minutes'\r\n\t\t\t\t\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\t\t\t\t\tname='Minutes'\r\n\t\t\t\t\t\t\t\t\t\terrorMessage={false}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{minutesArray &&\r\n\t\t\t\t\t\t\t\t\t\t\tminutesArray.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tminutesArray.map((res) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={res} key={res}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{res} M\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</SelectInput>\r\n\t\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t\t{hoursError && <p className=\"form_input__error\">{hoursError}</p>}\r\n\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t<InputsSectionColumn style={{ padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Charges'\r\n\t\t\t\t\t\t\t\t\ticon='cash'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, $ 00.00'\r\n\t\t\t\t\t\t\t\t\tvalue={charges}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetCharges(event.target.value);\r\n\t\t\t\t\t\t\t\t\t\tsetChargesError('');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\terrorMessage={chargesError}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t\t\t<InputsSection>\r\n\t\t\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\t\t\t\tlabel='Break Time'\r\n\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\tvalue={breakTime.value}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tstyle={{ padding: '0.9rem 1rem' }}\r\n\t\t\t\t\t\t\t\t\ttypeTime={breakTime.type}\r\n\t\t\t\t\t\t\t\t\tonChangeType={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetBreakTime({ ...breakTime, type: event.target.value });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetBreakTime({ ...breakTime, value: event.target.value });\r\n\t\t\t\t\t\t\t\t\t\tsetBreakTimeError('');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\terrorMessage={breakTimeError}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\t\t\t\tlabel='Lead Time'\r\n\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\tvalue={leadTime.value}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tstyle={{ padding: '0.9rem 1rem' }}\r\n\t\t\t\t\t\t\t\t\ttypeTime={leadTime.type}\r\n\t\t\t\t\t\t\t\t\tonChangeType={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetLeadTime({ ...leadTime, type: event.target.value });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetLeadTime({ ...leadTime, value: event.target.value });\r\n\t\t\t\t\t\t\t\t\t\tsetLeadTimeError('');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\terrorMessage={leadTimeError}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t\t\t<InputsSection>\r\n\t\t\t\t\t\t\t{/* <MultiSelectBox\r\n\t\t\t\t\t\t\t\tmultiple={true}\r\n\t\t\t\t\t\t\t\tlabel='Select Stylist'\r\n\t\t\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\t\t\terrorMessage={stylistArrayError}\r\n\t\t\t\t\t\t\t\tvalue={stylistArray.length ? [...stylistArray] : null}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStylistArray(event);\r\n\t\t\t\t\t\t\t\t\tsetStylistArrayError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tchildren={stylistList}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</MultiSelectBox> */}\r\n\r\n\t\t\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\ticon='info'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter Description'\r\n\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetDescription(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetDescriptionError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={descriptionError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputsSection>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t{createService && createService.loading ? (\r\n\t\t\t\t\t<ModalButton label={'Please wait'} icon={'plus'} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ModalButton label={selectUpdateModel._id ? 'Update ' + text : 'Add New'} icon={selectUpdateModel._id ? 'edit' : 'plus'} onClick={handleSubmit} />\r\n\t\t\t\t)}\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddService;\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\CreateSlotModal.js",["2446"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\MultiSelectBox.js",["2447","2448","2449"],"import React, { useState } from 'react';\r\nimport './SelectBox.css';\r\nimport Select, { components } from 'react-select';\r\n\r\nconst MultiSelectBox = ({ children, icon, name, label, value, onChange, errorMessage, multiple, inputValue, onInputChange , style }) => {\r\n\tconst colourStyles = {\r\n\t\tmenuList: (styles) => ({\r\n\t\t\t...styles,\r\n\t\t\tbackgroundColor: '#333',\r\n\t\t\tzIndex: 999,\r\n\t\t\twidth: '100%'\r\n\t\t}),\r\n\t\toption: (styles, { isFocused, isSelected }) => ({\r\n\t\t\t...styles,\r\n\t\t\tcolor: isSelected ? '#FFF' : '#FFF',\r\n\t\t\tbackgroundColor: isSelected ? '#333' : '#333',\r\n\t\t\tzIndex: 1\r\n\t\t}),\r\n\t\tmenu: (base) => ({\r\n\t\t\t...base,\r\n\t\t\tzIndex: 999,\r\n\t\t})\r\n\t};\r\n\r\n\r\n\tconst NoOptionsMessage = (props) => {\r\n\t\treturn (\r\n\t\t\t<components.NoOptionsMessage {...props}>\r\n\t\t\t\t<span>No users found with name</span>\r\n\t\t\t</components.NoOptionsMessage>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"form_input\" style={style}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className=\"form_input__label\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className=\"textBox\">\r\n\t\t\t\t{icon && (\r\n\t\t\t\t\t<label className=\"textBox__label\" style={{ top: '0rem' }}>\r\n\t\t\t\t\t\t<svg className=\"textBox__label--icon\">\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='textBox__input' >\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tisMulti={multiple}\r\n\t\t\t\t\t\toptions={children}\r\n\t\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tstyles={colourStyles}\r\n\t\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\t\tclassName='textBox__input--box'\r\n\t\t\t\t\t\tonInputChange={onInputChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{errorMessage && <p className=\"form_input__error\">{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MultiSelectBox;\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tisMulti={multiple}\r\n\t\t\t\t\t\tid={name}\r\n\t\t\t\t\t\tclassName='react-select'\r\n\t\t\t\t\t\tclassName='textBox__input--box'\r\n\t\t\t\t\t\tisClearable={false}\r\n\t\t\t\t\t\toptions={children}\r\n\t\t\t\t\t\tstyles={colourStyles}\r\n\t\t\t\t\t\t// components={{ NoOptionsMessage }}\r\n\t\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\r\n\r\n\t\t\t\t\t\t// inputValue={value}\r\n\t\t\t\t\t\t// onInputChange={onInputChange}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\t// only set the input when the action that caused the\r\n\t\t\t\t\t\t\t// change equals to \"input-change\" and ignore the other\r\n\t\t\t\t\t\t\t// ones like: \"set-value\", \"input-blur\", and \"menu-close\"\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") setInput(value); // <---\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/> */}","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddSlotModal.js",["2450","2451","2452","2453","2454","2455","2456"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\DeleteAvailability.js",["2457","2458","2459"],"import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalButton from \"../../components/Modal/ModalButton\";\r\nimport ModalForm from \"../../components/Modal/ModalForm\";\r\nimport ModalHeading from \"../../components/Modal/ModalHeading\";\r\nimport { deleteAppointmentAction, deleteSlotAction } from \"../../redux/actions/appointmentAction\";\r\nimport moment from \"moment\";\r\n\r\nconst deleteAvailability = ({ data }) => {\r\n  const {\r\n    deleteModalActive,\r\n    setDeleteModalActive,\r\n    handleAddModalClose,\r\n    appointmentId,\r\n    userLogin,\r\n    dispatch,\r\n    appointmentTime\r\n  } = data;\r\n\r\n  const handleDelelteSubmit = () => {\r\n    //dispatch(deleteAppointmentAction(appointmentId));\r\n    dispatch(deleteSlotAction(appointmentId));\r\n    setDeleteModalActive(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal show={deleteModalActive}>\r\n        <ModalHeading\r\n          heading={\"Delete Slot\"}\r\n          onClose={handleAddModalClose}\r\n        />\r\n        <ModalForm style={{ marginBottom: \"2.5rem\" }}>\r\n          <p className=\"modal__text\">\r\n            Are you sure you want to delete the slot on <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format(\"MM-DD-YY\")}</span> &nbsp; at &nbsp;\r\n            <span style={{ fontStyle: 'bold' }}>{moment(appointmentTime).format('hh:mm A')}</span>\r\n            {\" \"}??\r\n          </p>\r\n          <div style={{ display: \"flex\", gap: \"2rem\" }}>\r\n            <ModalButton\r\n              label=\"Delete\"\r\n              icon={\"delete\"}\r\n              onClick={handleDelelteSubmit}\r\n            />\r\n            <ModalButton\r\n              varient=\"danger\"\r\n              label=\"Cancel\"\r\n              onClick={handleAddModalClose}\r\n            />\r\n          </div>\r\n        </ModalForm>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default deleteAvailability;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\calendarData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddBusinessHoursWeekly.js",["2460","2461","2462","2463","2464","2465","2466","2467","2468","2469"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport AvailabilityStyle from './StylistAvailability.module.css';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addBulkAvailabilityAction } from '../../redux/actions/availabilityActions';\r\nimport { WeekDaysArray } from './calendarData';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\n\r\nconst AddBusinessHoursWeekly = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst {\r\n\t\tweekDays,\r\n\t\tsetWeekDays,\r\n\t\tstylistId,\r\n\t\taddBuinessHoursModal,\r\n\t\tsetAddBuinessHoursModal,\r\n\t\tbusinessHourDetail,\r\n\t\taddBulkAvailabilitys,\r\n\t\tsetresetHandler,\r\n\t\tresetHandler,\r\n\t\tsetresetslot,\r\n\t\thandleResetSlot,\r\n\t\trecurringType,\r\n\t\tsetRecurringType\r\n\t} = data;\r\n\r\n\tconst [error, setError] = useState(false)\r\n\r\n\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t}\r\n\r\n\tconst handleChange = (e, mainIndex, index, item) => {\r\n\t\te.preventDefault()\r\n\t\tlet newFormValues = [...weekDays];\r\n\t\tweekDays[mainIndex].slot[index][e.target.name] = e.target.value;\r\n\t\titem[e.target.name] = e.target.value;\r\n\t\tsetWeekDays([...newFormValues]);\r\n\t}\r\n\r\n\tconst addFormFields = (slot) => {\r\n\t\tif (slot) {\r\n\t\t\tslot.push({\r\n\t\t\t\tstartTime: \"\",\r\n\t\t\t\tendTime: \"\"\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetWeekDays([...weekDays])\r\n\t}\r\n\r\n\r\n\tconst removeFormFields = (i, mainIndex, day) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].slot.splice(i, 1);\r\n\t\tsetWeekDays(newFormValues);\r\n\t\tday.slot.splice(i, 1);\r\n\t}\r\n\r\n\tconst copyToAllHandler = (e, slot) => {\r\n\r\n\t\te.preventDefault();\r\n\t\t// const newFormValues = [...weekDays];\r\n\t\t// const dataArray = weekDays[i].slot;\r\n\t\tlet tmpArray = [];\r\n\t\tWeekDaysArray.forEach(element => {\r\n\t\t\ttmpArray.push({ day: element.day, slot: slot },);\r\n\t\t});\r\n\r\n\r\n\t\tsetWeekDays(tmpArray);\r\n\r\n\t\tsetresetHandler(false);\r\n\t}\r\n\r\n\r\n\tconst addBulkAvailabilityHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(addBulkAvailabilityAction({\r\n\t\t\tslots: businessHourDetail ? businessHourDetail.slots : weekDays,\r\n\t\t\tid: businessHourDetail && businessHourDetail._id,\r\n\t\t\trecurringType: recurringType.value,\r\n\t\t}, stylistId));\r\n\t};\r\n\r\n\r\n\r\n\tfunction errorMessageHandler(item, index, day) {\r\n\t\tif (item < (index > 0 && day[index - 1].endTime)) {\r\n\t\t\tsetError(true);\r\n\t\t\treturn \"End Time should be greater than Start Time\"\r\n\t\t} else {\r\n\t\t\tsetError(false);\r\n\t\t\treturn \"\"\r\n\t\t}\r\n\t}    \r\n\r\n\treturn (\r\n\t\t<Modal show={addBuinessHoursModal}>\r\n\t\t\t<ModalHeading heading={'Weekly Business Hours'} onClose={() => setAddBuinessHoursModal(false)} />\r\n\t\t\t<ModalForm onSubmit={(e) => addBulkAvailabilityHandler(e)} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t{addBulkAvailabilitys.loading && <div className={AvailabilityStyle.slotLoading} >\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t<div className={AvailabilityStyle.slotLoadingTxt}>Unblocking slot. Please wait it may take a while</div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t<div style={{ height: '48vh', overflow: 'auto', marginBottom: '2rem' }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"flex-start\" }} >\r\n\t\t\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', backgroundColor: '#fff', padding: '5px', marginBottom: '1rem', borderRadius: '1rem' }} >\r\n\t\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\t\tlabel=\"Select Recurring Type\"\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tvalue={recurringType.value}\r\n\t\t\t\t\t\t\t\terrorMessage={recurringType.error}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setRecurringType({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"week\">\r\n\t\t\t\t\t\t\t\t\tWeek\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"month\">\r\n\t\t\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"year\">\r\n\t\t\t\t\t\t\t\t\tYear\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InputsSection style={{ flexDirection: 'column', width: '55vw' }}>\r\n\t\t\t\t\t\t{/* {!resetHandler &&<div className={AvailabilityStyle.undoButtonslot}>\r\n\t\t\t\t\t <button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleResetSlot(e)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>Undo</button>\r\n\r\n\t\t\t\t\t</div>} */}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweekDays &&\r\n\t\t\t\t\t\t\tweekDays.length > 0 &&\r\n\t\t\t\t\t\t\tweekDays.map((day, mainIndex) => (\r\n\t\t\t\t\t\t\t\t<Fragment key={mainIndex}>\r\n\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.dayContainer} >\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ width: '5rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{day.day}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<InputsSectionColumn style={{ padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tday.slot.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tday.slot.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={mainIndex + index} className={AvailabilityStyle.slotRow}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index == 0 ? 'Start Time' : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='eg, 1:00 PM'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.startTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='startTime'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => handleChange(e, mainIndex, index, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={index > 0 ? day.slot[index - 1].endTime : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={item.startTime < (index > 0 && day.slot[index - 1].endTime) ? \"Start time should be greater than previous End Time\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index == 0 ? 'End Time' : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='eg, 2:00 PM'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.endTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='endTime'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => handleChange(e, mainIndex, index, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={index > 0 ? day.slot[index - 1].endTime : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={item.endTime < (index > 0 && day.slot[index - 1].endTime) ? \"End Time should be greater than Start Time\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button style={{ marginTop: index == 0 ? '2rem' : '0rem' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='table__button table__button--delete'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveFormFields(index, mainIndex, day)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Remove</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.slotRow}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddFormFields(day.slot)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Add time slot</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tday.slot.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={AvailabilityStyle.busBtn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className={AvailabilityStyle.addButtonslot}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddFormFields(day.slot)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Add time slot</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <button className={AvailabilityStyle.copySlot}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcopyToAllHandler(e,day.slot);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>Copy to All</button> */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t</InputsSection>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t<ModalButton\r\n\t\t\t\t\t\tlabel={addBulkAvailabilitys.loading ? \"Please wait...\" : businessHourDetail == null ? \"Add time slot\" : \"Update Time Slot\"}\r\n\t\t\t\t\t\tdisabled={addBulkAvailabilitys.loading ? true : error ? true : false}\r\n\t\t\t\t\t\ticon={addBulkAvailabilitys.loading ? \"\" : businessHourDetail == null ? 'plus' : 'edit'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddBusinessHoursWeekly;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistSessionScreen\\AddAvailability.js",["2470","2471","2472","2473","2474","2475"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MultiSelectBox from '../../components/formInputs/SelectBox/MultiSelectBox';\r\nimport { getAllEnableSubServiceAction } from '../../redux/actions/serviceActions';\r\nimport { GET_ALL_ENABLE_SUB_SERVICE_RESET } from '../../redux/constants/serviceConstants';\r\nimport InputTime from '../../components/formInputs/InputBox/InputTime';\r\nimport { USER_LIST_RESET } from '../../redux/constants/userConstants';\r\nimport { getUserListAction } from '../../redux/actions/userActions';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\n\r\nconst AddAvailability = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst enableSubServiceList = useSelector((state) => state.enableSubServiceList);\r\n\tconst userList = useSelector((state) => state.userList);\r\n\tconst [serviceList, setServiceList] = useState([]);\r\n\tconst [userDataList, setUserDataList] = useState([]);\r\n\tconst [input, setInput] = useState(\"\");\r\n\r\n\tconst {\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tselectUpdateModel,\r\n\t\tsetSelectUpdateModel,\r\n\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\r\n\t\tnameError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\tsetUserId,\r\n\r\n\t\tsetNameError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\r\n\t\tdate,\r\n\t\tsetDate,\r\n\t\tdateError,\r\n\t\tsetDateError,\r\n\r\n\t\tgender,\r\n\t\tsetGender,\r\n\r\n\t\tstartTime,\r\n\t\tstartTimeError,\r\n\t\tsetStartTime,\r\n\t\tsetStartTimeError,\r\n\r\n\t\trequiredTime,\r\n\t\tsetRequiredTime,\r\n\t\trequiredTimeError,\r\n\t\tsetRequiredTimeError,\r\n\r\n\t\tservice,\r\n\t\tsetService,\r\n\t\tserviceError,\r\n\t\tsetServiceError,\r\n\t\tisUpdate,\r\n\t\thandleUpdateSubmit,\r\n\t\tserviceIds,\r\n\t\tsetServiceIds,\r\n\t\tgenderError, setGenderError\r\n\t} = data;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getUserListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: USER_LIST_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getAllEnableSubServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SUB_SERVICE_RESET });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!serviceList.length) {\r\n\t\t\t\tif (enableSubServiceList &&\r\n\t\t\t\t\tenableSubServiceList.categories &&\r\n\t\t\t\t\tenableSubServiceList.categories.data &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.length > 0) {\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetServiceList(enableSubServiceList.categories.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[enableSubServiceList, serviceList]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!userDataList.length) {\r\n\t\t\t\tif (userList &&\r\n\t\t\t\t\tuserList.userInfo &&\r\n\t\t\t\t\tuserList.userInfo.data &&\r\n\t\t\t\t\tuserList.userInfo.data.result.length > 0) {\r\n\t\t\t\t\tuserList.userInfo.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.name;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetUserDataList(userList.userInfo.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[userList, userDataList]\r\n\t);\r\n\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive}>\r\n\t\t\t<ModalHeading heading={isUpdate ? 'Update Appointment' : 'Book Appointment'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisUpdate ?\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Select Date'\r\n\t\t\t\t\t\t\t\ticon='calendar'\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tplaceholder='Appointment Date'\r\n\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\tvalue={convert(date)}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetDate(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetDateError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={dateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<InputBox style={{paddingLeft:\"1rem\"}}\r\n\t\t\t\t\t\t\t\tlabel='Select Date'\r\n\t\t\t\t\t\t\t\ticon='calendar'\r\n\t\t\t\t\t\t\t\tplaceholder='Appointment Date'\r\n\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\tvalue={convert(date)}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetDate(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetDateError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={dateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisUpdate ?\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, 12:00 PM'\r\n\t\t\t\t\t\t\t\tvalue={startTime}\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetStartTimeError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTimeError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, 12:00 PM'\r\n\t\t\t\t\t\t\t\tvalue={startTime}\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetStartTimeError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTimeError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<MultiSelectBox\r\n\t\t\t\t\t\tlabel='Select Service'\r\n\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\terrorMessage={serviceError}\r\n\t\t\t\t\t\tinputValue={service}\r\n\t\t\t\t\t\tchildren={serviceList}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetRequiredTime(event.requiredTime);\r\n\t\t\t\t\t\t\tsetService(event.title)\r\n\t\t\t\t\t\t\tsetServiceIds({ ...serviceIds, mainServiceId: event._id, subServiceId: event.service._id })\r\n\t\t\t\t\t\t\tsetServiceError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") {\r\n\t\t\t\t\t\t\t\t//setInput(value);\r\n\t\t\t\t\t\t\t\tsetService(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\t\tlabel='Required Time'\r\n\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\tvalue={requiredTime}\r\n\t\t\t\t\t\t\ttype='Number'\r\n\t\t\t\t\t\t\tstyle={{ padding: '0.9rem 1rem' }}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetRequiredTime(event.target.value);\r\n\t\t\t\t\t\t\t\tsetRequiredTimeError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={requiredTimeError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<MultiSelectBox\r\n\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\tlabel='Client Name'\r\n\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.name);\r\n\t\t\t\t\t\t\tsetUserId(event._id)\r\n\t\t\t\t\t\t\tsetGender(event.gender)\r\n\t\t\t\t\t\t\tsetEmail(event.email);\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.phone));\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tchildren={userDataList}\r\n\t\t\t\t\t\tinputValue={name}\r\n\t\t\t\t\t\tonInputChange={(value, action) => {\r\n\t\t\t\t\t\t\tif (action.action === \"input-change\") {\r\n\t\t\t\t\t\t\t\t//setInput(value);\r\n\t\t\t\t\t\t\t\tsetName(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\t\t\t\t\t{/* <InputBox\r\n\t\t\t\t\t\tlabel='Client Name'\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tplaceholder='Jon Doe'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t{/* <InputBox\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<SelectBox style={{marginTop:\"0rem\"}}\r\n\t\t\t\t\t\tlabel='Gender'\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value)\r\n\t\t\t\t\t\t\tsetGenderError('')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className='optionBox' value=\"\">--Select Gender--</option>\r\n\t\t\t\t\t\t<option value='male'>Male</option>\r\n\t\t\t\t\t\t<option value='female'>Female</option>\r\n\t\t\t\t\t\t<option value='other'> Other</option>\r\n\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection style={{alignItems:\"center\"}}>\r\n\t\t\t\t\t<InputBox \r\n\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\ticon='phone'\r\n\t\t\t\t\t\tplaceholder='eg, 123 456 7890'\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* <SelectBox style={{marginTop:\"0rem\"}}\r\n\t\t\t\t\t\tlabel='Gender'\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value)\r\n\t\t\t\t\t\t\tsetGenderError('')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon='user'\r\n\t\t\t\t\t\tname='Service'\r\n\t\t\t\t\t\terrorMessage={genderError}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option className='optionBox' value=\"\">--Select Gender--</option>\r\n\t\t\t\t\t\t<option value='male'>Male</option>\r\n\t\t\t\t\t\t<option value='female'>Female</option>\r\n\t\t\t\t\t\t<option value='other'> Other</option>\r\n\t\t\t\t\t</SelectBox> */}\r\n\t\t\t\t\t <InputBox\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/> \r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t<ModalButton label={isUpdate ? 'Update Appointment' : 'Book Now'} icon={isUpdate ? 'edit' : 'plus'} onClick={isUpdate ? handleUpdateSubmit : handleSubmit} />\r\n\t\t\t\t\t<ModalButton varient='danger' label='Cancel' icon='delete' onClick={handleAddModalClose} />\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddAvailability;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\FileUpload\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\MyProfileScreen.js",["2476"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport { toast } from 'react-toastify';\r\nimport MyProfileScreenSkeleton from '../../components/Skeletons/AppSettings/MyProfileScreenSkeleton';\r\n\r\nconst MyProfileScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [myProfileScreenData, setMyProfileScreenData] = useState({});\r\n\tconst [screenHeadingText, setScreenHeadingText] = useState({ value: '', error: '' });\r\n\tconst [yourStylistDetailsText, setYourStylistDetails] = useState({ value: '', error: '' });\r\n\tconst [yourSalonDetailsText, setYourSalonDetailsText] = useState({ value: '', error: '' });\r\n\tconst [yourPreviousOrdersText, setYourPreviousOrdersText] = useState({ value: '', error: '' });\r\n\tconst [logoutButtonText, setLogoutButtonText] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (myProfileScreenData && myProfileScreenData._id) {\r\n\t\t\t\tsetScreenHeadingText({ value: myProfileScreenData.profileScreenHeadingText, error: '' });\r\n\t\t\t\tsetYourStylistDetails({ value: myProfileScreenData.profileStylistDetailText, error: '' });\r\n\t\t\t\tsetYourSalonDetailsText({ value: myProfileScreenData.profileSalonDetailText, error: '' });\r\n\t\t\t\tsetYourPreviousOrdersText({ value: myProfileScreenData.profilePreviousOrderText, error: '' });\r\n\t\t\t\tsetLogoutButtonText({ value: myProfileScreenData.profileLogoutText, error: '' });\r\n\t\t\t\tsetImageSrc(myProfileScreenData.profileHeaderImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[myProfileScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('profile', token);\r\n\t\t\tsetMyProfileScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t  \r\n\t\tlet isFormValid = true;\r\n\t\tconst validateInput = (value, setError, errorMessage) => {\r\n\t\t\tif (!value || !value.trim()) {\r\n\t\t\t  setError({ value, error: errorMessage });\r\n\t\t\t  isFormValid = false;\r\n\t\t\t} else {\r\n\t\t\t  setError({ value, error: '' });\r\n\t\t\t}\r\n\t\t  };\r\n\t  \r\n\t\tvalidateInput(screenHeadingText.value, setScreenHeadingText, 'Please enter screen heading text');\r\n\t\tvalidateInput(yourStylistDetailsText.value, setYourStylistDetails, 'Please enter your stylist details text');\r\n\t\tvalidateInput(yourSalonDetailsText.value, setYourSalonDetailsText, 'Please enter your salon details text');\r\n\t\tvalidateInput(yourPreviousOrdersText.value, setYourPreviousOrdersText, 'Please enter your previous orders text');\r\n\t\tvalidateInput(logoutButtonText.value, setLogoutButtonText, 'Please enter logout button text');\r\n\t  \r\n\t\tif (!imageSrc) {\r\n\t\t  setUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t  isFormValid = false;\r\n\t\t} else {\r\n\t\t  setUploadFileData({ ...uploadFileData, error: '' });\r\n\t\t}\r\n\t  \r\n\t\tif (isFormValid) {\r\n\t\t  let formData = new FormData();\r\n\t\t  formData.append('profileScreenHeadingText', screenHeadingText.value);\r\n\t\t  formData.append('profileStylistDetailText', yourStylistDetailsText.value);\r\n\t\t  formData.append('profileSalonDetailText', yourSalonDetailsText.value);\r\n\t\t  formData.append('profilePreviousOrderText', yourPreviousOrdersText.value);\r\n\t\t  formData.append('profileLogoutText', logoutButtonText.value);\r\n\t  \r\n\t\t  try {\r\n\t\t\tsetLoading(true);\r\n\t\t\tawait setSalonAppSetting('profile', formData, token);\r\n\t\t\ttoast.success('My Profile screen settings updated!');\r\n\t\t\tgetData();\r\n\t\t  } catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t  }\r\n\t\t  setLoading(false);\r\n\t\t}\r\n\t  };\r\n\r\n\t  const handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>My Profile Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<MyProfileScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t\t<InputBox label='My Profile Screen Heading Text' placeholder='eg, Shop' value={screenHeadingText.value}\r\n \t\t\t\t\t\t\t\t onChange={(e) => setScreenHeadingText({ value: e.target.value, error: '' })}\r\n \t\t\t\t\t\t\t\t\t\t errorMessage={screenHeadingText.error}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\tlabel='Your Stylist Details Text'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='eg, Your Stylist Details'\r\n\t\t\t\t\t\t\t\t\t\tvalue={yourStylistDetailsText.value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setYourStylistDetails({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\t\terrorMessage={yourStylistDetailsText.error}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Your Salon Details Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Your Salon Details'\r\n\t\t\t\t\t\t\t\t\tvalue={yourSalonDetailsText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setYourSalonDetailsText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={yourSalonDetailsText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Your Previous Orders Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Your Previous Orders'\r\n\t\t\t\t\t\t\t\t\tvalue={yourPreviousOrdersText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setYourPreviousOrdersText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={yourPreviousOrdersText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Logout Button Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, Logout from your account'\r\n\t\t\t\t\t\t\t\tvalue={logoutButtonText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setLogoutButtonText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={logoutButtonText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Header Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyProfileScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\ShopScreen.js",["2477"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport { toast } from 'react-toastify';\r\nimport HomeScreenSkeleton from '../../components/Skeletons/AppSettings/HomeScreenSkeleton';\r\n\r\nconst ShopScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [shopScreenData, setShopScreenData] = useState({});\r\n\tconst [screenHeadingText, setScreenHeadingText] = useState({ value: '', error: '' });\r\n\tconst [searchBoxText, setSearchBoxText] = useState({ value: '', error: '' });\r\n\tconst [myCartHeadingText, setMyCartHeadingText] = useState({ value: '', error: '' });\r\n\tconst [myOrdersHeadingText, setMyOrdersHeadingText] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (shopScreenData && shopScreenData._id) {\r\n\t\t\t\tsetScreenHeadingText({ value: shopScreenData.shopScreenHeadingText, error: '' });\r\n\t\t\t\tsetSearchBoxText({ value: shopScreenData.shopSearchBoxText, error: '' });\r\n\t\t\t\tsetMyCartHeadingText({ value: shopScreenData.shopMyCartText, error: '' });\r\n\t\t\t\tsetMyOrdersHeadingText({ value: shopScreenData.shopMyOrdersText, error: '' });\r\n\t\t\t\tsetImageSrc(shopScreenData.shopHeaderImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[shopScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('shop', token);\r\n\t\t\tsetShopScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (screenHeadingText.value === '' || screenHeadingText.value.trim() === '') {\r\n\t\t\tsetScreenHeadingText({ ...screenHeadingText, error: 'Please enter screen heading text' });\r\n\t\t} else if (searchBoxText.value === '' || searchBoxText.value.trim() === '') {\r\n\t\t\tsetSearchBoxText({ ...searchBoxText, error: 'Please enter search box text' });\r\n\t\t} else if (myCartHeadingText.value === '' || myCartHeadingText.value.trim() === '') {\r\n\t\t\tsetMyCartHeadingText({ ...myCartHeadingText, error: 'Please enter my cart heading text' });\r\n\t\t} else if (myOrdersHeadingText.value === '' || myOrdersHeadingText.value.trim() === '') {\r\n\t\t\tsetMyOrdersHeadingText({\r\n\t\t\t\t...myOrdersHeadingText,\r\n\t\t\t\terror: 'Please enter my orders heading text'\r\n\t\t\t});\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append('shopScreenHeadingText', screenHeadingText.value);\r\n\t\t\tformData.append('shopSearchBoxText', searchBoxText.value);\r\n\t\t\tformData.append('shopMyCartText', myCartHeadingText.value);\r\n\t\t\tformData.append('shopMyOrdersText', myOrdersHeadingText.value);\r\n\t\t\tuploadFileData.data.length > 0 && formData.append('shopHeaderImageURL', uploadFileData.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('shop', formData, token);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\ttoast.success('Shop screen settings updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>Shop Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<HomeScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Screen Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Shop'\r\n\t\t\t\t\t\t\t\t\tvalue={screenHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setScreenHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={screenHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Search Box Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Search Products'\r\n\t\t\t\t\t\t\t\t\tvalue={searchBoxText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSearchBoxText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={searchBoxText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='My Cart Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, My Cart'\r\n\t\t\t\t\t\t\t\t\tvalue={myCartHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setMyCartHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={myCartHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='My Orders Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, My Orders'\r\n\t\t\t\t\t\t\t\t\tvalue={myOrdersHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setMyOrdersHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={myOrdersHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Header Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShopScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SubscriptionScreen\\AddPriceModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\VideosScreen.js",["2478"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport VideosScreenSkeleton from '../../components/Skeletons/AppSettings/VideosScreenSkeleton';\r\n\r\nconst VideosScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [videoScreenData, setVideoScreenData] = useState({});\r\n\tconst [screenHeadingText, setScreenHeadingText] = useState({ value: '', error: '' });\r\n\tconst [categoriesHeadingText, setCategoriesHeadingText] = useState({ value: '', error: '' });\r\n\tconst [stylistVideosHeadingText, setStylistVideosHeadingText] = useState({ value: '', error: '' });\r\n\tconst [mostWatchedVideosHeadingText, setMostWatchedVideosHeadingText] = useState({ value: '', error: '' });\r\n\tconst [myFavoriteVideosHeadingText, setMyFavoriteVideosHeadingText] = useState({ value: '', error: '' });\r\n\tconst [mySalonVideosHeadingText, setMySalonVideosHeadingText] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (videoScreenData && videoScreenData._id) {\r\n\t\t\t\tsetScreenHeadingText({ value: videoScreenData.videoScreenHeadingText, error: '' });\r\n\t\t\t\tsetCategoriesHeadingText({ value: videoScreenData.videoCategoriesHeadingText, error: '' });\r\n\t\t\t\tsetStylistVideosHeadingText({ value: videoScreenData.videoStylistVideoHeadingText, error: '' });\r\n\t\t\t\tsetMostWatchedVideosHeadingText({ value: videoScreenData.videoMostWatchedVideoHeadingText, error: '' });\r\n\t\t\t\tsetMostWatchedVideosHeadingText({ value: videoScreenData.videoMostWatchedVideoHeadingText, error: '' });\r\n\t\t\t\tsetMyFavoriteVideosHeadingText({ value: videoScreenData.videoMyFavoriteVideoHeadingText, error: '' });\r\n\t\t\t\tsetImageSrc(videoScreenData.videoHeaderImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[videoScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('video', token);\r\n\t\t\tsetVideoScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (screenHeadingText.value === '' || screenHeadingText.value.trim() === '') {\r\n\t\t\tsetScreenHeadingText({ ...screenHeadingText, error: 'Please enter screen heading text' });\r\n\t\t} else if (categoriesHeadingText.value === '' || categoriesHeadingText.value.trim() === '') {\r\n\t\t\tsetCategoriesHeadingText({ ...categoriesHeadingText, error: 'Please enter categories heading text' });\r\n\t\t} else if (stylistVideosHeadingText.value === '' || stylistVideosHeadingText.value.trim() === '') {\r\n\t\t\tsetStylistVideosHeadingText({ ...stylistVideosHeadingText, error: 'Please enter stylist videos text' });\r\n\t\t} else if (mostWatchedVideosHeadingText.value === '' || mostWatchedVideosHeadingText.value.trim() === '') {\r\n\t\t\tsetMostWatchedVideosHeadingText({\r\n\t\t\t\t...mostWatchedVideosHeadingText,\r\n\t\t\t\terror: 'Please enter most watched text'\r\n\t\t\t});\r\n\t\t} else if (myFavoriteVideosHeadingText.value === '' || myFavoriteVideosHeadingText.value.trim() === '') {\r\n\t\t\tsetMyFavoriteVideosHeadingText({\r\n\t\t\t\t...myFavoriteVideosHeadingText,\r\n\t\t\t\terror: 'Please enter my favorite videos text'\r\n\t\t\t});\r\n\t\t} else if (mySalonVideosHeadingText.value === '' || mySalonVideosHeadingText.value.trim() === '') {\r\n\t\t\tsetMySalonVideosHeadingText({ ...mySalonVideosHeadingText, error: 'Please enter my salon videos heading text' });\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append('videoScreenHeadingText', screenHeadingText.value);\r\n\t\t\tformData.append('videoCategoriesHeadingText', categoriesHeadingText.value);\r\n\t\t\tformData.append('videoStylistVideoHeadingText', stylistVideosHeadingText.value);\r\n\t\t\tformData.append('videoMostWatchedVideoHeadingText', mostWatchedVideosHeadingText.value);\r\n\t\t\tformData.append('videoMyFavoriteVideoHeadingText', myFavoriteVideosHeadingText.value);\r\n\t\t\tformData.append('videoMySalonVideoHeadingText', mySalonVideosHeadingText.value);\r\n\t\t\tuploadFileData.data.length > 0 && formData.append('videoHeaderImageURL', uploadFileData.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('video', formData, token);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\ttoast.success('Videos screen settings updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>Videos Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<VideosScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Screen Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Videos'\r\n\t\t\t\t\t\t\t\t\tvalue={screenHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setScreenHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={screenHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Categories Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Categories'\r\n\t\t\t\t\t\t\t\t\tvalue={categoriesHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setCategoriesHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={categoriesHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Stylist Videos Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Stylist Videos'\r\n\t\t\t\t\t\t\t\t\tvalue={stylistVideosHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStylistVideosHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={stylistVideosHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Most Watched Videos Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Most Watched Videos'\r\n\t\t\t\t\t\t\t\t\tvalue={mostWatchedVideosHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setMostWatchedVideosHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={mostWatchedVideosHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Header Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='My Favorite Videos Heading Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, My Favorite Videos'\r\n\t\t\t\t\t\t\t\tvalue={myFavoriteVideosHeadingText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setMyFavoriteVideosHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={myFavoriteVideosHeadingText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='My Salon Videos Heading Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, My Salon Videos'\r\n\t\t\t\t\t\t\t\tvalue={mySalonVideosHeadingText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setMySalonVideosHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={mySalonVideosHeadingText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InputSections>\r\n\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VideosScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\HomeScreen.js",["2479"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport { toast } from 'react-toastify';\r\nimport HomeScreenSkeleton from '../../components/Skeletons/AppSettings/HomeScreenSkeleton';\r\n\r\nconst HomeScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [homeScreenData, setHomeScreenData] = useState({});\r\n\tconst [stylistHeadingText, setStylistHeadingText] = useState({ value: '', error: '' });\r\n\tconst [productsHeadingText, setProductsHeadingText] = useState({ value: '', error: '' });\r\n\tconst [videosHeadingText, setVideosHeadingText] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (homeScreenData && homeScreenData._id) {\r\n\t\t\t\tsetStylistHeadingText({ value: homeScreenData.stylistHeaderTitle, error: '' });\r\n\t\t\t\tsetProductsHeadingText({ value: homeScreenData.productHeaderTitle, error: '' });\r\n\t\t\t\tsetVideosHeadingText({ value: homeScreenData.videoHeaderTitle, error: '' });\r\n\t\t\t\tsetImageSrc(homeScreenData.headerImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[homeScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('home', token);\r\n\t\t\tsetHomeScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t// const handleSubmit = async (e) => {\r\n\t// \te.preventDefault();\r\n\r\n\t// \tif (stylistHeadingText.value === '' || stylistHeadingText.value.trim() === '') {\r\n\t// \t\tsetStylistHeadingText({ ...stylistHeadingText, error: 'Please enter stylist heading text' });\r\n\t// \t} else if (productsHeadingText.value === '' || productsHeadingText.value.trim() === '') {\r\n\t// \t\tsetProductsHeadingText({ ...productsHeadingText, error: 'Please enter products heading text' });\r\n\t// \t} else if (videosHeadingText.value === '' || videosHeadingText.value.trim() === '') {\r\n\t// \t\tsetVideosHeadingText({ ...videosHeadingText, error: 'Please enter videos heading text' });\r\n\t// \t} else if (!imageSrc) {\r\n\t// \t\tsetUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t// \t} else {\r\n\t// \t\tlet formData = new FormData();\r\n\t// \t\tformData.append('stylistHeaderTitle', stylistHeadingText.value);\r\n\t// \t\tformData.append('productHeaderTitle', productsHeadingText.value);\r\n\t// \t\tformData.append('videoHeaderTitle', videosHeadingText.value);\r\n\t// \t\tuploadFileData.data.length > 0 && formData.append('headerImageURL', uploadFileData.data[0]);\r\n\r\n\t// \t\ttry {\r\n\t// \t\t\tsetLoading(true);\r\n\t// \t\t\tawait setSalonAppSetting('home', formData, token);\r\n\t// \t\t\t// toast.success(data && data.message);\r\n\t// \t\t\ttoast.success('Home screen settings updated!');\r\n\t// \t\t\tgetData();\r\n\t// \t\t} catch (error) {\r\n\t// \t\t\ttoast.error(error);\r\n\t// \t\t}\r\n\t// \t\tsetLoading(false);\r\n\t// \t}\r\n\t// };\r\n\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t  \r\n\t\tlet isFormValid = true;\r\n\t  \r\n\t\t// Validate and set error state for each input field\r\n\t\tconst validateInput = (value, setValue, errorMessage) => {\r\n\t\t  if (!value || !value.trim()) {\r\n\t\t\tsetValue({ value, error: errorMessage });\r\n\t\t\tisFormValid = false;\r\n\t\t  } else {\r\n\t\t\tsetValue({ value, error: '' });\r\n\t\t  }\r\n\t\t};\r\n\t  \r\n\t\tvalidateInput(stylistHeadingText.value, setStylistHeadingText, 'Please enter stylist heading text');\r\n\t\tvalidateInput(productsHeadingText.value, setProductsHeadingText, 'Please enter products heading text');\r\n\t\tvalidateInput(videosHeadingText.value, setVideosHeadingText, 'Please enter videos heading text');\r\n\t  \r\n\t\tif (!imageSrc) {\r\n\t\t  setUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t  isFormValid = false;\r\n\t\t} else {\r\n\t\t  setUploadFileData({ ...uploadFileData, error: '' });\r\n\t\t}\r\n\t  \r\n\t\tif (isFormValid) {\r\n\t\t  let formData = new FormData();\r\n\t\t  formData.append('stylistHeaderTitle', stylistHeadingText.value);\r\n\t\t  formData.append('productHeaderTitle', productsHeadingText.value);\r\n\t\t  formData.append('videoHeaderTitle', videosHeadingText.value);\r\n\t\t  uploadFileData.data.length > 0 && formData.append('headerImageURL', uploadFileData.data[0]);\r\n\t  \r\n\t\t  try {\r\n\t\t\tsetLoading(true);\r\n\t\t\tawait setSalonAppSetting('home', formData, token);\r\n\t\t\ttoast.success('Home screen settings updated!');\r\n\t\t\tgetData();\r\n\t\t  } catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t  }\r\n\t\t  setLoading(false);\r\n\t\t}\r\n\t  };\r\n\t  \r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>Home Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<HomeScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Stylist Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Your Stylist Details'\r\n\t\t\t\t\t\t\t\t\tvalue={stylistHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStylistHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={stylistHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Products Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Boost yourself'\r\n\t\t\t\t\t\t\t\t\tvalue={productsHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setProductsHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={productsHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Videos Heading Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, Videos For you'\r\n\t\t\t\t\t\t\t\tvalue={videosHeadingText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setVideosHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={videosHeadingText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Header Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\RegisterScreen.js",["2480"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport LoginScreenSkeleton from '../../components/Skeletons/AppSettings/LoginScreenSkeleton';\r\n\r\nconst RegisterScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [registerScreenData, setRegisterScreenData] = useState({});\r\n\tconst [headingText, setHeadingText] = useState({ value: '', error: '' });\r\n\tconst [subHeadingText, setSubHeadingText] = useState({ value: '', error: '' });\r\n\tconst [registerButtonText, setRegisterButtonText] = useState({ value: '', error: '' });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (registerScreenData && registerScreenData._id) {\r\n\t\t\t\tsetHeadingText({ value: registerScreenData.registerTitle, error: '' });\r\n\t\t\t\tsetSubHeadingText({ value: registerScreenData.registerSubTitle, error: '' });\r\n\t\t\t\tsetRegisterButtonText({ value: registerScreenData.registerButton, error: '' });\r\n\t\t\t\tsetImageSrc(registerScreenData.registerBackgroundImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[registerScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('register', token);\r\n\t\t\tsetRegisterScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (headingText.value === '' || headingText.value.trim() === '') {\r\n\t\t\tsetHeadingText({ ...headingText, error: 'Please enter register heading text' });\r\n\t\t} else if (subHeadingText.value === '' || subHeadingText.value.trim() === '') {\r\n\t\t\tsetSubHeadingText({ ...subHeadingText, error: 'Please enter register sub-heading text' });\r\n\t\t} else if (registerButtonText.value === '' || registerButtonText.value.trim() === '') {\r\n\t\t\tsetRegisterButtonText({ ...registerButtonText, error: 'Please enter register button text' });\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append('registerTitle', headingText.value);\r\n\t\t\tformData.append('registerSubTitle', subHeadingText.value);\r\n\t\t\tformData.append('registerButton', registerButtonText.value);\r\n\t\t\tuploadFileData.data.length > 0 && formData.append('registerBackgroundImageURL', uploadFileData.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('register', formData, token);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\ttoast.success('Register screen settings updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>Register Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LoginScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Register Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Register'\r\n\t\t\t\t\t\t\t\t\tvalue={headingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={headingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Register Sub-heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Please enter your details to create an account'\r\n\t\t\t\t\t\t\t\t\tvalue={subHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSubHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={subHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Register Button Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, Register'\r\n\t\t\t\t\t\t\t\tvalue={registerButtonText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setRegisterButtonText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={registerButtonText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Background Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegisterScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\LoginScreen.js",["2481"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport InputSections from '../../components/Modal/InputsSectionColumn';\r\n\r\nimport { setSalonAppSetting, getSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\nimport AppSettingStyles from './AppSetting.module.css';\r\nimport LoginScreenSkeleton from '../../components/Skeletons/AppSettings/LoginScreenSkeleton';\r\n\r\nconst LoginScreen = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadFileData, setUploadFileData] = useState({ data: '', error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst [loginScreenData, setLoginScreenData] = useState({});\r\n\tconst [headingText, setHeadingText] = useState({ value: '', error: '' });\r\n\tconst [subHeadingText, setSubHeadingText] = useState({ value: '', error: '' });\r\n\tconst [loginButtonText, setLoginButtonText] = useState({ value: '', error: '' });\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (loginScreenData && loginScreenData._id) {\r\n\t\t\t\tsetHeadingText({ value: loginScreenData.loginTitle, error: '' });\r\n\t\t\t\tsetSubHeadingText({ value: loginScreenData.loginSubTitle, error: '' });\r\n\t\t\t\tsetLoginButtonText({ value: loginScreenData.loginButton, error: '' });\r\n\t\t\t\tsetImageSrc(loginScreenData.loginBackgroundImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[loginScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('login', token);\r\n\t\t\tsetLoginScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (headingText.value === '' || headingText.value.trim() === '') {\r\n\t\t\tsetHeadingText({ ...headingText, error: 'Please enter login heading text' });\r\n\t\t} else if (subHeadingText.value === '' || subHeadingText.value.trim() === '') {\r\n\t\t\tsetSubHeadingText({ ...subHeadingText, error: 'Please enter login sub-heading text' });\r\n\t\t} else if (loginButtonText.value === '' || loginButtonText.value.trim() === '') {\r\n\t\t\tsetLoginButtonText({ ...loginButtonText, error: 'Please enter login button text' });\r\n\t\t} else if (!imageSrc) {\r\n\t\t\tsetUploadFileData({ ...uploadFileData, error: 'Please upload background image' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append('loginTitle', headingText.value);\r\n\t\t\tformData.append('loginSubTitle', subHeadingText.value);\r\n\t\t\tformData.append('loginButton', loginButtonText.value);\r\n\t\t\tuploadFileData.data.length > 0 && formData.append('loginBackgroundImageURL', uploadFileData.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('login', formData, token);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\tsetHeadingText({ value: '', error: '' });\r\n\t\t\t\tsetSubHeadingText({ value: '', error: '' });\r\n\t\t\t\tsetLoginButtonText({ value: '', error: '' });\r\n\t\t\t\tsetImageSrc('');\r\n\t\t\t\tsetUploadFileData({ data: '', error: '' });\r\n\t\t\t\ttoast.success('Login screen settings updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>Login Screen Settings</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LoginScreenSkeleton />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='flex'>\r\n\t\t\t\t\t\t<InputSections>\r\n\t\t\t\t\t\t\t<div className='flex' style={{ alignItems: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Login Heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Login'\r\n\t\t\t\t\t\t\t\t\tvalue={headingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={headingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\tlabel='Login Sub-heading Text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='eg, Please sign in to continue'\r\n\t\t\t\t\t\t\t\t\tvalue={subHeadingText.value}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSubHeadingText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\t\terrorMessage={subHeadingText.error}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Login Button Text'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, Login'\r\n\t\t\t\t\t\t\t\tvalue={loginButtonText.value}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setLoginButtonText({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t\t\t\terrorMessage={loginButtonText.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputSections>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Background Image'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadFileData({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadFileData.error}\r\n\t\t\t\t\t\t\tstyle={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginScreen;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppSettingScreen\\LogoUpload.js",["2482"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport LogoUploadSkeleton from '../../components/Skeletons/AppSettings/LogoUploadSkeleton';\r\nimport { getSalonAppSetting, setSalonAppSetting } from '../../redux/actions/AppSettingsActions';\r\n\r\nimport AppSettingStyles from './AppSetting.module.css';\r\n\r\nconst LogoUpload = ({ token }) => {\r\n\tconst [imageSrc, setImageSrc] = useState('');\r\n\tconst [uploadLogo, setUploadLogo] = useState({ data: [], error: '' });\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [loginScreenData, setLoginScreenData] = useState({});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (token) getData();\r\n\t\t},\r\n\t\t[token]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (loginScreenData && loginScreenData._id) {\r\n\t\t\t\tsetImageSrc(loginScreenData.appLogoImageURL);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[loginScreenData]\r\n\t);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await getSalonAppSetting('logo', token);\r\n\t\t\tsetLoginScreenData(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!imageSrc) {\r\n\t\t\tsetUploadLogo({ ...uploadLogo, error: 'Please upload salon logo' });\r\n\t\t} else {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tuploadLogo.data.length > 0 && formData.append('appLogoImageURL', uploadLogo.data[0]);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait setSalonAppSetting('logo', formData, token);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\t// toast.success(data && data.message);\r\n\t\t\t\ttoast.success('Salon logo updated!');\r\n\t\t\t\tgetData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.error(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={AppSettingStyles.flex}>\r\n\t\t\t<div className={AppSettingStyles.screenCard}>\r\n\t\t\t\t<h3 className={AppSettingStyles.screenCardTitle}>App Logo Settings</h3>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<LogoUploadSkeleton />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tlabel='Upload App Logo'\r\n\t\t\t\t\t\t\ticon='upload'\r\n\t\t\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\t\t\tsetUploadLogo({ data: e.target.files, error: '' });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={uploadLogo.error}\r\n\t\t\t\t\t\t// style={{ padding: '.5rem 1.5rem', paddingBottom: '1.5rem' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ModalButton label='Save' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LogoUpload;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\StylistServiceData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\NewSelectBox\\SelectBox.js",["2483"],"import React, { useState } from \"react\";\r\n// import Styles  from './SelectBox.css';\r\n\r\nconst SelectBox = ({\r\n  children,\r\n  icon,\r\n  name,\r\n  textBoxStyle,\r\n  label,\r\n  className,\r\n  value,\r\n  onChange,\r\n  errorMessage,\r\n  disabled,\r\n  multiple,\r\n  style,\r\n}) => {\r\n  return (\r\n    <div className={className ? className : \"form_input\"}>\r\n      {label && (\r\n        <label htmlFor={label} className=\"form_input__label\">\r\n          {label}\r\n        </label>\r\n      )}\r\n      <div className=\"textBox\" style={textBoxStyle}>\r\n        {icon && (\r\n          <label className=\"textBox__label\">\r\n            <svg className=\"textBox__label--icon\">\r\n              <use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n            </svg>\r\n          </label>\r\n        )}\r\n        <div className=\"textBox__input1\" style={style}>\r\n          <select\r\n            multiple={multiple}\r\n            style={style}\r\n            disabled={disabled}\r\n            value={value}\r\n            name={name}\r\n            id={name}\r\n            className=\"textBox__input--box\"\r\n            onChange={onChange}\r\n          >\r\n            {children}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {errorMessage && <p className=\"form_input__error\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\PromotionCodeScreen\\CreatePromoCode.js",["2484","2485","2486","2487","2488","2489"],"import React, { useEffect } from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport { getAllCouponsAction } from '../../redux/actions/couponBookBActions';\r\nimport { GET_ALL_COUPONS_BOOKB_RESET } from '../../redux/constants/couponBookBConstants';\r\n\r\nconst CreatePromoCode = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst {\r\n\t\tpromoCode,\r\n\t\tsetPromoCode,\r\n\t\tcoupon,\r\n\t\tsetCoupon,\r\n\t\tcreateModal,\r\n\t\tsetCreateModal,\r\n\t\thandleCreateModal,\r\n\t\thandleCloseModal,\r\n\t\thandleSubmit\r\n\t} = data;\r\n\r\n\r\n\tconst getAllCoupons = useSelector((state) => state.getAllCouponsBookB);\r\n\r\n\treturn (\r\n\t\t<Modal show={createModal}>\r\n\t\t\t<ModalHeading heading='Add New Promo Code' onClose={handleCloseModal} />\r\n\t\t\t<ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Promotional Code'\r\n\t\t\t\t\t\ticon='ticket'\r\n\t\t\t\t\t\tplaceholder='Enter promo code'\r\n\t\t\t\t\t\tvalue={promoCode.value}\r\n\t\t\t\t\t\tonChange={(e) => setPromoCode({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={promoCode.error}\r\n\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox \r\n\t\t\t\t\t\tvalue={coupon.value}\r\n\t\t\t\t\t\tonChange={(e) => setCoupon({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={coupon.error}\r\n\t\t\t\t\t\tlabel='Product Category'\r\n\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\tname='product-category'>\r\n\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\tSelect Coupon\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgetAllCoupons &&\r\n\t\t\t\t\t\t\tgetAllCoupons.data &&\r\n\t\t\t\t\t\t\tgetAllCoupons.data.status &&\r\n\t\t\t\t\t\t\tgetAllCoupons.data.data &&\r\n\t\t\t\t\t\t\tgetAllCoupons.data.data.length > 0 &&\r\n\t\t\t\t\t\t\tgetAllCoupons.data.data.map((res) => (\r\n\t\t\t\t\t\t\t\t<option value={res.id} key={res.id}>\r\n\t\t\t\t\t\t\t\t\t{res.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</SelectBox>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<ModalButton label='Add Promo Code' icon='plus' onClick={handleSubmit} />\r\n\r\n\t\t\t</ModalForm>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default CreatePromoCode","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\WorkHourModal.js",["2490","2491","2492"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport Button from '../../components/formInputs/Button';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport Modal from '../../components/Modal'\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport AvailabilityStyle from '../StylistSessionScreen/StylistAvailability.module.css';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn'\r\n\r\nconst WorkHourModal = ({ data }) => {\r\n\tconst { appointmentModal, setAppointmentModal, weekDays, setWeekDays, handleWorkHourSubmit } = data;\r\n\r\n\tconst handleStatusChange = (e, main, mainIndex, day) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].isAvailable = e.target.checked;\r\n\t\tsetWeekDays(newFormValues);\r\n\t}\r\n\r\n\tconst handleChange = (e, mainIndex) => {\r\n\t\tconst newFormValues = [...weekDays];\r\n\t\tnewFormValues[mainIndex].slot[e.target.name] = e.target.value;\r\n\t\tsetWeekDays(newFormValues);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal show={appointmentModal}>\r\n\t\t\t<ModalHeading heading=\"Add Work Hours\" onClose={() => setAppointmentModal(false)} />\r\n\r\n\t\t\t<ModalForm style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<div style={{ height: '60vh', overflow: 'auto',color:'white' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tweekDays &&\r\n\t\t\t\t\t\tweekDays.length > 0 &&\r\n\t\t\t\t\t\tweekDays.map((day, mainIndex, main) => {\r\n\r\n\r\n\t\t\t\t\t\t\treturn <div key={mainIndex}>\r\n\t\t\t\t\t\t\t\t<InputsSectionColumn style={{ alignItems: 'flex-end', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t\t\t\t<h1>{day.day}</h1>\r\n\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={day.isAvailable}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleStatusChange(e, main, mainIndex, day)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tday.isAvailable ? <>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Start time'\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon='clock'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, mainIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={day.slot.startTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(e) => setProductName({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// errorMessage={productName.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"startTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='End time'\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon='clock'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, mainIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={day.slot.endTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"endTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t// value={productName.value}\r\n\t\t\t\t\t\t\t\t\t\t\t// onChange={(e) => setProductName({ value: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t// errorMessage={productName.error}\r\n\t\t\t\t\t\t\t\t\t\t\t/></> : \"Closed\"}\r\n\t\t\t\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='form-button'>\r\n\t\t\t\t\t<Button label='Update' onClick={handleWorkHourSubmit} >\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default WorkHourModal","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceServices.js",["2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503"],"import React, { useEffect, useMemo, useState } from 'react'\r\nimport Button from '../../components/formInputs/Button'\r\nimport RoundCards from '../../website/CustomHomeScreen/RoundCards'\r\nimport './Appearance.css';\r\n\r\nconst AppearanceServices = ({ data }) => {\r\n    const { serviceModal,\r\n        setServiceModal,\r\n        setIsUpdate,\r\n        serviceDeleteModal,\r\n        setServiceDeleteModal, handleEditService,\r\n        getWebsiteService,\r\n        clickService,\r\n        setCLickService,\r\n        serviceText,\r\n        setServiceText,\r\n        handleServiceClick,\r\n        color,\r\n        serviceTitle } = data\r\n\r\n    const [categoryName, setCategoryName] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (getWebsiteService &&\r\n\t\t\tgetWebsiteService.session &&\r\n\t\t\tgetWebsiteService.session.data &&\r\n\t\t\tgetWebsiteService.session.data.result &&\r\n\t\t\tgetWebsiteService.session.data.result.length > 0) {\r\n\t\t\tsetCategoryName(getWebsiteService.session.data.result[0].category.title)\r\n\t\t}\r\n\t}, [getWebsiteService])\r\n    \r\n    const getFilteredList = () => {\r\n        if (getWebsiteService &&\r\n            getWebsiteService.session &&\r\n            getWebsiteService.session.data &&\r\n            getWebsiteService.session.data.result &&\r\n            getWebsiteService.session.data.result.length > 0) {\r\n            if (!categoryName) {\r\n                return getWebsiteService.session.data.result;\r\n            }\r\n\r\n            return getWebsiteService.session.data.result.filter((item) => item && item.category && item.category.title === categoryName);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFilteredList();\r\n    }, [categoryName])\r\n\r\n    var filteredList = useMemo(getFilteredList, [categoryName, getWebsiteService && getWebsiteService.session && getWebsiteService.session.data && getWebsiteService.session.data.result]);\r\n\r\n    return (\r\n\r\n        <div className=\"services\" id=\"services_our\">\r\n            <div className=\"apperance_servies_heading\">\r\n                <div className='appearnce-button-container'>\r\n                    <button className='appearance-btn' onClick={() => setCLickService(!clickService)}>\r\n                        <svg className=\"table__button--icon\">\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                        </svg>\r\n                    </button>\r\n                    {clickService && <button className='appearance-btn' onClick={handleServiceClick}>\r\n                        SUBMIT\r\n                    </button>}\r\n                </div>\r\n                <h1 contentEditable={clickService ? true : false}\r\n                onInput={(e) => setServiceText(e.target.innerText)}>{serviceTitle ? serviceTitle : \"Our Service\"}</h1>\r\n            </div>\r\n            {/* <h1 className=\"servies_main_heading\">Our Services</h1> */}\r\n            <div className='service_list'>\r\n                {\r\n                    getWebsiteService && getWebsiteService.session && getWebsiteService.session.data && getWebsiteService.session.data.result && getWebsiteService.session.data.result.length > 0 && getWebsiteService.session.data.result.map((item, id) => {\r\n                        return (\r\n                            <button key={id} className={categoryName === item.category.title ? 'activeBtn' : 'serviceBtn'} onClick={() => setCategoryName(item.category.title)} style={categoryName === item.category.title ? {backgroundColor:color}: {borderColor:color,color:color}}>{item.category.title}</button>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"our_services\">\r\n                <div className=\"our_services_outer\">\r\n                    {\r\n                        filteredList && filteredList.length > 0 ?\r\n                        filteredList.map((item, id) => (<RoundCards service={item} color={color} />)) : \r\n                        <div> Your services will be listed here.</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"appearance_services\" id=\"services_our\">\r\n        //     <h1 className=\"servies_main_heading\">Our Services</h1>\r\n        //     <div className=\"our_services\">\r\n        //         <div className=\"our_appearance_services_outer\">{\r\n        //             ServiceArray && ServiceArray.map((item,index)=>(\r\n        //                 <div className=\"our_appearance_services_inner\">\r\n\r\n        //                 <div className='appearnce-button-container'>\r\n        //                     <button className='appearance-btn' onClick={()=>{setIsUpdate(true);handleEditService(item)}}>\r\n        //                     <svg className=\"table__button--icon\">\r\n        //                         <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n        //                     </svg>\r\n        //                     </button>\r\n        //                     <button className='appearance-btn' onClick={()=>{setServiceDeleteModal(!serviceDeleteModal)}}>\r\n        //                     <svg className=\"table__button--icon\">\r\n        //                         <use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n        //                     </svg>\r\n        //                 </button>\r\n\r\n\r\n        //                 </div>\r\n        //                 <div className=\"our_services_logo\">\r\n        //                     <svg className=\"filter__input--icon\">\r\n        //                         <use xlinkHref={`/assets/sprite.svg#${item.serviceIcon}`} />\r\n        //                     </svg>\r\n        //                 </div>\r\n        //                 <h1 className=\"our_services_heading\">{item.serviceName}</h1>\r\n        //                 <p className=\"our_services_subheading\">\r\n        //                     {item.ServiceDesc}\r\n        //                 </p>\r\n        //             </div>\r\n\r\n        //             ))\r\n        //         }\r\n\r\n        //             <div className=\"our_appearance_services_inner\" onClick={()=>{setIsUpdate(false); setServiceModal(!serviceModal)}}>\r\n        //                 <div className=\"our_services_logo\">\r\n        //                     <svg className=\"filter__input--icon\">\r\n        //                         <use xlinkHref={`/assets/sprite.svg#icon-plus2`} />\r\n        //                     </svg>\r\n        //                 </div>\r\n        //                 <h1 className=\"our_services_heading\">Add More..</h1>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AppearanceServices","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceProduct.js",["2504","2505"],"import React from 'react'\r\nimport Stars from '../../website/components/Stars/Stars';\r\n\r\nconst AppearanceProduct = ({ data }) => {\r\n    const { getAllProducts,\r\n        clickProduct,\r\n        setClickProduct,\r\n        productText,\r\n        setProductText,\r\n        handleProductClick,\r\n        productTitle,\r\n        color\r\n         } = data;\r\n\r\n\r\n    return (\r\n        <>\r\n       {getAllProducts?.products?.data?.length && <div className=\"homescreen_products\" id=\"products\" style={{backgroundColor:color}}>\r\n            <div className=\"appearanceCardHeader\">\r\n                <div className='appearnce-button-container'>\r\n                    <button className='appearance-btn' onClick={() => setClickProduct(!clickProduct)}>\r\n                        <svg className=\"table__button--icon\">\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                        </svg>\r\n                    </button>\r\n                    {clickProduct && <button className='appearance-btn' onClick={() =>handleProductClick()}>\r\n                        SUBMIT\r\n                    </button>}\r\n                </div>\r\n                <h1 contentEditable={clickProduct ? true : false} onInput={(e) => {setProductText(e.target.innerText) }}>{productTitle}</h1>\r\n            </div>\r\n            <div className='product-container'>\r\n                {getAllProducts && getAllProducts.products && getAllProducts.products.data && getAllProducts.products.data.result &&\r\n                    getAllProducts.products.data.result.slice(0,3).map((res) => (\r\n                        <div className=\"product_card--layout\">\r\n                            <img src={res.productImageURL} alt=\"product thumb\" className=\"product_card\" />\r\n                            <div className=\"porduct-desc\">\r\n                                <h1 className=\"productCard__title\">\r\n                                {res.rating > 0 ?\r\n\t\t\t\t\t\t\t\t\t<div className=\"product--rate\">\r\n\t\t\t\t\t\t\t\t\t\t<Stars rating={res.rating} />\r\n\t\t\t\t\t\t\t\t\t</div> : null}\r\n                                    <br />\r\n                                    {res.productName.length > 10 ? res.productName.slice(0, 20) : res.productName}\r\n                                    <br />\r\n                                    $ {res.productPrice}\r\n                                </h1>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n            </div>\r\n            <div className=\"all_products\">\r\n                <a>\r\n                    <button className=\"all_products_button\">View all</button>\r\n                </a>\r\n            </div>\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppearanceProduct","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\ServiceModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\LogoModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceNavbar.js",["2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519"],"import React, { useState } from 'react'\r\nimport './Appearance.css'\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport Button from '../../components/formInputs/Button'\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport imgFile from \"../../components/assets/favicon.png\"\r\n\r\nconst Navbar = ({ click, closeMobileMenu, toggleMenu_website, handleCartClick, cartView, handleClick,data }) => {\r\n    const {logoModal,\r\n         setLogoModal,\r\n         imageSrc,\r\n         setImageSrc,\r\n         imageSrcError,\r\n         setImageSrcError,\r\n         uploadFileData,\r\n         setUploadFileData,\r\n         uploadFileDataError,\r\n         setUploadFileDataError,\r\n         handleChangeImage,\r\n         logo,\r\n         color,\r\n        } = data\r\n\r\n\r\n         \r\n    return (\r\n\r\n\r\n        <header className=\"screen_header\">\r\n            <div className='logo_website_screen'>\r\n                {/* <button\r\n                    className=\"appearance-btn\"\r\n                >\r\n                    <svg className=\"table__button--icon\">\r\n                        <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                    </svg>\r\n                </button> */}\r\n                <div className='appearnce-button-container'>\r\n                {/* <button className='appearance-btn' onClick={()=>setLogoModal(!logoModal)}>\r\n                  <svg className=\"table__button--icon\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n                  </svg>\r\n                </button> */}\r\n                 <div className='appearance-btn2'>\r\n                 <svg className=\"table__button--icon2\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n                  </svg>\r\n                <input type='file' name='uploadFiles' id='uploadFiles'  accept='image/*' onChange={(e) => {\r\n                    handleChangeImage(e);\r\n                }} >\r\n                    \r\n                    </input>\r\n                </div>\r\n                </div>\r\n                <img src={logo} alt=\"Logo\" />\r\n               \r\n            \r\n            </div>\r\n            <nav className=\"navigation_website\">\r\n                <div>\r\n                    <ul className={click ? ' navigation__links nav-options active' : 'navigation__links nav-options'}>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink to=\"#banner\" activeClassName=\"navigation__active\" className=\"navigation__link\">\r\n                                Home\r\n                            </HashLink>\r\n                        </li>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink\r\n                                smooth\r\n                                to=\"#products\"\r\n                                activeClassName=\"navigation__active\"\r\n                                className=\"navigation__link\"\r\n                            >\r\n                                Shop\r\n                            </HashLink>\r\n                        </li>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink\r\n                                smooth\r\n                                to=\"#services_our\"\r\n                                activeClassName=\"navigation__active\"\r\n                                className=\"navigation__link\"\r\n                            >\r\n                                Services\r\n                            </HashLink>\r\n                        </li>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink\r\n                                smooth\r\n                                to=\"#\"\r\n                                activeClassName=\"navigation__active\"\r\n                                className=\"navigation__link\"\r\n                            >\r\n                                Discounts\r\n                            </HashLink>\r\n                        </li>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink\r\n                                smooth\r\n                                to=\"#hoursOfOperation\"\r\n                                activeClassName=\"navigation__active\"\r\n                                className=\"navigation__link\"\r\n                            >\r\n                                Hours of Operation\r\n                            </HashLink>\r\n                        </li>\r\n                        <li onClick={closeMobileMenu} className=\"appearance-list\">\r\n                            {/* <button\r\n                                className=\"appearance-btn\"\r\n                            >\r\n                                <svg className=\"table__button--icon\">\r\n                                    <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                                </svg>\r\n                            </button> */}\r\n                            <HashLink\r\n                                smooth\r\n                                to=\"#contactus\"\r\n                                activeClassName=\"navigation__active\"\r\n                                className=\"navigation__link\"\r\n                            >\r\n                                Contact Us\r\n                            </HashLink>\r\n                        </li>\r\n\r\n                        <li className=\"mobile-menu\">\r\n                            <div className=\"navigation__link header-right-side\">\r\n                                <Button\r\n                                    style={{\r\n                                        width: '10rem',\r\n                                        justifyContent: 'center',\r\n                                        padding: '0.5rem 1rem',\r\n                                        backgroundColor:color\r\n                                        \r\n                                    }}\r\n                                    varient=\"primary\"\r\n                                    label=\"Login\"\r\n                                    icon=\"arrow_right\"\r\n                                    onClick={toggleMenu_website}\r\n                                />\r\n                                 \r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <ul className=\"navigation__links navigation__links--contact\">\r\n                    <li>\r\n                        <div className=\"navigation__link header-right-side\">\r\n                            <svg className=\"header-icon-in menu-icon\">\r\n                                <use xlinkHref=\"assets/sprite.svg#icon-search\" />\r\n                            </svg>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li onClick={handleCartClick}>\r\n                        <div className=\"navigation__link header-right-side\">\r\n                            <svg className=\"header-icon-in menu-icon\">\r\n                                <use xlinkHref=\"assets/sprite.svg#icon-cart\" />\r\n                            </svg>\r\n                            <div>0</div>\r\n                        </div>\r\n\r\n                        <div className='cartContainer'>\r\n                            <div class={cartView ? \"shopping-cart-active\" : \"shopping-cart \"}>\r\n                                <div class=\"shopping-cart-header\">\r\n                                    <div class=\"shopping-cart-total\">\r\n                                        <span class=\"lighter-text\">Total: &nbsp;</span>\r\n                                        <span class=\"main-color-text\">$45</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <ul class=\"shopping-cart-items\">\r\n                                    <li class=\"clearfix\">\r\n                                        {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/195612/cart-item1.jpg\" alt=\"item1\" /> */}\r\n                                        <img className=\"cart-product_image\" src=\"./assets/instyler.png\" alt=\"product image\" />\r\n                                        <span class=\"item-name\">Black Blade Brush</span>\r\n                                        <span class=\"item-price\">$45</span>\r\n                                        <span class=\"item-quantity\">Quantity: 01</span>\r\n                                    </li>\r\n                                </ul>\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Button\r\n                                    varient='primary'\r\n                                        style={{\r\n                                            width: '10rem',\r\n                                            justifyContent: 'center',\r\n                                            padding: '0.5rem 1rem',\r\n                                            \r\n                                        }}\r\n                                        label=\"Checkout\"\r\n                                        icon=\"arrow_right\"\r\n                                        onClick={toggleMenu_website}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"navigation__link header-right-side\">\r\n                            <Button\r\n                                style={{\r\n                                    width: '10rem',\r\n                                    justifyContent: 'center',\r\n                                    padding: '0.5rem 1rem',\r\n                                    backgroundColor:color\r\n                                }}\r\n                                label=\"Login\"\r\n                                icon=\"arrow_right\"\r\n                                onClick={toggleMenu_website}\r\n                            />\r\n                             \r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"mobile-menu\" onClick={handleClick}>\r\n                    {click ? (\r\n                        <svg className=\"header-icon-in menu-icon\">\r\n                            <use xlinkHref=\"assets/sprite.svg#CloseMenu\" />\r\n                        </svg>\r\n                    ) : (\r\n                        <svg className=\"header-icon-in menu-icon\">\r\n                            <use xlinkHref=\"assets/sprite.svg#MenuIcon\" />\r\n                        </svg>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\Modals\\DeleteCouponModal.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceContact.js",["2520","2521"],"import React from 'react'\r\n\r\nconst AppearanceContact = ({ data }) => {\r\n    const {\r\n        clickContactText,\r\n        setClickContactText,\r\n        clickContactPara,\r\n        setClickContactPara,\r\n        contactText,\r\n        setContactText,\r\n        contactPara,\r\n        setContactPara,\r\n        handleContactTextClick,\r\n        handleContactParaClick,\r\n        contactTitle,\r\n        contactSubTitle,\r\n        color\r\n    } = data;\r\n    return (\r\n        <>\r\n            <div className=\"chat_section\" id=\"contactus\">\r\n                <div className=\"appearance_our_services_subheading1\">\r\n                    <div className='appearnce-button-container'>\r\n                        <button className='appearance-btn' onClick={() => setClickContactText(!clickContactText)}>\r\n                            <svg className=\"table__button--icon\">\r\n                                <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                            </svg>\r\n                        </button>\r\n                        {clickContactText && <button className='appearance-btn' onClick={() => handleContactTextClick()}>\r\n                            SUBMIT\r\n                        </button>}\r\n                    </div>\r\n                    <h1 contentEditable={clickContactText ? true : false} onInput={(e) => { setContactText(e.target.innerText) }} >\r\n                        {contactTitle ? contactTitle : \"Contact Us\"}</h1>\r\n                </div>\r\n\r\n                <div className=\"apperance_chat_subheading\">\r\n                    <div className='appearnce-button-container'>\r\n                        <button className='appearance-btn' onClick={() => setClickContactPara(!clickContactPara)}>\r\n                            <svg className=\"table__button--icon\">\r\n                                <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                            </svg>\r\n                        </button>\r\n                        {clickContactPara && <button className='appearance-btn' onClick={() => handleContactParaClick()}>\r\n                            SUBMIT\r\n                        </button>}\r\n                    </div>\r\n                    <p style={{color: color ? color : 'black' }} contentEditable={clickContactPara ? true : false} onInput={(e) => { setContactPara(e.target.innerText) }}>{contactSubTitle ? contactSubTitle : \"Please leave a message and I will return your call when I am not with a client. Call 'Your Number' for immediate assistance/directions.\"}</p>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='contact-container'>\r\n                <div className='contact_input_container'>\r\n                    <div className='contact_input'>\r\n                        <label>Your Name</label>\r\n                        <input type='text' placeholder='Name'\r\n                        // value={name} onChange={(e) => { setName(e.target.value); setNameError(\"\") }} \r\n                        ></input>\r\n                        {/* <p className='onboard_error'>{nameError}</p> */}\r\n                    </div>\r\n                    <div className='contact_input'>\r\n                        <label>Your Email</label>\r\n                        <input type='email' placeholder='Email'\r\n                        // value={email} onChange={(e) => { setEmail(e.target.value); setEmailError(\"\") }}\r\n                        ></input>\r\n                        {/* <p className='onboard_error'>{emailError}</p> */}\r\n                    </div>\r\n                </div>\r\n                <div className='contact_input_container'>\r\n                    <div className='contact_input'>\r\n                        <label>Your Phone No.</label>\r\n                        <input placeholder='Phone No.'\r\n                        // value={inputPhoneMasking(phone)} onChange={(e) => { setPhone(e.target.value); setPhoneError(\"\") }}\r\n                        ></input>\r\n                        {/* <p className='onboard_error'>{phoneError}</p> */}\r\n                    </div>\r\n                    <div className='contact_input'>\r\n                        <label>Subject</label>\r\n                        <input type='text' placeholder='Subject'\r\n                        //  value={subject} onChange={(e) => { setSubject(e.target.value); setSubjectError(\"\") }}\r\n                        ></input>\r\n                        {/* <p className='onboard_error'>{subjectError}</p> */}\r\n                    </div>\r\n                </div>\r\n                <div className='contact_input_container'>\r\n                    <div className='contact_input'>\r\n                        <label>Your Message</label>\r\n                        <textarea type='text' placeholder='Message'\r\n                        // value={message} onChange={(e) => { setMessage(e.target.value); setMessageError(\"\") }} \r\n                        />\r\n                        {/* <p className='onboard_error'>{messageError}</p> */}\r\n                    </div>\r\n                </div>\r\n                <div className='contact_button_container'>\r\n\r\n                    <button style={{ backgroundColor: color }}>Submit</button>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppearanceContact","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\DeleteService.js",["2522"],"import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\n\r\nconst DeleteService = ({ serviceModal, setServiceModal, isUpdate }) => {\r\n  return (\r\n    <Modal show={serviceModal}>\r\n      <ModalHeading heading=\"Delete\" onClose={() => setServiceModal(false)} />\r\n      <ModalForm style={{ marginBottom: '2.5rem' }}>\r\n        <p className=\"modal__text\">\r\n          Are you sure? You want to to Delete Serive</p>\r\n\r\n        <div style={{ display: \"flex\", gap: \"2rem\" }}>\r\n          <ModalButton\r\n            label=\"Delete Service\"\r\n\r\n          />\r\n          <ModalButton\r\n            varient=\"danger\"\r\n            label=\"Cancel\"\r\n          />\r\n        </div>\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteService","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CouponBookB\\Modals\\AddCoupon.js",["2523"],"import React from 'react'\r\nimport InputBox from '../../../components/formInputs/InputBox';\r\nimport Modal from '../../../components/Modal';\r\nimport InputsSection from '../../../components/Modal/InputsSectionColumn';\r\nimport ModalButton from '../../../components/Modal/ModalButton';\r\nimport ModalForm from '../../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../../components/Modal/ModalHeading';\r\nimport { numberMasking } from '../../../utils/validators';\r\nimport moment from 'moment';\r\nimport SelectBox from '../../../components/formInputs/SelectBox';\r\n\r\nconst AddCoupon = ({ data }) => {\r\n\tconst {\r\n\t\tshowAddCouponModal,\r\n\t\tcloseAddCouponModal,\r\n\t\thandleAddCoupon,\r\n\t\taddCouponData,\r\n\t\tsetAddCouponData,\r\n\t\taddCouponDataError,\r\n\t\tsetAddCouponDataError\r\n\t} = data;\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddCouponModal}>\r\n\t\t\t<ModalHeading heading={addCouponData.id ? 'Edit Coupon' : 'Add Coupon'} onClose={closeAddCouponModal} />\r\n\t\t\t<ModalForm onSubmit={handleAddCoupon} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Coupon Title'\r\n\t\t\t\t\t\ticon='title'\r\n\t\t\t\t\t\tplaceholder='$ 10 OFF'\r\n\t\t\t\t\t\tvalue={addCouponData.name}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetAddCouponData({ ...addCouponData, name: e.target.value })\r\n\t\t\t\t\t\t\tsetAddCouponDataError({ ...addCouponDataError, name: '' });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={addCouponDataError.name}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t{\r\n\t\t\t\t\t!addCouponData.id &&\r\n\t\t\t\t\t<InputsSection>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', gap: '1rem', alignItems: 'center' }}>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Discount Amount'\r\n\t\t\t\t\t\t\t\ticon='dollar'\r\n\t\t\t\t\t\t\t\tplaceholder='10'\r\n\t\t\t\t\t\t\t\tvalue={addCouponData.amount_off}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetAddCouponData({ ...addCouponData, amount_off: numberMasking(e.target.value) })\r\n\t\t\t\t\t\t\t\t\tsetAddCouponDataError({ ...addCouponDataError, amount_off: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={addCouponDataError.amount_off}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\t\tvalue={addCouponData.duration}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetAddCouponData({ ...addCouponData, duration: e.target.value })\r\n\t\t\t\t\t\t\t\t\tsetAddCouponDataError({ ...addCouponDataError, duration: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={addCouponDataError.duration}\r\n\t\t\t\t\t\t\t\tlabel='Coupon Duration'\r\n\t\t\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\t\t\tname='product-category'>\r\n\t\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\t\tSelect Coupon\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"once\">Once</option>\r\n\t\t\t\t\t\t\t\t<option value=\"repetative\">Repetative</option>\r\n\t\t\t\t\t\t\t\t<option value=\"forever\">Forever</option>\r\n\t\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InputsSection>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<ModalButton label={addCouponData.id ? 'Edit Coupon' : 'Add Coupon'} icon={addCouponData.id ? 'edit' : 'plus'} onClick={handleAddCoupon} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default AddCoupon","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceBar.js",["2524","2525"],"import React from 'react'\r\n\r\nconst AppearanceBar = ({data}) => {\r\n    const {\r\n        clickAppearanceBarPara, \r\n          setClickAppearanceBarPara,\r\n          appearanceBarText, \r\n          setAppearanceBarText,\r\n          appearanceBarPara, \r\n          setAppearanceBarPara,\r\n          handleAppearanceBarParaClick,\r\n          handleAppearanceBarTextClick,\r\n          clickAppearanceBarText, \r\n          setClickAppearanceBarText,\r\n          title,\r\n          subTitle,\r\n          color,\r\n    } = data;\r\n  return (\r\n    <div className=\"products_discount\" style={{marginTop:'0rem',backgroundColor:color}}>\r\n        \r\n        <div className=\"appearanceBarText\">\r\n                <div className='appearnce-button-container' >\r\n                    <button className='appearance-btn' onClick={() => setClickAppearanceBarText(!clickAppearanceBarText)}>\r\n                        <svg className=\"table__button--icon\">\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                        </svg>\r\n                    </button>\r\n                    {clickAppearanceBarText && <button className='appearance-btn' onClick={() =>handleAppearanceBarTextClick()}>\r\n                        SUBMIT\r\n                    </button>}\r\n                </div>\r\n                <h1 contentEditable={clickAppearanceBarText ? true : false} onInput={(e) => {setAppearanceBarText(e.target.innerText) }}>{title ? title:\"Enter Offers\"}</h1>\r\n            </div>\r\n            <div className=\"appearanceBarText\">\r\n                <div className='appearnce-button-container'>\r\n                    <button className='appearance-btn' onClick={() => setClickAppearanceBarPara(!clickAppearanceBarPara)}>\r\n                        <svg className=\"table__button--icon\">\r\n                            <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                        </svg>\r\n                    </button>\r\n                    {clickAppearanceBarPara && <button className='appearance-btn' onClick={() =>handleAppearanceBarParaClick()}>\r\n                        SUBMIT\r\n                    </button>}\r\n                </div>\r\n                <h1 contentEditable={clickAppearanceBarPara ? true : false} onInput={(e) => {setAppearanceBarPara(e.target.innerText) }}>{subTitle ? subTitle:\"Enter Offers\"}</h1>\r\n            </div>\r\n\r\n           \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppearanceBar","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceBanner.js",["2526","2527","2528","2529","2530","2531","2532"],"import React from 'react'\r\nimport Button from '../../components/formInputs/Button'\r\nimport './Appearance.css'\r\n\r\nconst AppearanceBanner = ({ data }) => {\r\n  const { setClickHeader,\r\n    clickheader,\r\n    clickSubHeader,\r\n    setClickSubHeader,\r\n    handleHeaderClick,\r\n    handleSubHeaderClick,\r\n    setHeader,\r\n    setSubHeader, bannerImage, setBannerImage,\r\n    handleChangeBannerImage,\r\n    bannerImg,\r\n    clickButton,\r\n    setClickButton,\r\n    buttonText,\r\n    setButtonText,\r\n    title,\r\n    color,\r\n    subTitle } = data\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"appearancescreen_banner\" id=\"banner\">\r\n      <div className=\"homescreen_banner_outer\">\r\n        <div className=\"homescreen_motive\">\r\n          <div className=\"appearancescreen_banner__subtitle\">\r\n            <div className='appearnce-button-container'>\r\n              <button className='appearance-btn' onClick={() => setClickHeader(!clickheader)}>\r\n                <svg className=\"table__button--icon\">\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                </svg>\r\n              </button>\r\n              {clickheader && <button className='appearance-btn' onClick={handleHeaderClick}>\r\n                SUBMIT\r\n              </button>}\r\n\r\n            </div>\r\n\r\n            <h1 contentEditable={clickheader ? true : false} onInput={(e) => setHeader(e.target.innerText)}>\r\n              {title ? title :\"Lorem ipsum dolor sit amet\"}\r\n            </h1>\r\n          </div>\r\n          <div className=\"appearancescreen_banner__desc\">\r\n            <div className='appearnce-button-container'>\r\n              <button className='appearance-btn' onClick={() => setClickSubHeader(!clickSubHeader)}>\r\n                <svg className=\"table__button--icon\">\r\n                  <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n                </svg>\r\n              </button>\r\n              {clickSubHeader && <button className='appearance-btn' onClick={handleSubHeaderClick}>\r\n                SUBMIT\r\n              </button>}\r\n            </div>\r\n            <h1 contentEditable={clickSubHeader ? true : false} onInput={(e) => setSubHeader(e.target.innerText)}>\r\n              {subTitle ? subTitle : \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum numquam blanditiis\"}\r\n            </h1>\r\n          </div>\r\n          {/* <div className=\"appearancescreen_banner__button\"> */}\r\n            <Button\r\n              varient=\"primary\"\r\n              style={{\r\n                width: '70%',\r\n                justifyContent: 'center',\r\n                backgroundColor:color\r\n              }}\r\n              label=\"Book Appointment\"\r\n              icon=\"arrow_right\"\r\n              // contentEditable={clickSubHeader ? true : false} onInput={(e) => setButtonText(e.target.innerText)}\r\n            />\r\n          {/* </div> */}\r\n\r\n        </div>\r\n        {/* <img src=\"./assets/styler.png\" className=\"img-responsive1\" alt=\"salon Image\" /> */}\r\n      </div>\r\n\r\n      <div className='banner-image'>\r\n        <div className='appearnce-button-container'>\r\n          {/* <button className='appearance-btn' onClick={()=>setLogoModal(!logoModal)}>\r\n                  <svg className=\"table__button--icon\">\r\n                    <use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n                  </svg>\r\n                </button> */}\r\n          <div className='appearance-btn2'>\r\n            <svg className=\"table__button--icon2\">\r\n              <use xlinkHref={`/assets/sprite.svg#icon-plus`} />\r\n            </svg>\r\n            <input type='file' name='uploadFiles' id='uploadFiles' accept='image/*' onChange={(e) => {\r\n              handleChangeBannerImage(e)\r\n              // setBannerImage(e.target.files);\r\n              // setUploadFileDataError('');\r\n            }} >\r\n\r\n            </input>\r\n          </div>\r\n        </div>\r\n        <img src={bannerImg} className=\"img-responsive\" alt=\"salon Image\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default AppearanceBanner","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppearanceScreen\\AppearanceAppointment.js",["2533","2534"],"import React from 'react'\r\nimport Button from '../../components/formInputs/Button'\r\nimport './Appearance.css'\r\nimport moment from \"moment\"\r\n\r\nconst AppearanceAppointment = ({ data }) => {\r\n  const { appointmentModal, setAppointmentModal, getPublicWebsite,\r\n    clickHourText,\r\n    setClickHourText,\r\n    clickHourPara,\r\n    setClickHourPara,\r\n    hourText,\r\n    setHourText,\r\n    hourPara,\r\n    setHourPara,\r\n    handleHourTextClick,\r\n    handleHourParaClick,\r\n    hourTitle,\r\n    hourSubTitle,\r\n    color,\r\n    phone } = data;\r\n  return (\r\n    <div className=\"appearance_working_time\" id=\"hoursOfOperation\">\r\n      <div className='appearnce-button-container'>\r\n\r\n      </div>\r\n      <div className=\"appperance_working_time_left\" style={{backgroundColor:color,}}>\r\n        <div className='appearnce-button-container'>\r\n          <button className='appearance-btn' onClick={() => { setAppointmentModal(!appointmentModal) }}>\r\n            <svg className=\"table__button--icon\">\r\n              <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n            </svg>\r\n          </button>\r\n\r\n        </div>\r\n        <h1 className=\"working_time_heading\">WORKING HOURS</h1>\r\n        <p className=\"our_services_subheading1\">The hours and days we can serve you</p>\r\n        <br />\r\n        <br />\r\n        {\r\n          getPublicWebsite && getPublicWebsite.websiteInfo && getPublicWebsite.websiteInfo.data && getPublicWebsite.websiteInfo.data.workHour && getPublicWebsite.websiteInfo.data.workHour.map((item, id) =>\r\n          (\r\n            <>\r\n              {item.isAvailable ?\r\n                <div className=\"days_we_work\">\r\n                  <p className=\"our_services_subheading\">{item.day}</p>\r\n                  <p className=\"our_services_subheading\">{moment(item && item.slot && item.slot.startTime, \"hh:mm a\").format('LT')} - {moment(item && item.slot && item.slot.endTime, \"hh:mm a\").format('LT')}</p>\r\n                </div>\r\n                :\r\n                (<div className=\"days_we_work-sunday\">\r\n                  <p className=\"our_services_subheading\">{item.day}</p>\r\n                  <p className=\"our_services_subheading\">Closed</p>\r\n                </div>)\r\n\r\n              }\r\n            </>\r\n\r\n          )\r\n          )\r\n        }\r\n        <hr className=\"hr\" />\r\n        <div className=\"bookings\">\r\n          <h2 className=\"our_services_subheading1\">\r\n            BY APPOINTMENT ONLY\r\n          </h2>\r\n          <p className=\"our_services_subheading\">{phone}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"working_time_right\">\r\n        <div className=\"appearance_working_time_heading\">\r\n          <div className='appearnce-button-container'>\r\n            <button className='appearance-btn' onClick={() => setClickHourText(!clickHourText)}>\r\n              <svg className=\"table__button--icon\">\r\n                <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n              </svg>\r\n            </button>\r\n            {clickHourText && <button className='appearance-btn' onClick={handleHourTextClick}>\r\n              SUBMIT\r\n            </button>}\r\n          </div>\r\n          <h1 contentEditable={clickHourText ? true : false} onInput={(e) => { setHourText(e.target.innerText) }}>{hourTitle ? hourTitle : \"What times are we open\"}</h1>\r\n        </div>\r\n        {/* <h1 className=\"working_time_heading\">What times are we open</h1> */}\r\n        <br />\r\n\r\n        <div className=\"appearance_our_services_subheading1\">\r\n          <div className='appearnce-button-container'>\r\n            <button className='appearance-btn' onClick={() => setClickHourPara(!clickHourPara)}>\r\n              <svg className=\"table__button--icon\">\r\n                <use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n              </svg>\r\n            </button>\r\n            {clickHourPara && <button className='appearance-btn' onClick={handleHourParaClick}>\r\n              SUBMIT\r\n            </button>}\r\n          </div>\r\n          <p contentEditable={clickHourPara ? true : false} onInput={(e) => { setHourPara(e.target.innerText) }}>\r\n            {hourSubTitle ? hourSubTitle : \"We are open Monday through Friday, 9 to 5 pm. But you can still call the support team outside working hours and send the email\"}\r\n          </p>\r\n        </div>\r\n\r\n\r\n        <br />\r\n        <br />\r\n        <Button\r\n          varient=\"primary\"\r\n          style={{\r\n            width: '70%',\r\n            justifyContent: 'center',\r\n            backgroundColor:color\r\n          }}\r\n          label=\"Book an Appointment\"\r\n          icon=\"arrow_right\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppearanceAppointment","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\index.js",["2535","2536"],"import React, { useState } from 'react';\r\nimport styles from './SelectBox.css';\r\n\r\nconst SelectBox = ({ children, icon, name, label, value, onChange, errorMessage, disabled, multiple, style }) => {\r\n\treturn (\r\n\t\t// <div className=\"form_input\">\r\n\t\t// \t{/* {label && (\r\n\t\t// \t\t<span>ab</span>\r\n\t\t// \t)} */}\r\n\t\t// \t{label && (\r\n\t\t// \t\t<label htmlFor={label} className={styles.form_input__label}>\r\n\t\t// \t\t\t{label}\r\n\t\t// \t\t</label>\r\n\t\t// \t)}\r\n\t\t<div style={{maxWidthwidth:\"9rem\"}}>\r\n\t\t\t \t{label && (\r\n\t\t\t<label htmlFor={label} style={{color:\"#eee\", fontSize:\"1.2rem\"}}>\r\n\t\t \t\t\t{label}\r\n\t\t\t</label>\r\n\t\t \t)}\r\n\t\t\t<div className=\"textBox\" >\r\n\t\t\t\t{icon && (\r\n\t\t\t\t\t<label className=\"textBox__labels\">\r\n\t\t\t\t\t\t<svg className=\"textBox__label--icon\">\r\n\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"textBox__input\" >\r\n\t\t\t\t\t<select disabled={disabled} value={value} name={name} id={name} className='textBox__input--box' onChange={onChange} style={style} >\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{errorMessage && <p className=\"form_input__error\">{errorMessage}</p>}\r\n\t\t\t</div>\r\n\t\t// </div>\r\n\t);\r\n};\r\n\r\nexport default SelectBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\ProgressForm\\index.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\ProductSummary.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\OrderHistoryScreen\\OrderData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\DeleteCompany.js",["2537"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\n\r\nconst DeleteCompany = ({ data }) => {\r\n\tconst { modalDeleteState, onDeleteModalClose, onDeleteHandler } = data;\r\n\r\n\treturn (\r\n\t\t<Modal show={modalDeleteState}>\r\n\t\t\t<ModalHeading heading='Delete Company' onClose={onDeleteModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text'>Are you sure you want to delete this company?</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Delete' icon='delete' onClick={onDeleteHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteCompany;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\AddStylistComponent.js",["2538","2539","2540"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport TextBox from \"./TextBox.module.css\";\r\nimport Modal from \"../../Modal\";\r\nimport ModalHeading from \"../../Modal/ModalHeading\";\r\nimport { getTotalPriceAction } from \"../../../redux/actions/subscriptionAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddStylistComponent = ({\r\n  data,\r\n  type,\r\n  label1,\r\n  quantity,\r\n  setQuantity,\r\n  required = false,\r\n  coupon,\r\n}) => {\r\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const priceId = quantity ? quantity : 1;\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      setTotalPrice(data[0].unit_amount);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleDropdownToggle = () => {\r\n    setDropdownVisible(!isDropdownVisible);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const quantityValue = e.target.value;\r\n    setQuantity(quantityValue);\r\n    calculateTotalPrice(quantityValue);\r\n  };\r\n\r\n  const handleUpdateClick = async () => {\r\n    if (!quantity) {\r\n      setError(\"Please fill in the number of stylists.\");\r\n    } else {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        await dispatch(getTotalPriceAction(priceId, coupon));\r\n      } catch (error) {\r\n        console.error(\"Error fetching total price:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n        setDropdownVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalPrice = (quantityValue) => {\r\n    const quantityNumber = parseInt(quantityValue, 10);\r\n    if (isNaN(quantityNumber) || quantityNumber <= 0) {\r\n      setTotalPrice(data[0]?.unit_amount || 0);\r\n      return;\r\n    }\r\n\r\n    const selectedTier = data.find(\r\n      (tier) =>\r\n        quantityNumber >= tier.from &&\r\n        (tier.to === Infinity || quantityNumber <= tier.to)\r\n    );\r\n\r\n    if (selectedTier) {\r\n      setTotalPrice(selectedTier.unit_amount * quantityNumber);\r\n    } else {\r\n      setTotalPrice(data[data.length - 1]?.unit_amount * quantityNumber || 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={TextBox.form_input1}>\r\n      {label1 && (\r\n        <label htmlFor={label1} className={TextBox.form_input__label1}>\r\n          {label1}\r\n        </label>\r\n      )}\r\n      <div className={TextBox.dropDown_Handle} onClick={handleDropdownToggle}>\r\n        {quantity || 1}\r\n        <svg className={TextBox.form_input__icon} style={{ fill: \"#b7b2b2\" }}>\r\n          <use xlinkHref={`/assets/sprite.svg#icon-down`} />\r\n        </svg>\r\n      </div>\r\n\r\n      {isDropdownVisible && (\r\n        <Modal show={isDropdownVisible}>\r\n          <ModalHeading\r\n            heading={\"Update Quantity\"}\r\n            onClose={() => setDropdownVisible(false)}\r\n          />\r\n          <div className={TextBox.update_modal_container}>\r\n            {loading ? (\r\n              <div className={TextBox.loader_Quantity}>\r\n                <div className={TextBox.loading_spinner}></div>\r\n                <span className={TextBox.apply_Coupon_Text}>\r\n                  Updating Quantity...\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  style={{\r\n                    background: \"transparent\",\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                    boxShadow: \"none\",\r\n                    color: \"#fff\",\r\n                    borderBottom: \"1px solid #555\",\r\n                    width: \"100%\",\r\n                    borderRadius: \"0\",\r\n                    padding: \"0\",\r\n                    margin: \"0\",\r\n                    lineHeight: \"1\",\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the number of stylist\"\r\n                  value={quantity}\r\n                  onChange={(e) => {\r\n                    const newValue = e.target.value;\r\n                    if (newValue === \"\" || Number(newValue) > 0) {\r\n                      handleQuantityChange(e);\r\n                    }\r\n                  }}\r\n                  required={required}\r\n                  min=\"1\"\r\n                />\r\n                <style>\r\n                  {`\r\n                            input::placeholder {\r\n                            color: grey;\r\n                            }\r\n                           `}\r\n                </style>\r\n                {error && <p className={TextBox.errorText}>{error}</p>}\r\n                <div className={TextBox.stylist_Container}>\r\n                  <span>Number of Stylists</span>\r\n                  <span className={TextBox.price_Label}>Pricing(in USD)</span>\r\n                </div>\r\n                <div className={TextBox.price_Container}>\r\n                  <ul className={TextBox.price_Box}>\r\n                    {data?.map((tier, index) => {\r\n                      let rangeText;\r\n                      if (tier.from === tier.to) {\r\n                        rangeText = `${tier.from}`;\r\n                      } else if (tier.to === \"∞\") {\r\n                        rangeText = `More than ${tier.from - 1}`;\r\n                      } else {\r\n                        rangeText = `${tier.from}-${tier.to}`;\r\n                      }\r\n\r\n                      return (\r\n                        <li\r\n                          key={index}\r\n                          className={TextBox.list_Price}\r\n                          onClick={() =>\r\n                            handleOptionSelect(\r\n                              `${rangeText}: $${tier.unit_amount}`\r\n                            )\r\n                          }\r\n                        >\r\n                          <div className={TextBox.amount_Container}>\r\n                            <span className={TextBox.unit_Amount_Label}>\r\n                              {rangeText}\r\n                            </span>\r\n                            <span className={TextBox.unit_Amount_Label}>\r\n                              ${tier.unit_amount} per Stylist\r\n                            </span>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            )}\r\n            <button\r\n              className={TextBox.update_Button}\r\n              onClick={handleUpdateClick}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStylistComponent;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\CompanyScreen\\AddCompany.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\utils\\CountryCodesList.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBoxFogotPasswod\\index.js",["2541","2542","2543","2544"],"import moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport TextBox from './TextBox.module.css';\r\n\r\nconst InputBox = ({ type, placeholder, value, onChange, errorMessage, label, name, icon, style, disabled, defaultValue, min, required = false }) => {\r\n\tconst [inputType, setInputType] = useState(type);\r\n\r\n\tconst handlePasswordView = () => {\r\n\t\tif (type === 'password') {\r\n\t\t\tif (inputType === 'text') setInputType('password');\r\n\t\t\telse setInputType('text');\r\n\t\t}\r\n\t};\r\n\r\n\tconst disableDate = () => {\r\n\t\tvar today, dd, mm, yyyy;\r\n\t\ttoday = new Date();\r\n\t\tdd = today.getDate() + 1;\r\n\t\tmm = today.getMonth() + 1;\r\n\t\tyyyy = today.getFullYear();\r\n\t\treturn yyyy + \"-\" + \"mm\" + \"-\" + dd\r\n\t}\r\n\treturn (\r\n\t\t<div className={TextBox.form_input}>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={label} className={TextBox.form_input__label}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<div className={TextBox.form_input__container} style={style}>\r\n\t\t\t\t{icon && (<svg className={TextBox.form_input__icon}>\r\n\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n\t\t\t\t</svg>)\r\n\t\t\t\t}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={'inputType'}\r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmin={type === 'date' && (moment().format('YYYY-MM-DD') || type === 'time') && min}\r\n\t\t\t\t\tdisabled={disabled ? disabled : false}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tclassName={TextBox.form_input__box}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t/>\r\n\t\t\t\t{type === 'password' && (\r\n\t\t\t\t\t<svg className={TextBox.form_input__icon} onClick={handlePasswordView}>\r\n\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-${inputType === 'text' ? 'visibility_off' : 'visibility'}`} />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className={TextBox.form_input__error}>{errorMessage}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputBox;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\InputBox\\InputCoupon.js",["2545","2546","2547","2548","2549"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport moment from \"moment\";\r\nimport TextBox from \"./TextBox.module.css\";\r\nimport { VERIFY_COUPON_RESET } from \"../../../redux/constants/couponConstants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ModalHeading from \"../../Modal/ModalHeading\";\r\nimport Modal from \"../../Modal\";\r\nimport { getTotalPriceAction } from \"../../../redux/actions/subscriptionAction\";\r\n\r\nconst InputCoupon = ({\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  errorMessage,\r\n  label,\r\n  name,\r\n  icon,\r\n  style,\r\n  disabled,\r\n  defaultValue,\r\n  min,\r\n  required = false,\r\n  handler,\r\n  verfifyCoupon,\r\n  couponData,\r\n  setCouponData,\r\n  setCoupon,\r\n  priceId,\r\n  coupon,\r\n  applyCoupenLoading,\r\n  isModalVisible1,\r\n  setModalVisible1,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleRemoveClick = useCallback(() => {\r\n    dispatch({ type: VERIFY_COUPON_RESET });\r\n    setCouponData(\"\");\r\n    setCoupon(\"\");\r\n    setModalVisible(true);\r\n  }, []);\r\n\r\n  const getTotalPriceCall = useCallback(async () => {\r\n    const data = await dispatch(getTotalPriceAction(priceId));\r\n    if (data && data.status) {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!coupon) {\r\n      setLoading(true);\r\n      getTotalPriceCall();\r\n    }\r\n  }, [coupon]);\r\n\r\n  return (\r\n    <div className={TextBox.form_input1}>\r\n      <style>\r\n        {`\r\n        input::placeholder {\r\n        color: #ffffff; \r\n        }\r\n        input{\r\n        color: #ffffff; \r\n        }\r\n       `}\r\n      </style>\r\n\r\n      <div className={TextBox.input_Coupon}>\r\n        {label && (\r\n          <label htmlFor={label} className={TextBox.form_input__label1}>\r\n            {label}\r\n          </label>\r\n        )}\r\n        {/* Show 'Remove Coupon' button if coupon is applied */}\r\n        {verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.status ? (\r\n          <button className={TextBox.remove_Coupon} onClick={handleRemoveClick}>\r\n            Remove Coupon\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className={TextBox.input_Coupon}>\r\n        <div className={TextBox.input_Coupon_Container}>\r\n          <svg className={TextBox.form_input__icon}>\r\n            <use xlinkHref={`/assets/sprite.svg#icon-${icon}`} />\r\n          </svg>\r\n\r\n          <input\r\n            style={{\r\n              backgroundColor: '#3d3d3d',\r\n              width: '65%',\r\n              marginRight: '1rem',\r\n              borderRadius: '5px',\r\n            }}\r\n            type={type}\r\n            id={name}\r\n            name={name}\r\n            min={\r\n              type === \"date\" &&\r\n              (moment().format(\"YYYY-MM-DD\") || type === \"time\") &&\r\n              min\r\n            }\r\n            disabled={verfifyCoupon && verfifyCoupon.data && verfifyCoupon.data.status}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            required={required}\r\n          />\r\n\r\n          {!verfifyCoupon?.data?.status && (\r\n            <label className={TextBox.form_input__label1} onClick={handler}>\r\n              Apply\r\n            </label>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {errorMessage && (\r\n        <p className={TextBox.form_input__error}>{errorMessage}</p>\r\n      )}\r\n      \r\n      {loading ? (\r\n        <Modal show={isModalVisible}>\r\n          <div className={TextBox.modal_Container}>\r\n            <div className={TextBox.loading_spinner}></div>\r\n            <span className={TextBox.apply_Coupon_Text}>\r\n              Updating Quantity...\r\n            </span>\r\n          </div>\r\n        </Modal>\r\n      ) : null}\r\n\r\n      {applyCoupenLoading ? (\r\n        <Modal show={isModalVisible1}>\r\n          <div className={TextBox.modal_Container}>\r\n            <div className={TextBox.loading_spinner}></div>\r\n            <span className={TextBox.apply_Coupon_Text}>Apply Coupon...</span>\r\n          </div>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputCoupon;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\SelectBox\\SelectInput.js",["2550"],"import React, { useState } from 'react';\r\nimport './SelectBox.css';\r\n\r\nconst SelectInput = ({ children, icon, name, label, value, onChange, errorMessage, disabled, multiple }) => {\r\n\treturn (\r\n\t\t<div className='form_input'>\r\n\t\t\t<div className='textBox__inputs' style={{width: '10rem'}}>\r\n\t\t\t\t<select multiple={multiple} disabled={disabled} value={value} name={name} id={name} style={{ marginLeft: '0rem' }} className='textBox__input--box' onChange={onChange} icon={icon}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</select>\r\n\t\t\t</div> \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectInput;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\companyActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\videoActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\DeleteVideoCategory.js",["2551"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\n\r\nconst DeleteVideoCategory = ({ data }) => {\r\n\tconst { modalDeleteState, onDeleteModalClose, onDeleteHandler } = data;\r\n\r\n\treturn (\r\n\t\t<Modal show={modalDeleteState}>\r\n\t\t\t<ModalHeading heading='Delete Video Category' onClose={onDeleteModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text'>Are you sure you want to delete this video category?</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Delete' icon='delete' onClick={onDeleteHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteVideoCategory;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideoCategoriesScreen\\CreateCategory.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\addStockProduct.js",["2552","2553","2554","2555"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputSections from '../../components/Modal/InputSections';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport RadioButtons from '../../components/formInputs/RadioButtons/RadioButtons';\r\n\r\nconst AddStockProduct = ({ data }) => {\r\n\tconst {\r\n\t\tproductId,\r\n\r\n\t\tquantity,\r\n\t\ttype,\r\n\t\tsetQuantity,\r\n\t\tsetStockType,\r\n\r\n\t\thandleSubmit,\r\n\t\taddStockModalActive,\r\n\t\thandleAddStockModalClose,\r\n\r\n\t} = data;\r\n\r\n\tconst onChangeContentType = (e) => {\r\n\t\tsetStockType({ value: e.target.value, error: '' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={addStockModalActive}>\r\n\t\t\t<ModalHeading heading={productId && 'Add Product Stock'} onClose={handleAddStockModalClose} />\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Quantity'\r\n\t\t\t\t\t\ticon='film'\r\n\t\t\t\t\t\tplaceholder='eg, 10'\r\n\t\t\t\t\t\tvalue={quantity.value}\r\n\t\t\t\t\t\tonChange={(e) => setQuantity({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={quantity.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<RadioButtons\r\n\t\t\t\t\t\tlabel='Type'\r\n\t\t\t\t\t\tplaceholder='Type'\r\n\t\t\t\t\t\tradioButtons={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\t\t\tlabel: 'Credit',\r\n\t\t\t\t\t\t\t\tvalue: 'credit'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: 2,\r\n\t\t\t\t\t\t\t\tlabel: 'Debit',\r\n\t\t\t\t\t\t\t\tvalue: 'debit'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tchecked={type.value ? type.value : 'credit'}\r\n\t\t\t\t\t\tonChange={onChangeContentType}\r\n\t\t\t\t\t\terror={type.error}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<ModalButton label={productId ? 'Add Stock' : 'Add Stock'} icon={productId ? 'plus' : 'plus'} onClick={handleSubmit} />\r\n\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddStockProduct;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\ProductDetailModal.js",["2556"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from '../../components/Modal';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { getOneProductAction } from '../../redux/actions/productActions';\r\nimport ProductDetailStyle from './ProductDetails.module.css';\r\nimport { GET_ONE_PRODUCT_RESET } from '../../redux/constants/productConstants';\r\n\r\nconst ProductDetailModal = ({ data }) => {\r\n\tconst { productId, modalProductDetailState, onProductDetailModalClose } = data;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst getOneProduct = useSelector((state) => state.getOneProduct);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (productId) dispatch(getOneProductAction(productId));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch({ type: GET_ONE_PRODUCT_RESET });\r\n\t\t\t};\r\n\t\t},\r\n\t\t[productId, dispatch]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Modal show={modalProductDetailState}>\r\n\t\t\t<ModalHeading heading='Product Details' onClose={onProductDetailModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t{getOneProduct && getOneProduct.loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\tgetOneProduct &&\r\n\t\t\t\t\tgetOneProduct.product &&\r\n\t\t\t\t\tgetOneProduct.product.data &&\r\n\t\t\t\t\tgetOneProduct.product.data.result && (\r\n\t\t\t\t\t\t<div className={ProductDetailStyle.productDetails}>\r\n\t\t\t\t\t\t\t<div className={ProductDetailStyle.productDetails}>\r\n\t\t\t\t\t\t\t\t<div className={ProductDetailStyle.product_detail_screen_main_right}>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={getOneProduct.product.data.result.productImageURL}\r\n\t\t\t\t\t\t\t\t\t\tclassName={ProductDetailStyle.product_detail_screen_main_image}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={ProductDetailStyle.product_detail_screen_main_left}>\r\n\t\t\t\t\t\t\t\t\t<h1 className={ProductDetailStyle.productTitle}>{getOneProduct.product.data.result.productName}</h1>\r\n\r\n\t\t\t\t\t\t\t\t\t<h1 className={ProductDetailStyle.productDots}>\r\n\t\t\t\t\t\t\t\t\t\t<span>&#8226;</span> <span>&#8226;</span> <span>&#8226;</span> <span>&#8226;</span>\r\n\t\t\t\t\t\t\t\t\t</h1>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className={ProductDetailStyle.productPriceQuantity}>\r\n\t\t\t\t\t\t\t\t\t\t<h3 className={ProductDetailStyle.productPrice}>\r\n\t\t\t\t\t\t\t\t\t\t\t$ {getOneProduct.product.data.result.productPrice}\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t<p className={ProductDetailStyle.productQuantity}>\r\n\t\t\t\t\t\t\t\t\t\t\t({getOneProduct.product.data.result.quantity} / {getOneProduct.product.data.result.stock})\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<p className={ProductDetailStyle.productDesc}>\r\n\t\t\t\t\t\t\t\t\t\t{getOneProduct.product.data.result.productDescription}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t\t\t<p className={ProductDetailStyle.productCategory}>\r\n\t\t\t\t\t\t\t\t\t\t<span>Category:</span>\r\n\t\t\t\t\t\t\t\t\t\t<svg className={ProductDetailStyle.productCategoryIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-archive`} />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t{getOneProduct.product.data.result.category.categoryName}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ProductDetailModal;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\CreateEditProduct.js",["2557","2558","2559"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputSections from '../../components/Modal/InputSections';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport UploadFile from '../../components/Modal/UploadFile';\r\nimport { getAllProductCategoriesAction } from '../../redux/actions/productActions';\r\nimport { getStylistListAction } from '../../redux/actions/stylistActions';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\n\r\nconst CreateProduct = ({ data }) => {\r\n\tconst {\r\n\t\tproductId,\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\tproductName,\r\n\t\tsetProductName,\r\n\t\tproductDesc,\r\n\t\tsetProductDesc,\r\n\t\tproductCategory,\r\n\t\tsetProductCategory,\r\n\t\tproductPoster,\r\n\t\tsetProductPoster,\r\n\t\tproductPrice,\r\n\t\tsetProductPrice,\r\n\t\tactualPrice,\r\n\t\tsetActualPrice,\r\n\t\trating,\r\n\t\tsetRating,\r\n\r\n\r\n\t\timageSrc,\r\n\t\tsetImageSrc,\r\n\t\thandleSubmit\r\n\t} = data;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst getAllProductCategories = useSelector((state) => state.getAllProductCategories);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tdispatch(getAllProductCategoriesAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\tdispatch(getStylistListAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\tvar url = reader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive}>\r\n\t\t\t<ModalHeading heading={productId ? 'Update Product' : 'Add New Product'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Product Name'\r\n\t\t\t\t\t\ticon='film'\r\n\t\t\t\t\t\tplaceholder='eg, Shampoo  '\r\n\t\t\t\t\t\tvalue={productName.value}\r\n\t\t\t\t\t\tonChange={(e) => setProductName({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={productName.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\tlabel='Product Description'\r\n\t\t\t\t\t\ticon='film'\r\n\t\t\t\t\t\tplaceholder='eg, Product description'\r\n\t\t\t\t\t\tvalue={productDesc.value}\r\n\t\t\t\t\t\tonChange={(e) => setProductDesc({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={productDesc.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\tvalue={productCategory.value}\r\n\t\t\t\t\t\tonChange={(e) => setProductCategory({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={productCategory.error}\r\n\t\t\t\t\t\tlabel='Product Category'\r\n\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\tname='product-category'>\r\n\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\tSelect Category\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{getAllProductCategories &&\r\n\t\t\t\t\t\t\tgetAllProductCategories.categories &&\r\n\t\t\t\t\t\t\tgetAllProductCategories.categories.data &&\r\n\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result &&\r\n\t\t\t\t\t\t\tgetAllProductCategories.categories.data.result.map((res) => (\r\n\t\t\t\t\t\t\t\t<option value={res._id} key={res._id}>\r\n\t\t\t\t\t\t\t\t\t{res.categoryName}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Product Price'\r\n\t\t\t\t\t\ticon='cash'\r\n\t\t\t\t\t\tplaceholder='eg, $ 9999'\r\n\t\t\t\t\t\tvalue={productPrice.value}\r\n\t\t\t\t\t\tonChange={(e) => setProductPrice({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={productPrice.error}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Actual Price'\r\n\t\t\t\t\t\ticon='cash'\r\n\t\t\t\t\t\tplaceholder='eg, $ 9999'\r\n\t\t\t\t\t\tvalue={actualPrice.value}\r\n\t\t\t\t\t\tonChange={(e) => setActualPrice({ value: e.target.value })}\r\n\t\t\t\t\t\terrorMessage={actualPrice.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\tvalue={rating.value}\r\n\t\t\t\t\t\tonChange={(e) => setRating({ value: e.target.value })}\r\n\t\t\t\t\t\tlabel='Product Rating'\r\n\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\tname='product-rating'\r\n\t\t\t\t\t\terrorMessage={rating.error}>\r\n\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\tSelect Rating\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t</SelectBox>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<FileUpload\r\n\t\t\t\t\tlabel='Upload Product Poster'\r\n\t\t\t\t\ticon='upload'\r\n\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\tsetProductPoster({ value: e.target.files[0], error: '' });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\terrorMessage={productPoster.error}\r\n\t\t\t\t/>\r\n\t\t\t\t<ModalButton label={productId ? 'Update Product' : 'Add New'} icon={productId ? 'edit' : 'plus'} onClick={handleSubmit} />\r\n\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateProduct;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\AppSettingsActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\StylistSettings.js",["2560","2561","2562","2563","2564"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport InputTime from '../../components/formInputs/InputBox/InputTime';\r\nimport MultiSelectBox from '../../components/formInputs/SelectBox/MultiSelectBox';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllEnableSubServiceAction } from '../../redux/actions/serviceActions';\r\nimport { GET_ALL_ENABLE_SUB_SERVICE_RESET } from '../../redux/constants/serviceConstants';\r\nimport { getStylistSettingsAction } from '../../redux/actions/stylistActions';\r\nimport { GET_STYLIST_SETTINGS_RESET } from '../../redux/constants/stylistConstants';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\n// import AddBusinessHoursWeekly from \"../StylistSessionScreen/AddBusinessHoursWeekly\";\r\n\r\nconst StylistSettings = ({ data }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst enableSubServiceList = useSelector((state) => state.enableSubServiceList);\r\n\tconst getStylistSettings = useSelector((state) => state.getStylistSettings);\r\n\tconst [enableSubServiceListData, setEnableSubServiceListData] = useState([]);\r\n\r\n\tconst {\r\n\t\tstartTime, setStartTime,\r\n\t\tendTime, setEndTime,\r\n\t\trecurringType, setRecurringType,\r\n\t\tintervalTime, setIntervalTime,\r\n\t\tserviceArray, setServiceArray,\r\n\t\tstylistSettingsModal,\r\n\t\thandleSettingsModalClose,\r\n\t\tsettingsSubmitHandler,\r\n\t\tselectUpdateModel,\r\n\t\tisCompulsory,\r\n\t\tsetIsCompulsory,\r\n\t\tisCompulsoryError,\r\n\t\tsetIsCompulsoryError,\r\n\t} = data;\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (selectUpdateModel && selectUpdateModel._id) {\r\n\t\t\t\tdispatch(getStylistSettingsAction(selectUpdateModel._id));\r\n\t\t\t\tdispatch(getAllEnableSubServiceAction({ pageNumber: 1, pageSize: 1000, filter: '' }));\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tdispatch({ type: GET_ALL_ENABLE_SUB_SERVICE_RESET });\r\n\t\t\t\t\tdispatch({ type: GET_STYLIST_SETTINGS_RESET });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectUpdateModel, dispatch]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (\r\n\t\t\t\tgetStylistSettings &&\r\n\t\t\t\tgetStylistSettings.userInfo &&\r\n\t\t\t\tgetStylistSettings.userInfo.data &&\r\n\t\t\t\tgetStylistSettings.userInfo.data.result\r\n\t\t\t) {\r\n\t\t\t\tlet settingsData = getStylistSettings.userInfo.data.result;\r\n\t\t\t\tsetStartTime({ value: settingsData.startTime, error: '' })\r\n\t\t\t\tsetEndTime({ value: settingsData.endTime, error: '' })\r\n\t\t\t\tsetRecurringType({ value: settingsData.recurringType, error: '' })\r\n\t\t\t\tsetIntervalTime({ value: settingsData.intervalTime, error: '' })\r\n\t\t\t\tsettingsData.services.map((item) => {\r\n\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t});\r\n\t\t\t\tsetIsCompulsory(settingsData.isBreakTimeCompulsory);\r\n\t\t\t\tsetServiceArray({ value: settingsData.services, error: '' })\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getStylistSettings]\r\n\t);\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!enableSubServiceListData.length) {\r\n\t\t\t\tif (enableSubServiceList &&\r\n\t\t\t\t\tenableSubServiceList.categories &&\r\n\t\t\t\t\tenableSubServiceList.categories.data &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result &&\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.length > 0) {\r\n\t\t\t\t\tenableSubServiceList.categories.data.result.map((item) => {\r\n\t\t\t\t\t\titem.label = item.title;\r\n\t\t\t\t\t\titem.value = item._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetEnableSubServiceListData(enableSubServiceList.categories.data.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[enableSubServiceList, enableSubServiceListData]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Modal show={stylistSettingsModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={selectUpdateModel && selectUpdateModel._id ? 'Update Stylist Settings' : 'Add New Stylist Settings'}\r\n\t\t\t\tonClose={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<ModalForm onSubmit={settingsSubmitHandler} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection >\r\n\t\t\t\t\t<MultiSelectBox\r\n\t\t\t\t\t\tmultiple={true}\r\n\t\t\t\t\t\tlabel='Select Services'\r\n\t\t\t\t\t\ticon={false}//'archive'\r\n\t\t\t\t\t\terrorMessage={serviceArray.error}\r\n\t\t\t\t\t\tvalue={serviceArray.value.length ? [...serviceArray.value] : null}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetServiceArray({ value: event, error: '' });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tchildren={enableSubServiceListData}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</MultiSelectBox>\r\n\r\n\t\t\t\t\t<InputTime\r\n\t\t\t\t\t\tlabel='Booking Interval'\r\n\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\tplaceholder='Time'\r\n\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\ttype='Number'\r\n\t\t\t\t\t\tstyle={{ padding: '0.9rem 1rem' }}\r\n\t\t\t\t\t\tvalue={intervalTime.value}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetIntervalTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={intervalTime.error}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\tlabel=\"Select Recurring Type\"\r\n\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\tvalue={recurringType.value}\r\n\t\t\t\t\t\terrorMessage={recurringType.error}\r\n\t\t\t\t\t\tonChange={(e) => setRecurringType({ value: e.target.value, error: '' })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"week\">\r\n\t\t\t\t\t\t\tWeek\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"month\">\r\n\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"year\">\r\n\t\t\t\t\t\t\tYear\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</SelectBox>\r\n\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputsSectionColumn style={{ gap: '0.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t\t<label style={{ fontSize: '1.2rem' }}>Break Time</label>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', gap: '2rem' }}>\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Start Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, DD/MM/YYYY'\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tvalue={startTime.value}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetStartTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={startTime.error}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='End Time'\r\n\t\t\t\t\t\t\t\ticon='stopwatch'\r\n\t\t\t\t\t\t\t\tplaceholder='eg, DD/MM/YYYY'\r\n\t\t\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\t\t\tstep=\"3600000\"\r\n\t\t\t\t\t\t\t\tvalue={endTime.value}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetEndTime({ value: event.target.value, error: '' });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={endTime.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', gap: '2rem' }}>\r\n\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='isBreakTimeCompulsory'\r\n\t\t\t\t\t\t\t\tchecked={isCompulsory}\r\n\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsory(!isCompulsory);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tname='active' />\r\n\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label htmlFor='active' className='inputBox__toggle--label'>\r\n\t\t\t\t\t\t\tCompulsory\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<div style={{ display: 'flex', gap: '1.5rem', padding: '0rem', margin: '0rem' }}>\r\n\t\t\t\t\t<ModalButton\r\n\t\t\t\t\t\tlabel={selectUpdateModel && selectUpdateModel._id ? 'Update Settings' : 'Add Settings'}\r\n\t\t\t\t\t\ticon={selectUpdateModel && selectUpdateModel._id ? 'edit' : 'plus'}\r\n\t\t\t\t\t\tonClick={settingsSubmitHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <ModalButton\r\n\t\t\t\t\t\tlabel={'Add Business Hour'}\r\n\t\t\t\t\t\ticon={'stopwatch'}\r\n\t\t\t\t\t\tonClick={settingsSubmitHandler}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</ModalForm>\r\n\r\n\t\t\t{/* <AddBusinessHoursWeekly\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tbusinessHourDetail,\r\n\t\t\t\t\tweekDays,\r\n\t\t\t\t\tsetWeekDays,\r\n\t\t\t\t\tstylistId:selectUpdateModel._id,\r\n\t\t\t\t\taddBuinessHoursModal,\r\n\t\t\t\t\tsetAddBuinessHoursModal,\r\n\t\t\t\t\taddBulkAvailabilitys,\r\n\t\t\t\t\tsetresetHandler,\r\n\t\t\t\t\tresetHandler,\r\n\t\t\t\t\tsetresetslot,\r\n\t\t\t\t\thandleResetSlot\r\n\t\t\t\t}}\r\n\t\t\t/> */}\r\n\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default StylistSettings;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\StylistData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\DeleteStylist.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsScreen\\DeleteProduct.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\StylistsScreen\\CreateStylist.js",["2565"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\n// import SelectBox from '../../components/formInputs/SelectBox';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\n\r\nconst CreateStylist = ({ data }) => {\r\n\tconst {\r\n\t\tshowAddModal,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tselectUpdateModel,\r\n\t\timageSrc,\r\n\t\tsetImageSrc,\r\n\r\n\t\tname,\r\n\t\temail,\r\n\t\tpassword,\r\n\t\taddress,\r\n\t\tphone,\r\n\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\t\tsetAddress,\r\n\t\tsetPassword,\r\n\r\n\t\tnameError,\r\n\t\taddressError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\tpasswordError,\r\n\r\n\t\tsetNameError,\r\n\t\tsetAddressError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\t\tsetPasswordError,\r\n\r\n\t\tsetUploadFileData,\r\n\t\tuploadFileDataError,\r\n\t\tsetUploadFileDataError,\r\n\r\n\t\t// companyList,\r\n\t\t// company,\r\n\t\t// setCompany,\r\n\t\t// companyError\r\n\t} = data;\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\tvar url = reader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={selectUpdateModel._id ? 'Update Stylist' : 'Add New Stylist'}\r\n\t\t\t\tonClose={handleAddModalClose}\r\n\t\t\t/>\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Stylist Name'\r\n\t\t\t\t\t\ticon='stylist'\r\n\t\t\t\t\t\tplaceholder='eg, BookB Salon-Stylist'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\ticon='phone'\r\n\t\t\t\t\t\tplaceholder='eg, 123 456 7890'\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<div className='flex' style={{ gap: '2rem' }}>\r\n\t\t\t\t\t\t{/* <SelectBox\r\n\t\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\r\n\t\t\t\t\t\t\terrorMessage={companyError}\r\n\t\t\t\t\t\t\tlabel='Select Company'\r\n\t\t\t\t\t\t\ticon='archive'\r\n\t\t\t\t\t\t\tname='company-name'>\r\n\t\t\t\t\t\t\t<option className='optionBox' value=''>\r\n\t\t\t\t\t\t\t\tSelect Company\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{companyList &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data.result &&\r\n\t\t\t\t\t\t\t\tcompanyList.categories.data.result.map((company) => (\r\n\t\t\t\t\t\t\t\t\t<option value={company._id} key={company._id}>\r\n\t\t\t\t\t\t\t\t\t\t{company.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox> */}\r\n\t\t\t\t\t\t{!selectUpdateModel._id && (\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t\tplaceholder='••••••••••••••'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetPassword(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetPasswordError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={passwordError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\ticon='pin'\r\n\t\t\t\t\t\t\tplaceholder='Enter Address'\r\n\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetAddress(event.target.value);\r\n\t\t\t\t\t\t\t\tsetAddressError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={addressError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSectionColumn>\r\n\r\n\t\t\t\t<FileUpload\r\n\t\t\t\t\tlabel='Upload Stylist Photo'\r\n\t\t\t\t\ticon='upload'\r\n\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\tsetUploadFileData(e.target.files);\r\n\t\t\t\t\t\tsetUploadFileDataError('');\r\n\t\t\t\t\t}}\r\n\t\t\t\t\terrorMessage={uploadFileDataError}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<ModalButton\r\n\t\t\t\t\tlabel={selectUpdateModel._id ? 'Update Stylist' : 'Add New'}\r\n\t\t\t\t\ticon={selectUpdateModel._id ? 'edit' : 'plus'}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateStylist;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\DeleteAppVersion.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\HomeScreenSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\MyProfileScreenSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\VideosScreenSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\LoginScreenSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Skeletons\\AppSettings\\LogoUploadSkeleton.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\BarberInfo.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\AppVersionScreen\\AddAppVersion.js",["2566"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\n\r\nconst AddAppVersion = ({ data }) => {\r\n\tconst {\r\n\t\taddModalActive,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\r\n\t\tversionTitleAndroid,\r\n\t\tsetVersionTitleAndroid,\r\n\t\tversionTitleAndroidError,\r\n\t\tsetVersionTitleAndroidError,\r\n\t\tversionTitleIOS,\r\n\t\tsetVersionTitleIOS,\r\n\t\tversionTitleIOSError,\r\n\t\tsetVersionTitleIOSError,\r\n\t\tappDescription,\r\n\t\tsetVersionDescription,\r\n\t\tversionDescriptionError,\r\n\t\tsetVersionDescriptionError,\r\n\t\tisCompulsory,\r\n\t\tsetIsCompulsory,\r\n\t\tisCompulsoryError,\r\n\t\tsetIsCompulsoryError,\r\n\r\n\t\tandroidStoreURL,\r\n\t\tsetAndroidStoreURL,\r\n\t\tiosStoreURL,\r\n\t\tsetIOSStoreURL,\r\n\t\tandroidStoreURLError,\r\n\t\tsetAndroidStoreURLError,\r\n\t\tiosStoreURLError,\r\n\t\tsetIOSStoreURLError\r\n\t} = data;\r\n\tconst createAppVersion = useSelector((state) => state.createAppVersion);\r\n\r\n\treturn (\r\n\t\t<Modal show={addModalActive}>\r\n\t\t\t<ModalHeading heading='Add New Version' onClose={handleAddModalClose} />\r\n\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Android Version'\r\n\t\t\t\t\t\ticon='android'\r\n\t\t\t\t\t\tplaceholder='eg, 0.0.1'\r\n\t\t\t\t\t\tvalue={versionTitleAndroid}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionTitleAndroid(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionTitleAndroidError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionTitleAndroidError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='iOS Version'\r\n\t\t\t\t\t\ticon='apple'\r\n\t\t\t\t\t\tplaceholder='eg, 0.0.1'\r\n\t\t\t\t\t\tvalue={versionTitleIOS}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionTitleIOS(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionTitleIOSError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionTitleIOSError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Android Store URL'\r\n\t\t\t\t\t\ticon='android'\r\n\t\t\t\t\t\tplaceholder='eg, https://play.google.com/'\r\n\t\t\t\t\t\tvalue={androidStoreURL}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetAndroidStoreURL(event.target.value);\r\n\t\t\t\t\t\t\tsetAndroidStoreURLError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={androidStoreURLError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='iOS Store URL'\r\n\t\t\t\t\t\ticon='apple'\r\n\t\t\t\t\t\tplaceholder='eg, https://apps.apple.com/'\r\n\t\t\t\t\t\tvalue={iosStoreURL}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetIOSStoreURL(event.target.value);\r\n\t\t\t\t\t\t\tsetIOSStoreURLError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={iosStoreURLError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\tlabel='App Description'\r\n\t\t\t\t\t\ticon='info'\r\n\t\t\t\t\t\tplaceholder='Enter App Description'\r\n\t\t\t\t\t\tvalue={appDescription}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetVersionDescription(event.target.value);\r\n\t\t\t\t\t\t\tsetVersionDescriptionError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={versionDescriptionError}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', gap: '2rem' }}>\r\n\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='isPOS'\r\n\t\t\t\t\t\t\t\tchecked={isCompulsory}\r\n\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsory(!isCompulsory);\r\n\t\t\t\t\t\t\t\t\tsetIsCompulsoryError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label htmlFor='active' className='inputBox__toggle--label'>\r\n\t\t\t\t\t\t\tCompulsory\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t{createAppVersion && createAppVersion.loading ? (\r\n\t\t\t\t\t<ModalButton label={'Please wait'} icon={'plus'} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ModalButton label='Add New Version' icon='plus' onClick={handleSubmit} />\r\n\t\t\t\t)}\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddAppVersion;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\SendMessage.js",["2567","2568","2569","2570","2571"],"import React from 'react'\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\n\r\nconst SendMessage = ({ data }) => {\r\n  const { messageHead, setMessageHead, messageTitle, setMessageTitle, messageError, messageTitleError, handleMessageClose, sendMessageModal, setSendMessageModal, handleMessageSubmit } = data\r\n  return (\r\n    <Modal show={sendMessageModal}>\r\n      <ModalHeading heading='Send Message' onClose={handleMessageClose} />\r\n      <ModalForm>\r\n        {/* <InputsSection>\r\n        <InputBox\r\n        label=\"Title\"\r\n        onChange={(e)=>setMessageTitle(e.target.value)}\r\n        value={messageTitle}\r\n        errorMessage={messageTitleError}\r\n        />\r\n    </InputsSection> */}\r\n        <InputsSection style={{ display: 'block' }}>\r\n          <TextareaBox\r\n            label=\"Notes\"\r\n            style={{ width: '100%', height: '10rem' }}\r\n            onChange={(e) => setMessageHead(e.target.value)}\r\n            value={messageHead}\r\n            errorMessage={messageError}\r\n            placeholder=\"Type message\"\r\n          />\r\n        </InputsSection>\r\n        <ModalButton\r\n          label='Send Message'\r\n          icon='message'\r\n          onClick={handleMessageSubmit}\r\n        />\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SendMessage","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\AddNotes.js",["2572","2573"],"import React from 'react'\r\nimport InputBox from '../../components/formInputs/InputBox'\r\nimport Modal from '../../components/Modal'\r\nimport InputsSection from '../../components/Modal/InputsSection'\r\nimport ModalForm from '../../components/Modal/ModalForm'\r\nimport ModalHeading from '../../components/Modal/ModalHeading'\r\nimport TextareaBox from '../../components/formInputs/TextareaBox'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\n\r\nconst AddNotes = ({ data }) => {\r\n  const { addNotesModal, handleAddNotesModalClose, notes, setNotes, notesError, handleNotesSubmit } = data\r\n  return (\r\n    <Modal show={true}>\r\n      <ModalHeading heading='Add Notes' onClose={handleAddNotesModalClose} />\r\n      <ModalForm>\r\n        <InputsSection>\r\n          <TextareaBox\r\n            label=\"Notes\"\r\n            style={{ height: '10rem' }}\r\n            onChange={(e) => setNotes(e.target.value)}\r\n            value={notes}\r\n            errorMessage={notesError}\r\n          />\r\n        </InputsSection>\r\n        <ModalButton\r\n          label='Add Notes'\r\n          icon='plus'\r\n          onClick={handleNotesSubmit}\r\n        />\r\n\r\n      </ModalForm>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNotes","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\CreateUser.js",["2574","2575","2576","2577"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport RadioButtons from '../../components/formInputs/RadioButtons/RadioButtons';\r\nimport SelectBox from '../../components/formInputs/SelectBox';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\n\r\nconst CreateUser = ({ data }) => {\r\n\tconst {\r\n\t\tshowAddModal,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\t\tgender,\r\n\t\tsetGender,\r\n\t\tsetGenderError,\r\n\t\tgenderError,\r\n\t\t// dob,\r\n\t\t// dobError,\r\n\t\t// setDOB,\r\n\t\t// setDOBError,\r\n\t\t// age,\r\n\t\t// setAge,\r\n\t\t// setAgeError,\r\n\t\t// ageError,\r\n\t\tstylist,\r\n\t\tsetStylist,\r\n\t\tsetStylistNameError,\r\n\t\tstylistNameError,\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\t\tnameError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\t\tsetNameError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\r\n\t\tstylistList,\r\n\t\tselectUpdateModelUser,\r\n\t\tsetSelectUpdateModelUser,\r\n\t\tnotes, setNotes, notesError\r\n\t} = data;\r\n\r\n\tconst onChangeContentType = (e) => {\r\n\t\tsetGenderError('');\r\n\t\tsetGender(e.target.value);\r\n\t};\r\n\r\n\tconst getAge = (birthDateString) => {\r\n\t\tconst today = new Date();\r\n\t\tconst birthDate = new Date(birthDateString);\r\n\r\n\t\tconst yearsDifference = today.getFullYear() - birthDate.getFullYear();\r\n\r\n\t\tif (\r\n\t\t\ttoday.getMonth() < birthDate.getMonth() ||\r\n\t\t\t(today.getMonth() === birthDate.getMonth() && today.getDate() < birthDate.getDate())\r\n\t\t) {\r\n\t\t\treturn yearsDifference - 1;\r\n\t\t}\r\n\r\n\t\treturn yearsDifference;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading\r\n\t\t\t\theading={selectUpdateModelUser._id ? 'Update User' : 'Add New User'}\r\n\t\t\t\tonClose={handleAddModalClose}\r\n\t\t\t/>\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\tplaceholder=\"eg, John Doe\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ticon=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"eg, johndoe@example.com\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\tplaceholder=\"eg, 123 456 7890\"\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<div className=\"flex\" style={{ gap: '2rem' }}>\r\n\t\t\t\t\t\t<RadioButtons\r\n\t\t\t\t\t\t\tlabel=\"Gender\"\r\n\t\t\t\t\t\t\tplaceholder=\"Gender\"\r\n\t\t\t\t\t\t\tradioButtons={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Male',\r\n\t\t\t\t\t\t\t\t\tvalue: 'male'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Female',\r\n\t\t\t\t\t\t\t\t\tvalue: 'female'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tchecked={gender}\r\n\t\t\t\t\t\t\tonChange={onChangeContentType}\r\n\t\t\t\t\t\t\terror={genderError}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\tlabel='Date of Birth'\r\n\t\t\t\t\t\t\ticon='birthday-cake'\r\n\t\t\t\t\t\t\tplaceholder='Age'\r\n\t\t\t\t\t\t\tvalue={dob}\r\n\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetAge(getAge(dob));\r\n\t\t\t\t\t\t\t\tsetDOB(event.target.value);\r\n\t\t\t\t\t\t\t\tsetDOBError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={dobError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t <SelectBox\r\n\t\t\t\t\t\t\tlabel='Salon Name'\r\n\t\t\t\t\t\t\ticon='salon'\r\n\t\t\t\t\t\t\tname='salon-name'\r\n\t\t\t\t\t\t\tvalue={salon_name}\r\n\t\t\t\t\t\t\tonChange={(e) => setSalonName(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value=''>Select Salon</option>\r\n\t\t\t\t\t\t\t{salonList &&\r\n\t\t\t\t\t\t\t\tsalonList.data &&\r\n\t\t\t\t\t\t\t\tsalonList.data.map((salon) => (\r\n\t\t\t\t\t\t\t\t\t<option value={salon._id} key={salon._id}>\r\n\t\t\t\t\t\t\t\t\t\t{salon.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox> */}\r\n\r\n\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\tvalue={stylist}\r\n\t\t\t\t\t\t\tonChange={(e) => setStylist(e.target.value)}\r\n\t\t\t\t\t\t\tlabel=\"Select Stylist\"\r\n\t\t\t\t\t\t\ticon=\"stylist\"\r\n\t\t\t\t\t\t\tname=\"stylist-name\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option className=\"optionBox\" value=\"\">\r\n\t\t\t\t\t\t\t\tSelect Stylist\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{stylistList &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.status &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.data.result.length > 0 &&\r\n\t\t\t\t\t\t\t\tstylistList.userInfo.data.result.map((stylist) => (\r\n\t\t\t\t\t\t\t\t\t<option value={stylist._id} key={stylist._id}>\r\n\t\t\t\t\t\t\t\t\t\t{stylist.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</SelectBox>\r\n\t\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\t\tlabel=\"Notes\"\r\n\t\t\t\t\t\t\tstyle={{ height: '10rem' }}\r\n\t\t\t\t\t\t\tonChange={(e) => setNotes(e.target.value)}\r\n\t\t\t\t\t\t\tvalue={notes}\r\n\t\t\t\t\t\t\terrorMessage={notesError}\r\n\t\t\t\t\t\t\tplaceholder='notes..'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSectionColumn>\r\n\r\n\t\t\t\t<ModalButton\r\n\t\t\t\t\tlabel={selectUpdateModelUser._id ? 'Update User' : 'Add New'}\r\n\t\t\t\t\ticon={selectUpdateModelUser._id ? 'edit' : 'plus'}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateUser;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\DeleteUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\UsersScreen\\UsersData.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\redux\\actions\\attendanceActions.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\CancelSubscription.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\MenuSettingUser.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\CreateEditSalon.js",["2578"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport InputsSection from '../../components/Modal/InputsSection';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport InputBox from '../../components/formInputs/InputBox';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport FileUpload from '../../components/formInputs/FileUpload';\r\nimport TextareaBox from '../../components/formInputs/TextareaBox';\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\n\r\nconst CreateEditSalon = ({ data }) => {\r\n\tconst {\r\n\t\tshowAddModal,\r\n\t\thandleAddModalClose,\r\n\t\thandleSubmit,\r\n\t\tselectUpdateModel,\r\n\r\n\t\tname,\r\n\t\temail,\r\n\t\taddress,\r\n\t\tphone,\r\n\r\n\t\tsetName,\r\n\t\tsetEmail,\r\n\t\tsetPhone,\r\n\t\tsetAddress,\r\n\r\n\t\tnameError,\r\n\t\taddressError,\r\n\t\tphoneError,\r\n\t\temailError,\r\n\r\n\t\tsetNameError,\r\n\t\tsetAddressError,\r\n\t\tsetPhoneError,\r\n\t\tsetEmailError,\r\n\r\n\t\tpassword,\r\n\t\tsetPassword,\r\n\t\tpasswordError,\r\n\t\tsetPasswordError,\r\n\r\n\r\n\t\timageSrc,\r\n\t\tsetImageSrc,\r\n\r\n\t\tsetUploadFileData,\r\n\t\tuploadFileDataError,\r\n\t\tsetUploadFileDataError,\r\n\t} = data;\r\n\r\n\r\n\tconst handleChangeImage = (e) => {\r\n\t\tvar file = e.target.files[0];\r\n\t\tvar reader = new FileReader();\r\n\t\tif (e.target.files[0]) {\r\n\t\t\tvar url = reader.readAsDataURL(file);\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImageSrc(reader.result);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Modal show={showAddModal}>\r\n\t\t\t<ModalHeading heading={selectUpdateModel._id ? 'Update Salon' : 'Add New Salon'} onClose={handleAddModalClose} />\r\n\t\t\t<ModalForm onSubmit={handleSubmit} style={{ marginBottom: '2.5rem' }}>\r\n\t\t\t\t<InputsSection>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Salon Name'\r\n\t\t\t\t\t\ticon='salon'\r\n\t\t\t\t\t\tplaceholder='eg, BookB Salon'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetName(event.target.value);\r\n\t\t\t\t\t\t\tsetNameError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={nameError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\ticon='email'\r\n\t\t\t\t\t\tplaceholder='eg, johndoe@example.com'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetEmail(event.target.value);\r\n\t\t\t\t\t\t\tsetEmailError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={emailError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\ticon='phone'\r\n\t\t\t\t\t\tplaceholder='eg, 123 456 7890'\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPhone(inputPhoneMasking(event.target.value));\r\n\t\t\t\t\t\t\tsetPhoneError('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terrorMessage={phoneError}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputsSection>\r\n\t\t\t\t<InputsSectionColumn>\r\n\t\t\t\t\t<div className='flex' style={{ gap: '2rem' }}>\r\n\t\t\t\t\t\t<TextareaBox\r\n\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\ticon='pin'\r\n\t\t\t\t\t\t\tplaceholder='eg, Devar, USA'\r\n\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetAddress(event.target.value);\r\n\t\t\t\t\t\t\t\tsetAddressError('');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terrorMessage={addressError}\r\n\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t!selectUpdateModel._id &&\r\n\t\t\t\t\t\t\t<InputBox\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\ticon='key'\r\n\t\t\t\t\t\t\t\tplaceholder='**********'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetPassword(event.target.value);\r\n\t\t\t\t\t\t\t\t\tsetPasswordError('');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\terrorMessage={passwordError}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InputsSectionColumn>\r\n\t\t\t\t<FileUpload\r\n\t\t\t\t\tlabel='Upload Salon Logo'\r\n\t\t\t\t\ticon='upload'\r\n\t\t\t\t\timage={imageSrc}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\thandleChangeImage(e);\r\n\t\t\t\t\t\tsetUploadFileData(e.target.files);\r\n\t\t\t\t\t\tsetUploadFileDataError('');\r\n\t\t\t\t\t}}\r\n\t\t\t\t\terrorMessage={uploadFileDataError}\r\n\t\t\t\t/>\r\n\t\t\t\t<ModalButton label={selectUpdateModel._id ? 'Update Salon' : 'Add New'} icon={selectUpdateModel._id ? 'edit' : 'plus'} onClick={handleSubmit} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateEditSalon;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\DeleteSalon.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\SalonScreen\\SalonData.js",["2579"],"import React from 'react';\r\nimport { inputPhoneMasking, unMasking } from '../../utils/validators';\r\n\r\nconst SalonData = ({\r\n\tshowFilter,\r\n\tdata,\r\n\tsetModalDeleteState,\r\n\tsetShowAddModal,\r\n\tsetSelectUpdateModel,\r\n\tsetModalChangePasswordState,\r\n\tonChangeHandler,\r\n\thandleEditModalSalon,\r\n\tsetModalSettingState,\r\n\tsetAppMenu,\r\n\tsetModalCancelSubscription\r\n}) => {\r\n\r\n\treturn (\r\n\t\t<div className='tableContainer' style={{ height: showFilter ? '63vh' : '65vh' }}>\r\n\t\t\t<table className='table'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t<th>Active</th>\r\n\t\t\t\t\t\t<th style={{ width: '1rem' }}>Cancel Subscription</th>\r\n\t\t\t\t\t\t<th />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{data &&\r\n\t\t\t\t\t\tdata.map((d, index) => (\r\n\t\t\t\t\t\t\t<tr key={d._id}>\r\n\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t<td style={{ textAlign: 'left' }}>{d.name}</td>\r\n\t\t\t\t\t\t\t\t<td>{d.email}</td>\r\n\t\t\t\t\t\t\t\t<td>{inputPhoneMasking(d.phone)}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tid={d._id}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={d.active}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler(d)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='active'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span className='slider round' />\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style={{ display: 'flex', justifyContent: 'center', cursor: 'pointer' }} >\r\n\t\t\t\t\t\t\t\t\t<div onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetModalCancelSubscription(true);\r\n\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{d.cancel_at_period_end ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='table__status'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>•</span> Active\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='table__status_deactive'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>•</span> Deactive\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div className='table__iconBox'>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowAddModal(true)\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t\thandleEditModalSalon(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-edit`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Edit User Details</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--setting' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (d.appMenu) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAppMenu({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isVideo\": d.appMenu && d.appMenu.isVideo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isCheckin\": d.appMenu && d.appMenu.isCheckin,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isPOS\": d.appMenu && d.appMenu.isPOS,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAppMenu({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isVideo\": false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isCheckin\": false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isPOS\": false\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalSettingState(true);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-setting'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-setting`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>App Setting</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--changepwd' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalChangePasswordState(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-green'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-key`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Reset Password</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className='table__button table__button--delete' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalDeleteState(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Delete User</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t{/* <button className='table__button table__button--delete' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetModalCancelSubscription(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectUpdateModel(d);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className='table__button--icon-red'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlinkHref={`/assets/sprite.svg#icon-delete`} />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Cancel Subscription</span>\r\n\t\t\t\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div >\r\n\t);\r\n};\r\n\r\nexport default SalonData;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\ProductsCategoriesScreen\\ProductsCategories.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\DeleteVideo.js",["2580"],"import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport InputsSectionColumn from '../../components/Modal/InputsSectionColumn';\r\nimport ModalButton from '../../components/Modal/ModalButton';\r\nimport ModalForm from '../../components/Modal/ModalForm';\r\nimport ModalHeading from '../../components/Modal/ModalHeading';\r\n\r\nconst DeleteVideo = ({ data }) => {\r\n\tconst { modalDeleteState, onDeleteModalClose, onDeleteHandler } = data;\r\n\r\n\treturn (\r\n\t\t<Modal show={modalDeleteState}>\r\n\t\t\t<ModalHeading heading='Delete Video' onClose={onDeleteModalClose} />\r\n\t\t\t<ModalForm>\r\n\t\t\t\t<p className='modal__text'>Are you sure you want to delete this video?</p>\r\n\t\t\t\t<ModalButton varient='danger' label='Delete' icon='delete' onClick={onDeleteHandler} />\r\n\t\t\t</ModalForm>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteVideo;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\screens\\VideosScreen\\CreateVideo.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\AppointmentSectionNew\\AppointmentSectionNew.js",["2581","2582","2583","2584","2585"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ActivitySkeleton from '../Skeletons/Activityskeleton';\r\nimport ActivitySkeletonSmall from '../Skeletons/ActivitySkeletonSmall';\r\nimport { getAdminSalonSubscriptionReportAction } from '../../redux/actions/reportActions';\r\nimport moment from \"moment\"\r\nimport { inputPhoneMasking } from '../../utils/validators';\r\nimport Styles from './AppointmentSectionNew.module.css'\r\nimport Content from '../Content/Content';\r\n\r\n\r\nconst AppointmentSectionNew = ({\r\n    getActivity,\r\n    activeToggle,\r\n    getRecentAppointment,\r\n    getUpcomingAppointment,\r\n    handleAppointmentModal,\r\n    handleSubscriptionModal }) => {\r\n    const dispatch = useDispatch()\r\n    const userData = useSelector((state) => state.getUserInfo);\r\n    const getSalonSubscriptionReport = useSelector((state) => state.getSalonSubscriptionReport);\r\n\r\n    // getSalonSubscriptionReport\r\n    useEffect(() => {\r\n        dispatch(getAdminSalonSubscriptionReportAction())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {userData && userData?.userInfo && userData?.userInfo?.data?.role === \"admin\" ?\r\n                <>\r\n                    <div className='current_appointment'>\r\n                        <h2 className='appointment_upcoming'>Salon Subscription</h2>\r\n                        {\r\n                            getSalonSubscriptionReport &&\r\n                            getSalonSubscriptionReport.report &&\r\n                            getSalonSubscriptionReport.report.data &&\r\n                            getSalonSubscriptionReport.report.data.map(item => (\r\n\r\n                                <div className='appointment_card' onClick={() => handleSubscriptionModal(item)}>\r\n                                    <div className='stylist_box'>\r\n                                        <img src={item && item.photo}\r\n                                            className='stylist_img'></img>\r\n                                        <div className='stylist_text'>\r\n                                            <span>{item && item.name}</span>\r\n                                            <div className='stylist-section' style={{ gap: '0.5rem' }}>\r\n                                                <span className={item && item.subscription && item.subscription[0] && item.subscription[0].active ? \"colorGreen\" : \"colorRed\"}>•</span> <p style={{ fontWeight: 499 }}>{item && item.subscription && item.subscription[0] && item.subscription[0].active ? \"Active\" : \"Expired\"}</p>\r\n                                            </div>\r\n\r\n                                            <p style={{ fontWeight: 499 }}>{item && item.email}</p>\r\n                                            <p style={{ fontWeight: 499 }}>{inputPhoneMasking(item && item.phone)}</p>\r\n                                            <p>expires {moment(item && item.subscription && item.subscription[0] && item.subscription[0].packageExpiry).startOf('day').fromNow()}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </>\r\n                :\r\n                <>\r\n                    {getRecentAppointment.loading ? <ActivitySkeleton /> :\r\n                        <>\r\n                            <div className='current_appointment'>\r\n                                <h2 className='appointment_upcoming'>Current Appointments</h2>\r\n\r\n                                {getRecentAppointment && getRecentAppointment.report && getRecentAppointment.report.data && getRecentAppointment.report.data.length > 0\r\n                                    ? getRecentAppointment.report.data.map((item, id) => {\r\n                                        return (\r\n                                            <div className='appointment_card' key={id} style={{ cursor: 'pointer' }} onClick={() => handleAppointmentModal(item)}>\r\n                                                <div className='appointment_time'>\r\n                                                    <div className='time_circle'></div>\r\n                                                    <p style={{ fontSize: '1.2rem' }}> {item.timeAsAString} | {item && item.subServiceData && item.subServiceData.title}</p>\r\n                                                </div>\r\n                                                <div className='appointment_name'>\r\n                                                    <div className='stylist-section'>\r\n                                                        <svg className='navigation__icon1'>\r\n                                                            <use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n                                                        </svg>\r\n                                                        <h1>{item.userName}</h1>\r\n                                                    </div>\r\n                                                    <div className='stylist-section'>\r\n                                                        <svg className='navigation__icon1'>\r\n                                                            <use xlinkHref={`/assets/sprite.svg#icon-stylist`} />\r\n                                                        </svg>\r\n                                                        <p style={{ fontSize: '1.5rem' }}>{item.stylistData && item.stylistData.name} </p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }) :\r\n                                    <div style={{ background: '#040404' }} className='appointment_card'>\r\n                                        <p style={{ fontSize: '1.4rem' }}>No Appointment Available</p>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div className='current_appointment'>\r\n                                <h2 className='appointment_upcoming'>Upcoming Appointments</h2>\r\n\r\n                                {getUpcomingAppointment && getUpcomingAppointment.report && getUpcomingAppointment.report.data && getUpcomingAppointment.report.data.length > 0\r\n                                    ? getUpcomingAppointment.report.data.map((item, id) => {\r\n                                        return (\r\n                                            <div className='appointment_card' key={id} style={{ cursor: 'pointer' }} onClick={() => handleAppointmentModal(item)}>\r\n                                                <div className='appointment_time'>\r\n                                                    <div className='time_circle'></div>\r\n                                                    <p style={{ fontSize: '1.2rem' }}> {item.timeAsAString} | {item && item.subServiceData && item.subServiceData.title}</p>\r\n                                                </div>\r\n                                                <div className='appointment_name'>\r\n                                                    <div className='stylist-section'>\r\n                                                        <svg className='navigation__icon1'>\r\n                                                            <use xlinkHref={`/assets/sprite.svg#icon-user`} />\r\n                                                        </svg>\r\n                                                        <h1>{item.userName}</h1>\r\n                                                    </div>\r\n                                                    <div className='stylist-section'>\r\n                                                        <svg className='navigation__icon1'>\r\n                                                            <use xlinkHref={`/assets/sprite.svg#icon-stylist`} />\r\n                                                        </svg>\r\n                                                        <p style={{ fontSize: '1.5rem' }}>{item.stylistData && item.stylistData.name} </p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }) :\r\n                                    <div style={{ background: '#040404' }} className='appointment_card'>\r\n                                        <p style={{ fontSize: '1.4rem' }}>No Appointment Available</p>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </>}\r\n                </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AppointmentSectionNew\r\n\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\HeaderNew\\HeaderNew.js",["2586","2587","2588"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\SideBarNew.js",["2589","2590","2591"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\UploadFile.js",["2592","2593","2594"],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\Modal\\InputSections.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\formInputs\\RadioButtons\\RadioButtons.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\DragDropImg\\index.js",["2595","2596","2597","2598"],"import React, { useState } from 'react'\r\nimport './dragDrop.css'\r\n\r\nconst DragDrop = () => {\r\n    const [selectedFiles, setSelectedFiles] = useState();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    }\r\n\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (validateFile(files[i])) {\r\n                // add to an array so we can display the name of file\r\n\r\n            } else {\r\n                // add a new property called invalid\r\n                // files\\[i\\]['invalid'] = true;\r\n                // add to the same array so we can display the name of the file\r\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n                // set error message\r\n                setErrorMessage('File type not permitted');\r\n            }\r\n        }\r\n    }\r\n    const validateFile = (file) => {\r\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon'];\r\n        if (validTypes.indexOf(file.type) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        if (files.length) {\r\n            handleFiles(files);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <p className=\"drag-title\">React Drag and Drop Image Upload</p> */}\r\n            <div className=\"drag-container\">\r\n                <div className=\"drop-container\" onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                        <div className=\"file-display-container\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragDrop","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\website\\BookAppointment\\Services\\AppointmentTime.js",["2599","2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614"],"import React from \"react\";\r\nimport moment from \"moment\"\r\n\r\nconst AppointmentTime = ({\r\n  time,\r\n  setModalState,\r\n  data,\r\n  serviceName,\r\n  subServiceName,\r\n  charges,\r\n  setInfo,\r\n  availableTime,\r\n  stylist,\r\n  serviceId,\r\n  salon,\r\n  subServiceId,\r\n  dateAsAString,\r\n  requiredTime,\r\n  availableList\r\n}) => {\r\n  const handleClick = (info) => {\r\n    setModalState(true); \r\n    setInfo({\r\n      serviceName: serviceName,\r\n      subServiceName: subServiceName,\r\n      charges: charges,\r\n\t  salon:salon,\r\n\t  serviceId: serviceId,\r\n\t  subServiceId:subServiceId,\r\n\t  dateAsAString:dateAsAString,\r\n\t  requiredTime:requiredTime,\r\n    stylist:stylist,\r\n    availableTime:availableTime,\r\n    availableList:availableList,\r\n      ...info,\r\n    });\r\n  };\r\n  // :\"time\"\r\n\r\n  const dateHour = (date,hour)=>{\r\n\t\tlet datetimeA = moment(date + \" \" + hour);\r\n\t\treturn datetimeA.toISOString()\r\n\t}\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <>\r\n      {data.timeData.map((d) => {\r\n        return (\r\n          // moment(dateHour(dateAsAString,d.timeAsAString)) > moment().add(15,'minutes') ?\r\n          <div className=\"time-btn\">\r\n             <span>Current Waiting List : {availableList && availableList.length}</span>\r\n          <button onClick={() => handleClick(d)} disabled={d.slotStatus=== 'confirmed'&&true|| d.slotStatus=== 'canceled'&&true || moment(dateHour(dateAsAString,d.timeAsAString)) < moment().add(15,'minutes')} className={d.slotStatus=== 'booked'&&\"time-booked\" || d.slotStatus=== 'confirmed'&&\"time-confirmed\" || d.slotStatus=== 'waiting'&&\"time-waiting\"|| d.slotStatus=== 'requested'&&\"time-waiting\" ||d.slotStatus=== 'available'&&\"time\" ||d.slotStatus=== 'canceled'&&\"time-canceled\"   }>\r\n            {d.timeAsAString}\r\n          </button>\r\n         \r\n          </div>\r\n          \r\n        );\r\n      })}\r\n\r\n      {/* <p>{data.salon}</p> */}\r\n    </>\r\n    // <button onClick={() => setModalState(true)} className=\"time\">\r\n    // \t{time}\r\n    // </button>\r\n  );\r\n};\r\n\r\nexport default AppointmentTime;\r\n","E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\SalonSidebar.js",[],"E:\\D-Disk folders\\office projects\\barberly\\frontend\\src\\components\\SideBarNew\\AdminSidebar.js",[],{"ruleId":"2615","replacedBy":"2616"},{"ruleId":"2617","replacedBy":"2618"},{"ruleId":"2619","severity":1,"message":"2620","line":168,"column":39,"nodeType":"2621","messageId":"2622","endLine":168,"endColumn":61},{"ruleId":"2619","severity":1,"message":"2623","line":28,"column":3,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2624","line":32,"column":3,"nodeType":"2621","messageId":"2622","endLine":32,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2625","line":47,"column":68,"nodeType":"2621","messageId":"2622","endLine":47,"endColumn":92},{"ruleId":"2619","severity":1,"message":"2626","line":47,"column":94,"nodeType":"2621","messageId":"2622","endLine":47,"endColumn":119},{"ruleId":"2619","severity":1,"message":"2627","line":51,"column":7,"nodeType":"2621","messageId":"2622","endLine":51,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2628","line":15,"column":2,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2629","line":16,"column":2,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2630","line":17,"column":2,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2631","line":18,"column":2,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2632","line":27,"column":2,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2633","line":4,"column":8,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2634","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2635","line":12,"column":11,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2636","line":53,"column":2,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2637","line":54,"column":2,"nodeType":"2621","messageId":"2622","endLine":54,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2638","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2639","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2640","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2641","line":13,"column":8,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2642","line":15,"column":8,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":31},{"ruleId":"2619","severity":1,"message":"2643","line":19,"column":8,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2644","line":20,"column":8,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2645","line":21,"column":8,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2646","line":23,"column":8,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2647","line":24,"column":8,"nodeType":"2621","messageId":"2622","endLine":24,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2648","line":26,"column":8,"nodeType":"2621","messageId":"2622","endLine":26,"endColumn":31},{"ruleId":"2619","severity":1,"message":"2649","line":35,"column":8,"nodeType":"2621","messageId":"2622","endLine":35,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2650","line":40,"column":8,"nodeType":"2621","messageId":"2622","endLine":40,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2651","line":42,"column":8,"nodeType":"2621","messageId":"2622","endLine":42,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2652","line":43,"column":8,"nodeType":"2621","messageId":"2622","endLine":43,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2653","line":46,"column":8,"nodeType":"2621","messageId":"2622","endLine":46,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2654","line":50,"column":8,"nodeType":"2621","messageId":"2622","endLine":50,"endColumn":30},{"ruleId":"2619","severity":1,"message":"2655","line":13,"column":10,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":33},{"ruleId":"2619","severity":1,"message":"2656","line":14,"column":10,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2657","line":25,"column":11,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":23},{"ruleId":"2658","severity":1,"message":"2659","line":43,"column":8,"nodeType":"2660","endLine":43,"endColumn":10,"suggestions":"2661"},{"ruleId":"2658","severity":1,"message":"2662","line":58,"column":8,"nodeType":"2660","endLine":58,"endColumn":18,"suggestions":"2663"},{"ruleId":"2658","severity":1,"message":"2664","line":78,"column":8,"nodeType":"2660","endLine":78,"endColumn":23,"suggestions":"2665"},{"ruleId":"2666","severity":1,"message":"2667","line":290,"column":53,"nodeType":"2668","endLine":291,"endColumn":330},{"ruleId":"2619","severity":1,"message":"2669","line":8,"column":10,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2670","line":8,"column":31,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":53},{"ruleId":"2671","severity":1,"message":"2672","line":110,"column":40,"nodeType":"2673","messageId":"2674","endLine":110,"endColumn":42},{"ruleId":"2671","severity":1,"message":"2672","line":110,"column":63,"nodeType":"2673","messageId":"2674","endLine":110,"endColumn":65},{"ruleId":"2671","severity":1,"message":"2672","line":114,"column":50,"nodeType":"2673","messageId":"2674","endLine":114,"endColumn":52},{"ruleId":"2671","severity":1,"message":"2672","line":114,"column":76,"nodeType":"2673","messageId":"2674","endLine":114,"endColumn":78},{"ruleId":"2671","severity":1,"message":"2672","line":116,"column":46,"nodeType":"2673","messageId":"2674","endLine":116,"endColumn":48},{"ruleId":"2671","severity":1,"message":"2672","line":116,"column":68,"nodeType":"2673","messageId":"2674","endLine":116,"endColumn":70},{"ruleId":"2671","severity":1,"message":"2672","line":120,"column":51,"nodeType":"2673","messageId":"2674","endLine":120,"endColumn":53},{"ruleId":"2671","severity":1,"message":"2672","line":120,"column":78,"nodeType":"2673","messageId":"2674","endLine":120,"endColumn":80},{"ruleId":"2671","severity":1,"message":"2672","line":122,"column":49,"nodeType":"2673","messageId":"2674","endLine":122,"endColumn":51},{"ruleId":"2671","severity":1,"message":"2672","line":122,"column":74,"nodeType":"2673","messageId":"2674","endLine":122,"endColumn":76},{"ruleId":"2675","severity":1,"message":"2676","line":31,"column":29,"nodeType":"2668","endLine":31,"endColumn":115},{"ruleId":"2675","severity":1,"message":"2676","line":52,"column":29,"nodeType":"2668","endLine":52,"endColumn":114},{"ruleId":"2675","severity":1,"message":"2676","line":73,"column":29,"nodeType":"2668","endLine":73,"endColumn":115},{"ruleId":"2615","replacedBy":"2677"},{"ruleId":"2617","replacedBy":"2678"},{"ruleId":"2619","severity":1,"message":"2679","line":34,"column":2,"nodeType":"2621","messageId":"2622","endLine":34,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2680","line":39,"column":2,"nodeType":"2621","messageId":"2622","endLine":39,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2681","line":661,"column":24,"nodeType":"2621","messageId":"2622","endLine":661,"endColumn":32},{"ruleId":"2619","severity":1,"message":"2681","line":688,"column":24,"nodeType":"2621","messageId":"2622","endLine":688,"endColumn":32},{"ruleId":"2619","severity":1,"message":"2682","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":23},{"ruleId":"2658","severity":1,"message":"2683","line":118,"column":8,"nodeType":"2660","endLine":118,"endColumn":38,"suggestions":"2684"},{"ruleId":"2658","severity":1,"message":"2685","line":127,"column":8,"nodeType":"2660","endLine":129,"endColumn":27,"suggestions":"2686"},{"ruleId":"2619","severity":1,"message":"2682","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":23},{"ruleId":"2658","severity":1,"message":"2683","line":118,"column":8,"nodeType":"2660","endLine":118,"endColumn":38,"suggestions":"2687"},{"ruleId":"2658","severity":1,"message":"2685","line":127,"column":8,"nodeType":"2660","endLine":129,"endColumn":27,"suggestions":"2688"},{"ruleId":"2619","severity":1,"message":"2689","line":49,"column":24,"nodeType":"2621","messageId":"2622","endLine":49,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":74,"column":3,"nodeType":"2660","endLine":74,"endColumn":26,"suggestions":"2691"},{"ruleId":"2658","severity":1,"message":"2692","line":91,"column":3,"nodeType":"2660","endLine":91,"endColumn":26,"suggestions":"2693"},{"ruleId":"2658","severity":1,"message":"2692","line":102,"column":3,"nodeType":"2660","endLine":102,"endColumn":32,"suggestions":"2694"},{"ruleId":"2658","severity":1,"message":"2692","line":113,"column":3,"nodeType":"2660","endLine":113,"endColumn":26,"suggestions":"2695"},{"ruleId":"2619","severity":1,"message":"2696","line":20,"column":8,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":30},{"ruleId":"2619","severity":1,"message":"2689","line":41,"column":24,"nodeType":"2621","messageId":"2622","endLine":41,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2692","line":53,"column":3,"nodeType":"2660","endLine":53,"endColumn":13,"suggestions":"2697"},{"ruleId":"2658","severity":1,"message":"2692","line":65,"column":3,"nodeType":"2660","endLine":65,"endColumn":36,"suggestions":"2698"},{"ruleId":"2658","severity":1,"message":"2692","line":76,"column":3,"nodeType":"2660","endLine":76,"endColumn":36,"suggestions":"2699"},{"ruleId":"2658","severity":1,"message":"2692","line":87,"column":3,"nodeType":"2660","endLine":87,"endColumn":36,"suggestions":"2700"},{"ruleId":"2619","severity":1,"message":"2701","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2702","line":13,"column":55,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":73},{"ruleId":"2619","severity":1,"message":"2681","line":31,"column":8,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":16},{"ruleId":"2658","severity":1,"message":"2690","line":87,"column":3,"nodeType":"2660","endLine":87,"endColumn":26,"suggestions":"2703"},{"ruleId":"2658","severity":1,"message":"2692","line":117,"column":3,"nodeType":"2660","endLine":117,"endColumn":26,"suggestions":"2704"},{"ruleId":"2658","severity":1,"message":"2692","line":132,"column":3,"nodeType":"2660","endLine":132,"endColumn":26,"suggestions":"2705"},{"ruleId":"2658","severity":1,"message":"2692","line":149,"column":3,"nodeType":"2660","endLine":149,"endColumn":32,"suggestions":"2706"},{"ruleId":"2658","severity":1,"message":"2692","line":178,"column":3,"nodeType":"2660","endLine":178,"endColumn":35,"suggestions":"2707"},{"ruleId":"2658","severity":1,"message":"2692","line":195,"column":3,"nodeType":"2660","endLine":195,"endColumn":33,"suggestions":"2708"},{"ruleId":"2658","severity":1,"message":"2709","line":65,"column":3,"nodeType":"2660","endLine":65,"endColumn":17,"suggestions":"2710"},{"ruleId":"2619","severity":1,"message":"2711","line":9,"column":39,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":45},{"ruleId":"2619","severity":1,"message":"2712","line":18,"column":8,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":16},{"ruleId":"2658","severity":1,"message":"2713","line":34,"column":3,"nodeType":"2660","endLine":34,"endColumn":30,"suggestions":"2714"},{"ruleId":"2715","severity":1,"message":"2716","line":104,"column":10,"nodeType":"2668","messageId":"2717","endLine":104,"endColumn":62,"fix":"2718"},{"ruleId":"2619","severity":1,"message":"2702","line":31,"column":55,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":73},{"ruleId":"2619","severity":1,"message":"2719","line":56,"column":9,"nodeType":"2621","messageId":"2622","endLine":56,"endColumn":26},{"ruleId":"2658","severity":1,"message":"2720","line":115,"column":3,"nodeType":"2660","endLine":115,"endColumn":13,"suggestions":"2721"},{"ruleId":"2658","severity":1,"message":"2722","line":224,"column":3,"nodeType":"2660","endLine":224,"endColumn":30,"suggestions":"2723"},{"ruleId":"2658","severity":1,"message":"2722","line":238,"column":3,"nodeType":"2660","endLine":238,"endColumn":27,"suggestions":"2724"},{"ruleId":"2619","severity":1,"message":"2725","line":364,"column":8,"nodeType":"2621","messageId":"2622","endLine":364,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2726","line":368,"column":8,"nodeType":"2621","messageId":"2622","endLine":368,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2727","line":6,"column":8,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2689","line":57,"column":24,"nodeType":"2621","messageId":"2622","endLine":57,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2728","line":93,"column":3,"nodeType":"2660","endLine":93,"endColumn":31,"suggestions":"2729"},{"ruleId":"2658","severity":1,"message":"2692","line":102,"column":3,"nodeType":"2660","endLine":102,"endColumn":20,"suggestions":"2730"},{"ruleId":"2658","severity":1,"message":"2731","line":119,"column":3,"nodeType":"2660","endLine":119,"endColumn":31,"suggestions":"2732"},{"ruleId":"2658","severity":1,"message":"2731","line":135,"column":3,"nodeType":"2660","endLine":135,"endColumn":37,"suggestions":"2733"},{"ruleId":"2658","severity":1,"message":"2731","line":151,"column":3,"nodeType":"2660","endLine":151,"endColumn":31,"suggestions":"2734"},{"ruleId":"2619","severity":1,"message":"2735","line":12,"column":2,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2689","line":53,"column":24,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":103,"column":3,"nodeType":"2660","endLine":103,"endColumn":26,"suggestions":"2736"},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2738","line":7,"column":10,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2739","line":10,"column":8,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2740","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":16},{"ruleId":"2666","severity":1,"message":"2667","line":38,"column":9,"nodeType":"2668","endLine":38,"endColumn":136},{"ruleId":"2619","severity":1,"message":"2689","line":58,"column":24,"nodeType":"2621","messageId":"2622","endLine":58,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":81,"column":3,"nodeType":"2660","endLine":81,"endColumn":26,"suggestions":"2741"},{"ruleId":"2658","severity":1,"message":"2692","line":96,"column":3,"nodeType":"2660","endLine":96,"endColumn":28,"suggestions":"2742"},{"ruleId":"2658","severity":1,"message":"2692","line":107,"column":3,"nodeType":"2660","endLine":107,"endColumn":34,"suggestions":"2743"},{"ruleId":"2658","severity":1,"message":"2692","line":118,"column":3,"nodeType":"2660","endLine":118,"endColumn":28,"suggestions":"2744"},{"ruleId":"2658","severity":1,"message":"2692","line":133,"column":3,"nodeType":"2660","endLine":133,"endColumn":30,"suggestions":"2745"},{"ruleId":"2619","severity":1,"message":"2746","line":20,"column":8,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2689","line":41,"column":24,"nodeType":"2621","messageId":"2622","endLine":41,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":64,"column":3,"nodeType":"2660","endLine":64,"endColumn":26,"suggestions":"2747"},{"ruleId":"2658","severity":1,"message":"2692","line":76,"column":3,"nodeType":"2660","endLine":76,"endColumn":34,"suggestions":"2748"},{"ruleId":"2658","severity":1,"message":"2692","line":87,"column":3,"nodeType":"2660","endLine":87,"endColumn":34,"suggestions":"2749"},{"ruleId":"2658","severity":1,"message":"2692","line":98,"column":3,"nodeType":"2660","endLine":98,"endColumn":34,"suggestions":"2750"},{"ruleId":"2619","severity":1,"message":"2751","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2752","line":21,"column":8,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2753","line":48,"column":10,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2689","line":48,"column":25,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":41},{"ruleId":"2658","severity":1,"message":"2692","line":67,"column":3,"nodeType":"2660","endLine":67,"endColumn":37,"suggestions":"2754"},{"ruleId":"2658","severity":1,"message":"2692","line":100,"column":3,"nodeType":"2660","endLine":100,"endColumn":66,"suggestions":"2755"},{"ruleId":"2619","severity":1,"message":"2756","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2681","line":16,"column":8,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":16},{"ruleId":"2619","severity":1,"message":"2757","line":23,"column":9,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":15},{"ruleId":"2658","severity":1,"message":"2690","line":59,"column":3,"nodeType":"2660","endLine":59,"endColumn":26,"suggestions":"2758"},{"ruleId":"2619","severity":1,"message":"2759","line":8,"column":35,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":58},{"ruleId":"2619","severity":1,"message":"2655","line":8,"column":89,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":112},{"ruleId":"2619","severity":1,"message":"2760","line":8,"column":143,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":164},{"ruleId":"2619","severity":1,"message":"2761","line":40,"column":9,"nodeType":"2621","messageId":"2622","endLine":40,"endColumn":16},{"ruleId":"2619","severity":1,"message":"2762","line":82,"column":10,"nodeType":"2621","messageId":"2622","endLine":82,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2763","line":82,"column":23,"nodeType":"2621","messageId":"2622","endLine":82,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2764","line":83,"column":10,"nodeType":"2621","messageId":"2622","endLine":83,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2765","line":83,"column":28,"nodeType":"2621","messageId":"2622","endLine":83,"endColumn":47},{"ruleId":"2658","severity":1,"message":"2659","line":139,"column":4,"nodeType":"2660","endLine":139,"endColumn":6,"suggestions":"2766"},{"ruleId":"2619","severity":1,"message":"2689","line":25,"column":27,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":43},{"ruleId":"2767","severity":1,"message":"2768","line":69,"column":53,"nodeType":"2621","messageId":"2769","endLine":69,"endColumn":62},{"ruleId":"2767","severity":1,"message":"2768","line":81,"column":56,"nodeType":"2621","messageId":"2769","endLine":81,"endColumn":65},{"ruleId":"2767","severity":1,"message":"2768","line":92,"column":58,"nodeType":"2621","messageId":"2769","endLine":92,"endColumn":67},{"ruleId":"2671","severity":1,"message":"2672","line":107,"column":43,"nodeType":"2673","messageId":"2674","endLine":107,"endColumn":45},{"ruleId":"2671","severity":1,"message":"2672","line":107,"column":65,"nodeType":"2673","messageId":"2674","endLine":107,"endColumn":67},{"ruleId":"2671","severity":1,"message":"2672","line":120,"column":43,"nodeType":"2673","messageId":"2674","endLine":120,"endColumn":45},{"ruleId":"2671","severity":1,"message":"2672","line":120,"column":65,"nodeType":"2673","messageId":"2674","endLine":120,"endColumn":67},{"ruleId":"2671","severity":1,"message":"2672","line":126,"column":54,"nodeType":"2673","messageId":"2674","endLine":126,"endColumn":56},{"ruleId":"2671","severity":1,"message":"2672","line":126,"column":80,"nodeType":"2673","messageId":"2674","endLine":126,"endColumn":82},{"ruleId":"2619","severity":1,"message":"2770","line":141,"column":11,"nodeType":"2621","messageId":"2622","endLine":141,"endColumn":26},{"ruleId":"2658","severity":1,"message":"2771","line":157,"column":11,"nodeType":"2772","endLine":177,"endColumn":6,"suggestions":"2773"},{"ruleId":"2658","severity":1,"message":"2774","line":157,"column":11,"nodeType":"2772","endLine":177,"endColumn":6,"suggestions":"2775"},{"ruleId":"2658","severity":1,"message":"2776","line":157,"column":11,"nodeType":"2772","endLine":177,"endColumn":6,"suggestions":"2777"},{"ruleId":"2658","severity":1,"message":"2709","line":48,"column":8,"nodeType":"2660","endLine":48,"endColumn":42,"suggestions":"2778"},{"ruleId":"2779","severity":1,"message":"2780","line":85,"column":29,"nodeType":"2781","messageId":"2782","endLine":85,"endColumn":31},{"ruleId":"2779","severity":1,"message":"2780","line":89,"column":33,"nodeType":"2781","messageId":"2782","endLine":89,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2783","line":27,"column":8,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2784","line":48,"column":9,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2785","line":48,"column":19,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":30},{"ruleId":"2619","severity":1,"message":"2786","line":62,"column":9,"nodeType":"2621","messageId":"2622","endLine":62,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2787","line":62,"column":23,"nodeType":"2621","messageId":"2622","endLine":62,"endColumn":38},{"ruleId":"2619","severity":1,"message":"2753","line":67,"column":9,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2689","line":67,"column":24,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2692","line":101,"column":3,"nodeType":"2660","endLine":101,"endColumn":35,"suggestions":"2788"},{"ruleId":"2658","severity":1,"message":"2692","line":134,"column":3,"nodeType":"2660","endLine":134,"endColumn":28,"suggestions":"2789"},{"ruleId":"2658","severity":1,"message":"2692","line":164,"column":3,"nodeType":"2660","endLine":164,"endColumn":28,"suggestions":"2790"},{"ruleId":"2658","severity":1,"message":"2692","line":181,"column":3,"nodeType":"2660","endLine":181,"endColumn":34,"suggestions":"2791"},{"ruleId":"2779","severity":1,"message":"2780","line":254,"column":28,"nodeType":"2781","messageId":"2782","endLine":254,"endColumn":30},{"ruleId":"2779","severity":1,"message":"2780","line":254,"column":50,"nodeType":"2781","messageId":"2782","endLine":254,"endColumn":52},{"ruleId":"2619","severity":1,"message":"2792","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2793","line":3,"column":10,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":31},{"ruleId":"2619","severity":1,"message":"2794","line":10,"column":8,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2795","line":9,"column":3,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2796","line":12,"column":3,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":32},{"ruleId":"2619","severity":1,"message":"2797","line":13,"column":3,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2798","line":21,"column":3,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":34},{"ruleId":"2619","severity":1,"message":"2799","line":28,"column":111,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":134},{"ruleId":"2619","severity":1,"message":"2800","line":36,"column":10,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2669","line":67,"column":10,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2801","line":78,"column":10,"nodeType":"2621","messageId":"2622","endLine":78,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2753","line":112,"column":10,"nodeType":"2621","messageId":"2622","endLine":112,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2689","line":112,"column":25,"nodeType":"2621","messageId":"2622","endLine":112,"endColumn":41},{"ruleId":"2619","severity":1,"message":"2802","line":113,"column":10,"nodeType":"2621","messageId":"2622","endLine":113,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2803","line":113,"column":22,"nodeType":"2621","messageId":"2622","endLine":113,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2804","line":114,"column":9,"nodeType":"2621","messageId":"2622","endLine":114,"endColumn":18},{"ruleId":"2658","severity":1,"message":"2709","line":146,"column":6,"nodeType":"2660","endLine":146,"endColumn":29,"suggestions":"2805"},{"ruleId":"2658","severity":1,"message":"2709","line":164,"column":6,"nodeType":"2660","endLine":164,"endColumn":22,"suggestions":"2806"},{"ruleId":"2658","severity":1,"message":"2709","line":182,"column":6,"nodeType":"2660","endLine":182,"endColumn":25,"suggestions":"2807"},{"ruleId":"2658","severity":1,"message":"2808","line":209,"column":6,"nodeType":"2660","endLine":209,"endColumn":25,"suggestions":"2809"},{"ruleId":"2658","severity":1,"message":"2709","line":227,"column":6,"nodeType":"2660","endLine":227,"endColumn":18,"suggestions":"2810"},{"ruleId":"2658","severity":1,"message":"2709","line":253,"column":6,"nodeType":"2660","endLine":253,"endColumn":26,"suggestions":"2811"},{"ruleId":"2658","severity":1,"message":"2709","line":273,"column":6,"nodeType":"2660","endLine":273,"endColumn":28,"suggestions":"2812"},{"ruleId":"2658","severity":1,"message":"2709","line":291,"column":6,"nodeType":"2660","endLine":291,"endColumn":27,"suggestions":"2813"},{"ruleId":"2658","severity":1,"message":"2709","line":305,"column":6,"nodeType":"2660","endLine":305,"endColumn":29,"suggestions":"2814"},{"ruleId":"2658","severity":1,"message":"2685","line":333,"column":6,"nodeType":"2660","endLine":333,"endColumn":28,"suggestions":"2815"},{"ruleId":"2658","severity":1,"message":"2816","line":341,"column":6,"nodeType":"2660","endLine":341,"endColumn":41,"suggestions":"2817"},{"ruleId":"2658","severity":1,"message":"2818","line":356,"column":6,"nodeType":"2660","endLine":356,"endColumn":24,"suggestions":"2819"},{"ruleId":"2820","severity":1,"message":"2821","line":522,"column":9,"nodeType":"2822","messageId":"2782","endLine":522,"endColumn":16},{"ruleId":"2820","severity":1,"message":"2823","line":682,"column":13,"nodeType":"2822","messageId":"2782","endLine":682,"endColumn":34},{"ruleId":"2820","severity":1,"message":"2824","line":714,"column":11,"nodeType":"2822","messageId":"2782","endLine":714,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2825","line":15,"column":2,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":32},{"ruleId":"2619","severity":1,"message":"2783","line":21,"column":8,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2826","line":44,"column":24,"nodeType":"2621","messageId":"2622","endLine":44,"endColumn":40},{"ruleId":"2619","severity":1,"message":"2753","line":53,"column":9,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2689","line":53,"column":24,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2692","line":72,"column":3,"nodeType":"2660","endLine":72,"endColumn":35,"suggestions":"2827"},{"ruleId":"2658","severity":1,"message":"2692","line":88,"column":3,"nodeType":"2660","endLine":88,"endColumn":28,"suggestions":"2828"},{"ruleId":"2658","severity":1,"message":"2692","line":103,"column":3,"nodeType":"2660","endLine":103,"endColumn":28,"suggestions":"2829"},{"ruleId":"2658","severity":1,"message":"2692","line":119,"column":3,"nodeType":"2660","endLine":119,"endColumn":34,"suggestions":"2830"},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2831","line":15,"column":8,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2832","line":17,"column":10,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2833","line":25,"column":9,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2834","line":25,"column":24,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":40},{"ruleId":"2666","severity":1,"message":"2667","line":208,"column":13,"nodeType":"2668","endLine":211,"endColumn":15},{"ruleId":"2666","severity":1,"message":"2667","line":219,"column":13,"nodeType":"2668","endLine":222,"endColumn":15},{"ruleId":"2666","severity":1,"message":"2667","line":229,"column":13,"nodeType":"2668","endLine":232,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2655","line":12,"column":10,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":33},{"ruleId":"2619","severity":1,"message":"2656","line":14,"column":10,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":35},{"ruleId":"2658","severity":1,"message":"2659","line":29,"column":4,"nodeType":"2660","endLine":29,"endColumn":6,"suggestions":"2835"},{"ruleId":"2658","severity":1,"message":"2662","line":53,"column":5,"nodeType":"2660","endLine":53,"endColumn":15,"suggestions":"2836"},{"ruleId":"2658","severity":1,"message":"2837","line":66,"column":5,"nodeType":"2660","endLine":66,"endColumn":36,"suggestions":"2838"},{"ruleId":"2658","severity":1,"message":"2839","line":79,"column":5,"nodeType":"2660","endLine":79,"endColumn":15,"suggestions":"2840"},{"ruleId":"2841","severity":1,"message":"2842","line":86,"column":53,"nodeType":"2843","messageId":"2844","endLine":86,"endColumn":55},{"ruleId":"2658","severity":1,"message":"2709","line":101,"column":5,"nodeType":"2660","endLine":101,"endColumn":21,"suggestions":"2845"},{"ruleId":"2619","severity":1,"message":"2846","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2702","line":36,"column":3,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2719","line":61,"column":10,"nodeType":"2621","messageId":"2622","endLine":61,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2847","line":66,"column":10,"nodeType":"2621","messageId":"2622","endLine":66,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2848","line":66,"column":30,"nodeType":"2621","messageId":"2622","endLine":66,"endColumn":51},{"ruleId":"2658","severity":1,"message":"2720","line":139,"column":6,"nodeType":"2660","endLine":139,"endColumn":16,"suggestions":"2849"},{"ruleId":"2658","severity":1,"message":"2722","line":300,"column":6,"nodeType":"2660","endLine":300,"endColumn":33,"suggestions":"2850"},{"ruleId":"2658","severity":1,"message":"2851","line":322,"column":6,"nodeType":"2660","endLine":322,"endColumn":30,"suggestions":"2852"},{"ruleId":"2619","severity":1,"message":"2725","line":524,"column":9,"nodeType":"2621","messageId":"2622","endLine":524,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2726","line":528,"column":9,"nodeType":"2621","messageId":"2622","endLine":528,"endColumn":25},{"ruleId":"2658","severity":1,"message":"2709","line":554,"column":6,"nodeType":"2660","endLine":554,"endColumn":8,"suggestions":"2853"},{"ruleId":"2619","severity":1,"message":"2702","line":8,"column":55,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":73},{"ruleId":"2658","severity":1,"message":"2854","line":111,"column":3,"nodeType":"2660","endLine":111,"endColumn":33,"suggestions":"2855"},{"ruleId":"2619","severity":1,"message":"2856","line":6,"column":65,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":81},{"ruleId":"2619","severity":1,"message":"2857","line":6,"column":83,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":99},{"ruleId":"2619","severity":1,"message":"2858","line":6,"column":150,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":166},{"ruleId":"2619","severity":1,"message":"2859","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":21},{"ruleId":"2658","severity":1,"message":"2709","line":39,"column":8,"nodeType":"2660","endLine":39,"endColumn":10,"suggestions":"2860"},{"ruleId":"2658","severity":1,"message":"2861","line":52,"column":8,"nodeType":"2660","endLine":52,"endColumn":25,"suggestions":"2862"},{"ruleId":"2658","severity":1,"message":"2861","line":63,"column":8,"nodeType":"2660","endLine":63,"endColumn":34,"suggestions":"2863"},{"ruleId":"2658","severity":1,"message":"2861","line":77,"column":8,"nodeType":"2660","endLine":77,"endColumn":28,"suggestions":"2864"},{"ruleId":"2619","severity":1,"message":"2865","line":82,"column":15,"nodeType":"2621","messageId":"2622","endLine":82,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2866","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":22},{"ruleId":"2658","severity":1,"message":"2709","line":58,"column":5,"nodeType":"2660","endLine":58,"endColumn":14,"suggestions":"2867"},{"ruleId":"2658","severity":1,"message":"2868","line":83,"column":5,"nodeType":"2660","endLine":83,"endColumn":28,"suggestions":"2869"},{"ruleId":"2658","severity":1,"message":"2709","line":104,"column":5,"nodeType":"2660","endLine":104,"endColumn":27,"suggestions":"2870"},{"ruleId":"2619","severity":1,"message":"2871","line":169,"column":8,"nodeType":"2621","messageId":"2622","endLine":169,"endColumn":17},{"ruleId":"2666","severity":1,"message":"2667","line":185,"column":7,"nodeType":"2668","endLine":192,"endColumn":37},{"ruleId":"2872","severity":1,"message":"2873","line":205,"column":8,"nodeType":"2668","endLine":205,"endColumn":60},{"ruleId":"2872","severity":1,"message":"2873","line":215,"column":8,"nodeType":"2668","endLine":215,"endColumn":60},{"ruleId":"2619","severity":1,"message":"2856","line":6,"column":65,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":81},{"ruleId":"2619","severity":1,"message":"2857","line":6,"column":83,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":99},{"ruleId":"2619","severity":1,"message":"2858","line":6,"column":150,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":166},{"ruleId":"2658","severity":1,"message":"2709","line":38,"column":8,"nodeType":"2660","endLine":38,"endColumn":10,"suggestions":"2874"},{"ruleId":"2658","severity":1,"message":"2861","line":51,"column":8,"nodeType":"2660","endLine":51,"endColumn":25,"suggestions":"2875"},{"ruleId":"2658","severity":1,"message":"2861","line":62,"column":8,"nodeType":"2660","endLine":62,"endColumn":34,"suggestions":"2876"},{"ruleId":"2658","severity":1,"message":"2861","line":76,"column":8,"nodeType":"2660","endLine":76,"endColumn":28,"suggestions":"2877"},{"ruleId":"2619","severity":1,"message":"2865","line":81,"column":15,"nodeType":"2621","messageId":"2622","endLine":81,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2878","line":6,"column":10,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2879","line":6,"column":26,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":43},{"ruleId":"2619","severity":1,"message":"2880","line":6,"column":45,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":62},{"ruleId":"2619","severity":1,"message":"2881","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2882","line":15,"column":10,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2883","line":15,"column":27,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2884","line":15,"column":39,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":53},{"ruleId":"2619","severity":1,"message":"2655","line":23,"column":10,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":33},{"ruleId":"2619","severity":1,"message":"2656","line":24,"column":10,"nodeType":"2621","messageId":"2622","endLine":24,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2885","line":45,"column":11,"nodeType":"2621","messageId":"2622","endLine":45,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2886","line":47,"column":11,"nodeType":"2621","messageId":"2622","endLine":47,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2887","line":53,"column":26,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":41},{"ruleId":"2658","severity":1,"message":"2659","line":63,"column":8,"nodeType":"2660","endLine":63,"endColumn":10,"suggestions":"2888"},{"ruleId":"2619","severity":1,"message":"2889","line":79,"column":12,"nodeType":"2621","messageId":"2622","endLine":79,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2890","line":79,"column":26,"nodeType":"2621","messageId":"2622","endLine":79,"endColumn":41},{"ruleId":"2619","severity":1,"message":"2891","line":87,"column":21,"nodeType":"2621","messageId":"2622","endLine":87,"endColumn":31},{"ruleId":"2658","severity":1,"message":"2662","line":117,"column":8,"nodeType":"2660","endLine":117,"endColumn":18,"suggestions":"2892"},{"ruleId":"2619","severity":1,"message":"2893","line":126,"column":11,"nodeType":"2621","messageId":"2622","endLine":126,"endColumn":19},{"ruleId":"2658","severity":1,"message":"2709","line":144,"column":8,"nodeType":"2660","endLine":144,"endColumn":18,"suggestions":"2894"},{"ruleId":"2658","severity":1,"message":"2895","line":151,"column":8,"nodeType":"2660","endLine":151,"endColumn":22,"suggestions":"2896"},{"ruleId":"2671","severity":1,"message":"2672","line":211,"column":43,"nodeType":"2673","messageId":"2674","endLine":211,"endColumn":45},{"ruleId":"2671","severity":1,"message":"2672","line":211,"column":65,"nodeType":"2673","messageId":"2674","endLine":211,"endColumn":67},{"ruleId":"2671","severity":1,"message":"2672","line":213,"column":49,"nodeType":"2673","messageId":"2674","endLine":213,"endColumn":51},{"ruleId":"2671","severity":1,"message":"2672","line":213,"column":70,"nodeType":"2673","messageId":"2674","endLine":213,"endColumn":72},{"ruleId":"2671","severity":1,"message":"2672","line":215,"column":48,"nodeType":"2673","messageId":"2674","endLine":215,"endColumn":50},{"ruleId":"2671","severity":1,"message":"2672","line":215,"column":68,"nodeType":"2673","messageId":"2674","endLine":215,"endColumn":70},{"ruleId":"2671","severity":1,"message":"2672","line":217,"column":46,"nodeType":"2673","messageId":"2674","endLine":217,"endColumn":48},{"ruleId":"2671","severity":1,"message":"2672","line":217,"column":64,"nodeType":"2673","messageId":"2674","endLine":217,"endColumn":66},{"ruleId":"2671","severity":1,"message":"2672","line":219,"column":48,"nodeType":"2673","messageId":"2674","endLine":219,"endColumn":50},{"ruleId":"2671","severity":1,"message":"2672","line":219,"column":68,"nodeType":"2673","messageId":"2674","endLine":219,"endColumn":70},{"ruleId":"2666","severity":1,"message":"2667","line":676,"column":37,"nodeType":"2668","endLine":676,"endColumn":82},{"ruleId":"2666","severity":1,"message":"2667","line":11,"column":9,"nodeType":"2668","endLine":11,"endColumn":62},{"ruleId":"2619","severity":1,"message":"2655","line":14,"column":36,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":59},{"ruleId":"2619","severity":1,"message":"2656","line":20,"column":10,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":35},{"ruleId":"2658","severity":1,"message":"2662","line":55,"column":5,"nodeType":"2660","endLine":55,"endColumn":15,"suggestions":"2897"},{"ruleId":"2658","severity":1,"message":"2898","line":68,"column":3,"nodeType":"2660","endLine":68,"endColumn":30,"suggestions":"2899"},{"ruleId":"2658","severity":1,"message":"2900","line":83,"column":3,"nodeType":"2660","endLine":83,"endColumn":15,"suggestions":"2901"},{"ruleId":"2658","severity":1,"message":"2709","line":48,"column":8,"nodeType":"2660","endLine":48,"endColumn":42,"suggestions":"2902"},{"ruleId":"2779","severity":1,"message":"2780","line":85,"column":29,"nodeType":"2781","messageId":"2782","endLine":85,"endColumn":31},{"ruleId":"2779","severity":1,"message":"2780","line":89,"column":33,"nodeType":"2781","messageId":"2782","endLine":89,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2795","line":9,"column":3,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2796","line":12,"column":3,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":32},{"ruleId":"2619","severity":1,"message":"2797","line":13,"column":3,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2798","line":21,"column":3,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":34},{"ruleId":"2619","severity":1,"message":"2799","line":34,"column":3,"nodeType":"2621","messageId":"2622","endLine":34,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2903","line":37,"column":3,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2904","line":48,"column":8,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2800","line":52,"column":10,"nodeType":"2621","messageId":"2622","endLine":52,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2905","line":55,"column":11,"nodeType":"2621","messageId":"2622","endLine":55,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2906","line":56,"column":9,"nodeType":"2621","messageId":"2622","endLine":56,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2669","line":102,"column":10,"nodeType":"2621","messageId":"2622","endLine":102,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2907","line":103,"column":10,"nodeType":"2621","messageId":"2622","endLine":103,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2908","line":110,"column":10,"nodeType":"2621","messageId":"2622","endLine":110,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2801","line":114,"column":10,"nodeType":"2621","messageId":"2622","endLine":114,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2753","line":154,"column":10,"nodeType":"2621","messageId":"2622","endLine":154,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2689","line":154,"column":25,"nodeType":"2621","messageId":"2622","endLine":154,"endColumn":41},{"ruleId":"2619","severity":1,"message":"2802","line":155,"column":10,"nodeType":"2621","messageId":"2622","endLine":155,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2803","line":155,"column":22,"nodeType":"2621","messageId":"2622","endLine":155,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2804","line":156,"column":9,"nodeType":"2621","messageId":"2622","endLine":156,"endColumn":18},{"ruleId":"2658","severity":1,"message":"2709","line":188,"column":6,"nodeType":"2660","endLine":188,"endColumn":29,"suggestions":"2909"},{"ruleId":"2658","severity":1,"message":"2709","line":224,"column":6,"nodeType":"2660","endLine":224,"endColumn":25,"suggestions":"2910"},{"ruleId":"2658","severity":1,"message":"2808","line":257,"column":6,"nodeType":"2660","endLine":257,"endColumn":25,"suggestions":"2911"},{"ruleId":"2658","severity":1,"message":"2709","line":267,"column":6,"nodeType":"2660","endLine":267,"endColumn":18,"suggestions":"2912"},{"ruleId":"2658","severity":1,"message":"2709","line":293,"column":6,"nodeType":"2660","endLine":293,"endColumn":26,"suggestions":"2913"},{"ruleId":"2658","severity":1,"message":"2709","line":311,"column":6,"nodeType":"2660","endLine":311,"endColumn":28,"suggestions":"2914"},{"ruleId":"2658","severity":1,"message":"2709","line":329,"column":6,"nodeType":"2660","endLine":329,"endColumn":27,"suggestions":"2915"},{"ruleId":"2658","severity":1,"message":"2709","line":347,"column":6,"nodeType":"2660","endLine":347,"endColumn":29,"suggestions":"2916"},{"ruleId":"2658","severity":1,"message":"2685","line":402,"column":6,"nodeType":"2660","endLine":402,"endColumn":28,"suggestions":"2917"},{"ruleId":"2658","severity":1,"message":"2816","line":414,"column":6,"nodeType":"2660","endLine":414,"endColumn":41,"suggestions":"2918"},{"ruleId":"2658","severity":1,"message":"2818","line":428,"column":6,"nodeType":"2660","endLine":428,"endColumn":24,"suggestions":"2919"},{"ruleId":"2820","severity":1,"message":"2821","line":594,"column":9,"nodeType":"2822","messageId":"2782","endLine":594,"endColumn":14},{"ruleId":"2820","severity":1,"message":"2823","line":771,"column":13,"nodeType":"2822","messageId":"2782","endLine":771,"endColumn":34},{"ruleId":"2820","severity":1,"message":"2824","line":820,"column":11,"nodeType":"2822","messageId":"2782","endLine":820,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2784","line":48,"column":9,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2785","line":48,"column":19,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":30},{"ruleId":"2619","severity":1,"message":"2786","line":62,"column":9,"nodeType":"2621","messageId":"2622","endLine":62,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2787","line":62,"column":23,"nodeType":"2621","messageId":"2622","endLine":62,"endColumn":38},{"ruleId":"2619","severity":1,"message":"2753","line":67,"column":9,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":22},{"ruleId":"2619","severity":1,"message":"2689","line":67,"column":24,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":40},{"ruleId":"2619","severity":1,"message":"2920","line":78,"column":33,"nodeType":"2621","messageId":"2622","endLine":78,"endColumn":58},{"ruleId":"2658","severity":1,"message":"2692","line":103,"column":3,"nodeType":"2660","endLine":103,"endColumn":35,"suggestions":"2921"},{"ruleId":"2658","severity":1,"message":"2692","line":136,"column":3,"nodeType":"2660","endLine":136,"endColumn":28,"suggestions":"2922"},{"ruleId":"2658","severity":1,"message":"2692","line":166,"column":3,"nodeType":"2660","endLine":166,"endColumn":28,"suggestions":"2923"},{"ruleId":"2658","severity":1,"message":"2692","line":183,"column":3,"nodeType":"2660","endLine":183,"endColumn":34,"suggestions":"2924"},{"ruleId":"2779","severity":1,"message":"2780","line":256,"column":28,"nodeType":"2781","messageId":"2782","endLine":256,"endColumn":30},{"ruleId":"2779","severity":1,"message":"2780","line":256,"column":50,"nodeType":"2781","messageId":"2782","endLine":256,"endColumn":52},{"ruleId":"2619","severity":1,"message":"2655","line":5,"column":10,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":33},{"ruleId":"2619","severity":1,"message":"2656","line":6,"column":10,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":35},{"ruleId":"2658","severity":1,"message":"2925","line":27,"column":9,"nodeType":"2660","endLine":27,"endColumn":39,"suggestions":"2926"},{"ruleId":"2658","severity":1,"message":"2659","line":38,"column":4,"nodeType":"2660","endLine":38,"endColumn":6,"suggestions":"2927"},{"ruleId":"2658","severity":1,"message":"2692","line":46,"column":9,"nodeType":"2660","endLine":46,"endColumn":19,"suggestions":"2928"},{"ruleId":"2658","severity":1,"message":"2929","line":49,"column":5,"nodeType":"2621","endLine":49,"endColumn":14,"suggestions":"2930"},{"ruleId":"2619","severity":1,"message":"2735","line":12,"column":2,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2689","line":54,"column":24,"nodeType":"2621","messageId":"2622","endLine":54,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":109,"column":3,"nodeType":"2660","endLine":109,"endColumn":26,"suggestions":"2931"},{"ruleId":"2658","severity":1,"message":"2925","line":24,"column":9,"nodeType":"2660","endLine":24,"endColumn":39,"suggestions":"2932"},{"ruleId":"2619","severity":1,"message":"2881","line":7,"column":8,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2933","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2934","line":9,"column":10,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":18},{"ruleId":"2619","severity":1,"message":"2935","line":10,"column":8,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2936","line":19,"column":8,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2937","line":28,"column":10,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2938","line":28,"column":26,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":43},{"ruleId":"2658","severity":1,"message":"2939","line":79,"column":6,"nodeType":"2660","endLine":79,"endColumn":24,"suggestions":"2940"},{"ruleId":"2619","severity":1,"message":"2701","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2702","line":13,"column":55,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":73},{"ruleId":"2619","severity":1,"message":"2681","line":31,"column":8,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":16},{"ruleId":"2658","severity":1,"message":"2690","line":87,"column":3,"nodeType":"2660","endLine":87,"endColumn":26,"suggestions":"2941"},{"ruleId":"2658","severity":1,"message":"2692","line":117,"column":3,"nodeType":"2660","endLine":117,"endColumn":26,"suggestions":"2942"},{"ruleId":"2658","severity":1,"message":"2692","line":132,"column":3,"nodeType":"2660","endLine":132,"endColumn":26,"suggestions":"2943"},{"ruleId":"2658","severity":1,"message":"2692","line":149,"column":3,"nodeType":"2660","endLine":149,"endColumn":32,"suggestions":"2944"},{"ruleId":"2658","severity":1,"message":"2692","line":178,"column":3,"nodeType":"2660","endLine":178,"endColumn":35,"suggestions":"2945"},{"ruleId":"2658","severity":1,"message":"2692","line":195,"column":3,"nodeType":"2660","endLine":195,"endColumn":33,"suggestions":"2946"},{"ruleId":"2619","severity":1,"message":"2689","line":57,"column":24,"nodeType":"2621","messageId":"2622","endLine":57,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2728","line":93,"column":3,"nodeType":"2660","endLine":93,"endColumn":31,"suggestions":"2947"},{"ruleId":"2658","severity":1,"message":"2948","line":119,"column":3,"nodeType":"2660","endLine":119,"endColumn":43,"suggestions":"2949"},{"ruleId":"2658","severity":1,"message":"2948","line":135,"column":3,"nodeType":"2660","endLine":135,"endColumn":49,"suggestions":"2950"},{"ruleId":"2658","severity":1,"message":"2948","line":151,"column":3,"nodeType":"2660","endLine":151,"endColumn":43,"suggestions":"2951"},{"ruleId":"2619","severity":1,"message":"2655","line":8,"column":38,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":61},{"ruleId":"2658","severity":1,"message":"2659","line":26,"column":4,"nodeType":"2660","endLine":26,"endColumn":6,"suggestions":"2952"},{"ruleId":"2658","severity":1,"message":"2662","line":32,"column":5,"nodeType":"2660","endLine":32,"endColumn":15,"suggestions":"2953"},{"ruleId":"2658","severity":1,"message":"2692","line":37,"column":5,"nodeType":"2660","endLine":37,"endColumn":15,"suggestions":"2954"},{"ruleId":"2619","severity":1,"message":"2759","line":5,"column":37,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":60},{"ruleId":"2619","severity":1,"message":"2655","line":5,"column":91,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":114},{"ruleId":"2619","severity":1,"message":"2955","line":9,"column":44,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":57},{"ruleId":"2658","severity":1,"message":"2659","line":44,"column":4,"nodeType":"2660","endLine":44,"endColumn":6,"suggestions":"2956"},{"ruleId":"2658","severity":1,"message":"2709","line":47,"column":5,"nodeType":"2660","endLine":47,"endColumn":14,"suggestions":"2957"},{"ruleId":"2658","severity":1,"message":"2925","line":69,"column":5,"nodeType":"2660","endLine":69,"endColumn":33,"suggestions":"2958"},{"ruleId":"2658","severity":1,"message":"2959","line":99,"column":5,"nodeType":"2660","endLine":99,"endColumn":19,"suggestions":"2960"},{"ruleId":"2658","severity":1,"message":"2709","line":112,"column":3,"nodeType":"2660","endLine":112,"endColumn":24,"suggestions":"2961"},{"ruleId":"2658","severity":1,"message":"2962","line":116,"column":46,"nodeType":"2660","endLine":116,"endColumn":183,"suggestions":"2963"},{"ruleId":"2658","severity":1,"message":"2964","line":116,"column":61,"nodeType":"2673","endLine":116,"endColumn":182},{"ruleId":"2675","severity":1,"message":"2676","line":200,"column":6,"nodeType":"2668","endLine":200,"endColumn":85},{"ruleId":"2675","severity":1,"message":"2676","line":204,"column":6,"nodeType":"2668","endLine":204,"endColumn":209},{"ruleId":"2619","severity":1,"message":"2689","line":42,"column":24,"nodeType":"2621","messageId":"2622","endLine":42,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2692","line":66,"column":3,"nodeType":"2660","endLine":66,"endColumn":36,"suggestions":"2965"},{"ruleId":"2658","severity":1,"message":"2692","line":77,"column":3,"nodeType":"2660","endLine":77,"endColumn":36,"suggestions":"2966"},{"ruleId":"2658","severity":1,"message":"2692","line":88,"column":3,"nodeType":"2660","endLine":88,"endColumn":36,"suggestions":"2967"},{"ruleId":"2619","severity":1,"message":"2968","line":3,"column":28,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":36},{"ruleId":"2619","severity":1,"message":"2969","line":6,"column":10,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2970","line":6,"column":29,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":43},{"ruleId":"2658","severity":1,"message":"2709","line":32,"column":6,"nodeType":"2660","endLine":32,"endColumn":34,"suggestions":"2971"},{"ruleId":"2658","severity":1,"message":"2972","line":60,"column":6,"nodeType":"2660","endLine":60,"endColumn":16,"suggestions":"2973"},{"ruleId":"2666","severity":1,"message":"2667","line":96,"column":23,"nodeType":"2668","endLine":96,"endColumn":68},{"ruleId":"2619","severity":1,"message":"2881","line":1,"column":8,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2968","line":2,"column":17,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":25},{"ruleId":"2658","severity":1,"message":"2659","line":13,"column":5,"nodeType":"2660","endLine":13,"endColumn":7,"suggestions":"2974"},{"ruleId":"2619","severity":1,"message":"2756","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2681","line":16,"column":8,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":16},{"ruleId":"2619","severity":1,"message":"2757","line":23,"column":9,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2689","line":59,"column":24,"nodeType":"2621","messageId":"2622","endLine":59,"endColumn":40},{"ruleId":"2658","severity":1,"message":"2690","line":82,"column":3,"nodeType":"2660","endLine":82,"endColumn":26,"suggestions":"2975"},{"ruleId":"2658","severity":1,"message":"2692","line":97,"column":3,"nodeType":"2660","endLine":97,"endColumn":28,"suggestions":"2976"},{"ruleId":"2658","severity":1,"message":"2692","line":108,"column":3,"nodeType":"2660","endLine":108,"endColumn":34,"suggestions":"2977"},{"ruleId":"2658","severity":1,"message":"2692","line":119,"column":3,"nodeType":"2660","endLine":119,"endColumn":28,"suggestions":"2978"},{"ruleId":"2658","severity":1,"message":"2692","line":134,"column":3,"nodeType":"2660","endLine":134,"endColumn":30,"suggestions":"2979"},{"ruleId":"2619","severity":1,"message":"2980","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":24},{"ruleId":"2619","severity":1,"message":"2981","line":28,"column":5,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2982","line":33,"column":3,"nodeType":"2621","messageId":"2622","endLine":33,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2627","line":4,"column":7,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2983","line":2,"column":29,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":38},{"ruleId":"2619","severity":1,"message":"2984","line":58,"column":11,"nodeType":"2621","messageId":"2622","endLine":58,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2985","line":5,"column":22,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":31},{"ruleId":"2658","severity":1,"message":"2659","line":21,"column":5,"nodeType":"2660","endLine":21,"endColumn":7,"suggestions":"2986"},{"ruleId":"2619","severity":1,"message":"2987","line":15,"column":8,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2988","line":19,"column":3,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":5},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":21,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":22},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":28,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2792","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2992","line":2,"column":23,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":34},{"ruleId":"2619","severity":1,"message":"2993","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2994","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2995","line":20,"column":3,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":7},{"ruleId":"2619","severity":1,"message":"2996","line":30,"column":8,"nodeType":"2621","messageId":"2622","endLine":30,"endColumn":27},{"ruleId":"2666","severity":1,"message":"2667","line":44,"column":10,"nodeType":"2668","endLine":47,"endColumn":12},{"ruleId":"2619","severity":1,"message":"2993","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2997","line":12,"column":8,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":18},{"ruleId":"2619","severity":1,"message":"2984","line":62,"column":8,"nodeType":"2621","messageId":"2622","endLine":62,"endColumn":11},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":27,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"2998","line":8,"column":10,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2999","line":8,"column":19,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3000","line":10,"column":9,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3001","line":4,"column":8,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":29},{"ruleId":"2658","severity":1,"message":"2709","line":24,"column":8,"nodeType":"2660","endLine":24,"endColumn":10,"suggestions":"3002"},{"ruleId":"2666","severity":1,"message":"2667","line":39,"column":41,"nodeType":"2668","endLine":41,"endColumn":69},{"ruleId":"2779","severity":1,"message":"2780","line":17,"column":20,"nodeType":"2781","messageId":"2782","endLine":17,"endColumn":22},{"ruleId":"2666","severity":1,"message":"2667","line":32,"column":9,"nodeType":"2668","endLine":37,"endColumn":35},{"ruleId":"2666","severity":1,"message":"2667","line":78,"column":10,"nodeType":"2668","endLine":83,"endColumn":36},{"ruleId":"2619","severity":1,"message":"2712","line":20,"column":9,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":17},{"ruleId":"2658","severity":1,"message":"3003","line":36,"column":5,"nodeType":"2660","endLine":36,"endColumn":54,"suggestions":"3004"},{"ruleId":"2715","severity":1,"message":"2716","line":109,"column":37,"nodeType":"2668","messageId":"2717","endLine":109,"endColumn":129,"fix":"3005"},{"ruleId":"2715","severity":1,"message":"2716","line":43,"column":142,"nodeType":"2668","messageId":"2717","endLine":43,"endColumn":194,"fix":"3006"},{"ruleId":"2619","severity":1,"message":"2982","line":38,"column":3,"nodeType":"2621","messageId":"2622","endLine":38,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3007","line":39,"column":3,"nodeType":"2621","messageId":"2622","endLine":39,"endColumn":23},{"ruleId":"2841","severity":1,"message":"2842","line":70,"column":38,"nodeType":"2843","messageId":"2844","endLine":70,"endColumn":40},{"ruleId":"2658","severity":1,"message":"3008","line":78,"column":3,"nodeType":"2660","endLine":78,"endColumn":23,"suggestions":"3009"},{"ruleId":"2841","severity":1,"message":"2842","line":90,"column":61,"nodeType":"2843","messageId":"2844","endLine":90,"endColumn":63},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":28,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"3010","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3011","line":13,"column":9,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3012","line":21,"column":12,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3013","line":22,"column":12,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3014","line":23,"column":12,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3015","line":23,"column":22,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":33},{"ruleId":"2820","severity":1,"message":"3016","line":155,"column":33,"nodeType":"2822","messageId":"2782","endLine":155,"endColumn":40},{"ruleId":"2619","severity":1,"message":"3017","line":7,"column":10,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3018","line":7,"column":24,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":39},{"ruleId":"2619","severity":1,"message":"2987","line":13,"column":9,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2988","line":17,"column":5,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":7},{"ruleId":"2989","severity":1,"message":"2990","line":19,"column":23,"nodeType":"2781","messageId":"2991","endLine":19,"endColumn":24},{"ruleId":"2989","severity":1,"message":"2990","line":19,"column":30,"nodeType":"2781","messageId":"2991","endLine":19,"endColumn":31},{"ruleId":"2619","severity":1,"message":"3019","line":7,"column":8,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":15},{"ruleId":"2675","severity":1,"message":"2676","line":17,"column":15,"nodeType":"2668","endLine":17,"endColumn":97},{"ruleId":"2715","severity":1,"message":"2716","line":150,"column":9,"nodeType":"2668","messageId":"2717","endLine":150,"endColumn":62,"fix":"3020"},{"ruleId":"2767","severity":1,"message":"3021","line":17,"column":24,"nodeType":"2621","messageId":"2769","endLine":17,"endColumn":41},{"ruleId":"2658","severity":1,"message":"3022","line":20,"column":8,"nodeType":"2772","endLine":29,"endColumn":3},{"ruleId":"2619","severity":1,"message":"2984","line":24,"column":8,"nodeType":"2621","messageId":"2622","endLine":24,"endColumn":11},{"ruleId":"2619","severity":1,"message":"2999","line":23,"column":19,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":29},{"ruleId":"2619","severity":1,"message":"2987","line":30,"column":8,"nodeType":"2621","messageId":"2622","endLine":30,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2988","line":34,"column":3,"nodeType":"2621","messageId":"2622","endLine":34,"endColumn":5},{"ruleId":"2989","severity":1,"message":"2990","line":36,"column":21,"nodeType":"2781","messageId":"2991","endLine":36,"endColumn":22},{"ruleId":"2989","severity":1,"message":"2990","line":36,"column":28,"nodeType":"2781","messageId":"2991","endLine":36,"endColumn":29},{"ruleId":"2675","severity":1,"message":"2676","line":16,"column":8,"nodeType":"2668","endLine":16,"endColumn":76},{"ruleId":"2619","severity":1,"message":"3023","line":53,"column":5,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3024","line":54,"column":5,"nodeType":"2621","messageId":"2622","endLine":54,"endColumn":13},{"ruleId":"2619","severity":1,"message":"3025","line":55,"column":5,"nodeType":"2621","messageId":"2622","endLine":55,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3026","line":63,"column":9,"nodeType":"2621","messageId":"2622","endLine":63,"endColumn":17},{"ruleId":"2619","severity":1,"message":"2984","line":69,"column":11,"nodeType":"2621","messageId":"2622","endLine":69,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3027","line":27,"column":2,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3028","line":28,"column":2,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3029","line":29,"column":2,"nodeType":"2621","messageId":"2622","endLine":29,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3017","line":7,"column":10,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3018","line":7,"column":24,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":39},{"ruleId":"2619","severity":1,"message":"2987","line":13,"column":9,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2988","line":17,"column":5,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":7},{"ruleId":"2989","severity":1,"message":"2990","line":19,"column":23,"nodeType":"2781","messageId":"2991","endLine":19,"endColumn":24},{"ruleId":"2989","severity":1,"message":"2990","line":19,"column":30,"nodeType":"2781","messageId":"2991","endLine":19,"endColumn":31},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3030","line":24,"column":8,"nodeType":"2621","messageId":"2622","endLine":24,"endColumn":24},{"ruleId":"3031","severity":1,"message":"3032","line":73,"column":1,"nodeType":"3033","messageId":"3034","endLine":95,"endColumn":12},{"ruleId":"2619","severity":1,"message":"3035","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2751","line":4,"column":8,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2761","line":18,"column":11,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":18},{"ruleId":"2658","severity":1,"message":"3036","line":40,"column":9,"nodeType":"2660","endLine":40,"endColumn":21,"suggestions":"3037"},{"ruleId":"2619","severity":1,"message":"2761","line":17,"column":8,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2998","line":22,"column":20,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":27},{"ruleId":"2658","severity":1,"message":"3038","line":35,"column":3,"nodeType":"2660","endLine":35,"endColumn":30,"suggestions":"3039"},{"ruleId":"2619","severity":1,"message":"3035","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2761","line":17,"column":11,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":18},{"ruleId":"2619","severity":1,"message":"2998","line":22,"column":23,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":30},{"ruleId":"2658","severity":1,"message":"3040","line":54,"column":9,"nodeType":"2660","endLine":54,"endColumn":36,"suggestions":"3041"},{"ruleId":"2619","severity":1,"message":"2881","line":1,"column":8,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2968","line":2,"column":17,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2761","line":11,"column":8,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":15},{"ruleId":"2658","severity":1,"message":"3042","line":10,"column":2,"nodeType":"2621","endLine":10,"endColumn":11,"suggestions":"3043"},{"ruleId":"2619","severity":1,"message":"3044","line":13,"column":8,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3045","line":16,"column":8,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3046","line":69,"column":3,"nodeType":"2621","messageId":"2622","endLine":69,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3047","line":70,"column":3,"nodeType":"2621","messageId":"2622","endLine":70,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3048","line":71,"column":3,"nodeType":"2621","messageId":"2622","endLine":71,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3049","line":72,"column":3,"nodeType":"2621","messageId":"2622","endLine":72,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3050","line":75,"column":3,"nodeType":"2621","messageId":"2622","endLine":75,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3051","line":76,"column":3,"nodeType":"2621","messageId":"2622","endLine":76,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3052","line":77,"column":3,"nodeType":"2621","messageId":"2622","endLine":77,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3053","line":78,"column":3,"nodeType":"2621","messageId":"2622","endLine":78,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3054","line":80,"column":3,"nodeType":"2621","messageId":"2622","endLine":80,"endColumn":12},{"ruleId":"2619","severity":1,"message":"3055","line":81,"column":3,"nodeType":"2621","messageId":"2622","endLine":81,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3056","line":82,"column":3,"nodeType":"2621","messageId":"2622","endLine":82,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3057","line":83,"column":3,"nodeType":"2621","messageId":"2622","endLine":83,"endColumn":20},{"ruleId":"2658","severity":1,"message":"3058","line":97,"column":2,"nodeType":"2621","endLine":97,"endColumn":11,"suggestions":"3059"},{"ruleId":"2841","severity":1,"message":"2842","line":115,"column":56,"nodeType":"2843","messageId":"2844","endLine":115,"endColumn":58},{"ruleId":"2820","severity":1,"message":"3060","line":215,"column":100,"nodeType":"2822","messageId":"2782","endLine":215,"endColumn":113},{"ruleId":"2619","severity":1,"message":"3061","line":6,"column":35,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":51},{"ruleId":"2619","severity":1,"message":"2881","line":7,"column":8,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3062","line":13,"column":5,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3063","line":15,"column":5,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3064","line":17,"column":5,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3065","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3066","line":11,"column":5,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3067","line":14,"column":5,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3068","line":15,"column":5,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3069","line":16,"column":5,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3063","line":18,"column":5,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2740","line":19,"column":5,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":13},{"ruleId":"2619","severity":1,"message":"3070","line":26,"column":7,"nodeType":"2621","messageId":"2622","endLine":26,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3071","line":4,"column":70,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":93},{"ruleId":"2658","severity":1,"message":"2808","line":21,"column":6,"nodeType":"2660","endLine":21,"endColumn":21,"suggestions":"3072"},{"ruleId":"2658","severity":1,"message":"2808","line":28,"column":6,"nodeType":"2660","endLine":28,"endColumn":22,"suggestions":"3073"},{"ruleId":"2619","severity":1,"message":"3074","line":19,"column":2,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":32},{"ruleId":"2619","severity":1,"message":"3075","line":20,"column":2,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":35},{"ruleId":"2619","severity":1,"message":"3076","line":21,"column":2,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":35},{"ruleId":"2619","severity":1,"message":"3065","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3077","line":7,"column":10,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":33},{"ruleId":"2619","severity":1,"message":"3063","line":16,"column":5,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":40,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":49},{"ruleId":"2619","severity":1,"message":"3078","line":27,"column":3,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3079","line":33,"column":3,"nodeType":"2621","messageId":"2622","endLine":33,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3080","line":34,"column":3,"nodeType":"2621","messageId":"2622","endLine":34,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3081","line":35,"column":3,"nodeType":"2621","messageId":"2622","endLine":35,"endColumn":18},{"ruleId":"2619","severity":1,"message":"2761","line":48,"column":8,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3082","line":85,"column":8,"nodeType":"2621","messageId":"2622","endLine":85,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3083","line":129,"column":11,"nodeType":"2621","messageId":"2622","endLine":129,"endColumn":30},{"ruleId":"2658","severity":1,"message":"3084","line":142,"column":4,"nodeType":"2660","endLine":142,"endColumn":6,"suggestions":"3085"},{"ruleId":"2779","severity":1,"message":"2780","line":212,"column":30,"nodeType":"2781","messageId":"2782","endLine":212,"endColumn":32},{"ruleId":"2779","severity":1,"message":"2780","line":226,"column":30,"nodeType":"2781","messageId":"2782","endLine":226,"endColumn":32},{"ruleId":"2779","severity":1,"message":"2780","line":239,"column":50,"nodeType":"2781","messageId":"2782","endLine":239,"endColumn":52},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3086","line":25,"column":9,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3087","line":25,"column":16,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3088","line":31,"column":3,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3089","line":32,"column":3,"nodeType":"2621","messageId":"2622","endLine":32,"endColumn":23},{"ruleId":"2841","severity":1,"message":"2842","line":110,"column":61,"nodeType":"2843","messageId":"2844","endLine":110,"endColumn":63},{"ruleId":"2841","severity":1,"message":"2842","line":141,"column":47,"nodeType":"2843","messageId":"2844","endLine":141,"endColumn":49},{"ruleId":"2619","severity":1,"message":"3090","line":1,"column":28,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":35},{"ruleId":"2619","severity":1,"message":"3091","line":1,"column":37,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":43},{"ruleId":"2619","severity":1,"message":"2796","line":10,"column":3,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":32},{"ruleId":"2619","severity":1,"message":"3092","line":12,"column":3,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3093","line":15,"column":3,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2799","line":17,"column":3,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3094","line":22,"column":5,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":9},{"ruleId":"2619","severity":1,"message":"3095","line":25,"column":5,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3096","line":37,"column":5,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3068","line":39,"column":5,"nodeType":"2621","messageId":"2622","endLine":39,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3097","line":41,"column":5,"nodeType":"2621","messageId":"2622","endLine":41,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3098","line":44,"column":5,"nodeType":"2621","messageId":"2622","endLine":44,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3099","line":45,"column":5,"nodeType":"2621","messageId":"2622","endLine":45,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3100","line":47,"column":5,"nodeType":"2621","messageId":"2622","endLine":47,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3101","line":48,"column":5,"nodeType":"2621","messageId":"2622","endLine":48,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3102","line":49,"column":5,"nodeType":"2621","messageId":"2622","endLine":49,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3103","line":50,"column":5,"nodeType":"2621","messageId":"2622","endLine":50,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3104","line":57,"column":5,"nodeType":"2621","messageId":"2622","endLine":57,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3105","line":59,"column":5,"nodeType":"2621","messageId":"2622","endLine":59,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3106","line":60,"column":5,"nodeType":"2621","messageId":"2622","endLine":60,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3107","line":61,"column":5,"nodeType":"2621","messageId":"2622","endLine":61,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3108","line":75,"column":5,"nodeType":"2621","messageId":"2622","endLine":75,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3109","line":76,"column":5,"nodeType":"2621","messageId":"2622","endLine":76,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3110","line":80,"column":10,"nodeType":"2621","messageId":"2622","endLine":80,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3111","line":84,"column":22,"nodeType":"2621","messageId":"2622","endLine":84,"endColumn":35},{"ruleId":"2619","severity":1,"message":"3112","line":85,"column":10,"nodeType":"2621","messageId":"2622","endLine":85,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3113","line":86,"column":10,"nodeType":"2621","messageId":"2622","endLine":86,"endColumn":31},{"ruleId":"2619","severity":1,"message":"3114","line":87,"column":10,"nodeType":"2621","messageId":"2622","endLine":87,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3115","line":87,"column":24,"nodeType":"2621","messageId":"2622","endLine":87,"endColumn":39},{"ruleId":"2619","severity":1,"message":"3116","line":88,"column":10,"nodeType":"2621","messageId":"2622","endLine":88,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3117","line":88,"column":20,"nodeType":"2621","messageId":"2622","endLine":88,"endColumn":31},{"ruleId":"2619","severity":1,"message":"3118","line":117,"column":10,"nodeType":"2621","messageId":"2622","endLine":117,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3119","line":119,"column":10,"nodeType":"2621","messageId":"2622","endLine":119,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3120","line":119,"column":25,"nodeType":"2621","messageId":"2622","endLine":119,"endColumn":41},{"ruleId":"2658","severity":1,"message":"3121","line":147,"column":6,"nodeType":"2660","endLine":161,"endColumn":4,"suggestions":"3122"},{"ruleId":"2820","severity":1,"message":"3123","line":230,"column":13,"nodeType":"2822","messageId":"2782","endLine":230,"endColumn":30},{"ruleId":"2658","severity":1,"message":"3124","line":251,"column":6,"nodeType":"2660","endLine":251,"endColumn":34,"suggestions":"3125"},{"ruleId":"2658","severity":1,"message":"3121","line":255,"column":6,"nodeType":"2660","endLine":255,"endColumn":8,"suggestions":"3126"},{"ruleId":"2619","severity":1,"message":"3127","line":298,"column":9,"nodeType":"2621","messageId":"2622","endLine":298,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3128","line":336,"column":9,"nodeType":"2621","messageId":"2622","endLine":336,"endColumn":27},{"ruleId":"2779","severity":1,"message":"2780","line":658,"column":43,"nodeType":"2781","messageId":"2782","endLine":658,"endColumn":45},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3129","line":10,"column":10,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3130","line":11,"column":10,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":37},{"ruleId":"2619","severity":1,"message":"3131","line":12,"column":8,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":23},{"ruleId":"2619","severity":1,"message":"2740","line":15,"column":9,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3132","line":22,"column":5,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3133","line":23,"column":5,"nodeType":"2621","messageId":"2622","endLine":23,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3134","line":5,"column":251,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":280},{"ruleId":"2619","severity":1,"message":"3135","line":5,"column":282,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":314},{"ruleId":"2619","severity":1,"message":"3136","line":5,"column":316,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":348},{"ruleId":"2619","severity":1,"message":"3137","line":11,"column":9,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":32},{"ruleId":"2666","severity":1,"message":"2667","line":38,"column":25,"nodeType":"2668","endLine":39,"endColumn":51},{"ruleId":"2619","severity":1,"message":"3138","line":10,"column":5,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":27},{"ruleId":"2666","severity":1,"message":"2667","line":37,"column":13,"nodeType":"2668","endLine":38,"endColumn":39},{"ruleId":"2666","severity":1,"message":"2667","line":14,"column":33,"nodeType":"2668","endLine":14,"endColumn":161},{"ruleId":"2619","severity":1,"message":"3139","line":7,"column":2,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3140","line":17,"column":3,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3141","line":18,"column":3,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":12},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2865","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":12},{"ruleId":"2619","severity":1,"message":"3142","line":25,"column":9,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2987","line":6,"column":8,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2988","line":10,"column":3,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":5},{"ruleId":"2989","severity":1,"message":"2990","line":12,"column":21,"nodeType":"2781","messageId":"2991","endLine":12,"endColumn":22},{"ruleId":"2989","severity":1,"message":"2990","line":12,"column":28,"nodeType":"2781","messageId":"2991","endLine":12,"endColumn":29},{"ruleId":"2671","severity":1,"message":"3143","line":30,"column":27,"nodeType":"2673","messageId":"2674","endLine":30,"endColumn":29},{"ruleId":"2671","severity":1,"message":"3143","line":30,"column":60,"nodeType":"2673","messageId":"2674","endLine":30,"endColumn":62},{"ruleId":"2671","severity":1,"message":"2672","line":30,"column":60,"nodeType":"2673","messageId":"2674","endLine":30,"endColumn":62},{"ruleId":"2671","severity":1,"message":"2672","line":30,"column":79,"nodeType":"2673","messageId":"2674","endLine":30,"endColumn":81},{"ruleId":"2619","severity":1,"message":"3144","line":40,"column":9,"nodeType":"2621","messageId":"2622","endLine":40,"endColumn":28},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3145","line":14,"column":157,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":165},{"ruleId":"2619","severity":1,"message":"3011","line":14,"column":189,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":200},{"ruleId":"2666","severity":1,"message":"2667","line":33,"column":8,"nodeType":"2668","endLine":33,"endColumn":53},{"ruleId":"2619","severity":1,"message":"3146","line":54,"column":8,"nodeType":"2621","messageId":"2622","endLine":54,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3144","line":40,"column":5,"nodeType":"2621","messageId":"2622","endLine":40,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3147","line":15,"column":2,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3148","line":16,"column":2,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3149","line":17,"column":2,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3150","line":18,"column":2,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3151","line":40,"column":3,"nodeType":"2621","messageId":"2622","endLine":40,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3152","line":54,"column":3,"nodeType":"2621","messageId":"2622","endLine":54,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3010","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3153","line":11,"column":40,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":52},{"ruleId":"2619","severity":1,"message":"3154","line":11,"column":54,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":69},{"ruleId":"2619","severity":1,"message":"3155","line":11,"column":85,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":102},{"ruleId":"2619","severity":1,"message":"3156","line":11,"column":142,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":161},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":28,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"3010","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3011","line":13,"column":9,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3157","line":10,"column":8,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3158","line":12,"column":8,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3159","line":36,"column":3,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3160","line":37,"column":3,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":13},{"ruleId":"2619","severity":1,"message":"3161","line":38,"column":3,"nodeType":"2621","messageId":"2622","endLine":38,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3162","line":39,"column":3,"nodeType":"2621","messageId":"2622","endLine":39,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3163","line":50,"column":3,"nodeType":"2621","messageId":"2622","endLine":50,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3164","line":52,"column":3,"nodeType":"2621","messageId":"2622","endLine":52,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3023","line":53,"column":3,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":8},{"ruleId":"2619","severity":1,"message":"3024","line":53,"column":10,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3025","line":53,"column":20,"nodeType":"2621","messageId":"2622","endLine":53,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3026","line":56,"column":8,"nodeType":"2621","messageId":"2622","endLine":56,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3165","line":64,"column":8,"nodeType":"2621","messageId":"2622","endLine":64,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3011","line":27,"column":8,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2999","line":29,"column":18,"nodeType":"2621","messageId":"2622","endLine":29,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3142","line":25,"column":9,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3166","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3137","line":13,"column":5,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":28},{"ruleId":"2666","severity":1,"message":"2667","line":61,"column":13,"nodeType":"2668","endLine":64,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3167","line":7,"column":8,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3138","line":11,"column":5,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":27},{"ruleId":"2666","severity":1,"message":"2667","line":38,"column":13,"nodeType":"2668","endLine":39,"endColumn":39},{"ruleId":"2619","severity":1,"message":"3139","line":7,"column":2,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3140","line":17,"column":3,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3141","line":18,"column":3,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":12},{"ruleId":"2666","severity":1,"message":"2667","line":17,"column":33,"nodeType":"2668","endLine":20,"endColumn":35},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3168","line":3,"column":10,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":13},{"ruleId":"2658","severity":1,"message":"3169","line":100,"column":5,"nodeType":"2660","endLine":100,"endColumn":41,"suggestions":"3170"},{"ruleId":"2658","severity":1,"message":"3169","line":105,"column":5,"nodeType":"2660","endLine":105,"endColumn":43,"suggestions":"3171"},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2657","line":10,"column":38,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":50},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":28,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"3172","line":3,"column":8,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3173","line":13,"column":2,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":18},{"ruleId":"2779","severity":1,"message":"2780","line":35,"column":19,"nodeType":"2781","messageId":"2782","endLine":35,"endColumn":21},{"ruleId":"2779","severity":1,"message":"2780","line":38,"column":19,"nodeType":"2781","messageId":"2782","endLine":38,"endColumn":21},{"ruleId":"2658","severity":1,"message":"3174","line":53,"column":6,"nodeType":"2660","endLine":53,"endColumn":8,"suggestions":"3175"},{"ruleId":"2619","severity":1,"message":"3176","line":5,"column":3,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3177","line":18,"column":10,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3019","line":21,"column":8,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3178","line":27,"column":8,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":13},{"ruleId":"2658","severity":1,"message":"3179","line":67,"column":6,"nodeType":"2660","endLine":67,"endColumn":33,"suggestions":"3180"},{"ruleId":"2619","severity":1,"message":"3181","line":321,"column":9,"nodeType":"2621","messageId":"2622","endLine":321,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3182","line":332,"column":10,"nodeType":"2621","messageId":"2622","endLine":332,"endColumn":25},{"ruleId":"2658","severity":1,"message":"3183","line":343,"column":6,"nodeType":"2660","endLine":343,"endColumn":16,"suggestions":"3184"},{"ruleId":"2658","severity":1,"message":"3185","line":350,"column":6,"nodeType":"2660","endLine":350,"endColumn":24,"suggestions":"3186"},{"ruleId":"2658","severity":1,"message":"2709","line":354,"column":6,"nodeType":"2660","endLine":354,"endColumn":14,"suggestions":"3187"},{"ruleId":"2658","severity":1,"message":"3188","line":371,"column":6,"nodeType":"2660","endLine":371,"endColumn":21,"suggestions":"3189"},{"ruleId":"2619","severity":1,"message":"3190","line":392,"column":9,"nodeType":"2621","messageId":"2622","endLine":392,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3139","line":8,"column":2,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3191","line":21,"column":3,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":20},{"ruleId":"2779","severity":1,"message":"2780","line":71,"column":43,"nodeType":"2781","messageId":"2782","endLine":71,"endColumn":45},{"ruleId":"2779","severity":1,"message":"2780","line":90,"column":43,"nodeType":"2781","messageId":"2782","endLine":90,"endColumn":45},{"ruleId":"2779","severity":1,"message":"2780","line":107,"column":55,"nodeType":"2781","messageId":"2782","endLine":107,"endColumn":57},{"ruleId":"2658","severity":1,"message":"3042","line":10,"column":2,"nodeType":"2621","endLine":10,"endColumn":11,"suggestions":"3192"},{"ruleId":"2619","severity":1,"message":"2987","line":15,"column":8,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2988","line":19,"column":3,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":5},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":21,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":22},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":28,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":29},{"ruleId":"2671","severity":1,"message":"3143","line":38,"column":27,"nodeType":"2673","messageId":"2674","endLine":38,"endColumn":29},{"ruleId":"2671","severity":1,"message":"3143","line":38,"column":60,"nodeType":"2673","messageId":"2674","endLine":38,"endColumn":62},{"ruleId":"2671","severity":1,"message":"2672","line":38,"column":60,"nodeType":"2673","messageId":"2674","endLine":38,"endColumn":62},{"ruleId":"2671","severity":1,"message":"2672","line":38,"column":79,"nodeType":"2673","messageId":"2674","endLine":38,"endColumn":81},{"ruleId":"2619","severity":1,"message":"3193","line":4,"column":8,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3194","line":28,"column":5,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3195","line":29,"column":5,"nodeType":"2621","messageId":"2622","endLine":29,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3196","line":30,"column":5,"nodeType":"2621","messageId":"2622","endLine":30,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3197","line":31,"column":5,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3044","line":13,"column":8,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3046","line":67,"column":3,"nodeType":"2621","messageId":"2622","endLine":67,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3047","line":68,"column":3,"nodeType":"2621","messageId":"2622","endLine":68,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3048","line":69,"column":3,"nodeType":"2621","messageId":"2622","endLine":69,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3049","line":70,"column":3,"nodeType":"2621","messageId":"2622","endLine":70,"endColumn":23},{"ruleId":"2658","severity":1,"message":"3058","line":95,"column":2,"nodeType":"2621","endLine":95,"endColumn":11,"suggestions":"3198"},{"ruleId":"2841","severity":1,"message":"2842","line":113,"column":56,"nodeType":"2843","messageId":"2844","endLine":113,"endColumn":58},{"ruleId":"2820","severity":1,"message":"3060","line":197,"column":100,"nodeType":"2822","messageId":"2782","endLine":197,"endColumn":113},{"ruleId":"2619","severity":1,"message":"3065","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":15},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3030","line":26,"column":8,"nodeType":"2621","messageId":"2622","endLine":26,"endColumn":24},{"ruleId":"3031","severity":1,"message":"3032","line":75,"column":1,"nodeType":"3033","messageId":"3034","endLine":97,"endColumn":12},{"ruleId":"2619","severity":1,"message":"3066","line":11,"column":5,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3067","line":14,"column":5,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3068","line":15,"column":5,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3069","line":16,"column":5,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3063","line":18,"column":5,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2740","line":19,"column":5,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":13},{"ruleId":"2619","severity":1,"message":"3070","line":26,"column":7,"nodeType":"2621","messageId":"2622","endLine":26,"endColumn":10},{"ruleId":"2619","severity":1,"message":"3065","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3077","line":7,"column":10,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":33},{"ruleId":"2619","severity":1,"message":"3063","line":16,"column":5,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":27,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"3079","line":27,"column":3,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3080","line":28,"column":3,"nodeType":"2621","messageId":"2622","endLine":28,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3081","line":29,"column":3,"nodeType":"2621","messageId":"2622","endLine":29,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3199","line":37,"column":8,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3082","line":70,"column":8,"nodeType":"2621","messageId":"2622","endLine":70,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3083","line":98,"column":11,"nodeType":"2621","messageId":"2622","endLine":98,"endColumn":30},{"ruleId":"2779","severity":1,"message":"2780","line":161,"column":30,"nodeType":"2781","messageId":"2782","endLine":161,"endColumn":32},{"ruleId":"2779","severity":1,"message":"2780","line":175,"column":30,"nodeType":"2781","messageId":"2782","endLine":175,"endColumn":32},{"ruleId":"2779","severity":1,"message":"2780","line":188,"column":50,"nodeType":"2781","messageId":"2782","endLine":188,"endColumn":52},{"ruleId":"2619","severity":1,"message":"3086","line":25,"column":9,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3087","line":25,"column":16,"nodeType":"2621","messageId":"2622","endLine":25,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3088","line":31,"column":3,"nodeType":"2621","messageId":"2622","endLine":31,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3089","line":32,"column":3,"nodeType":"2621","messageId":"2622","endLine":32,"endColumn":23},{"ruleId":"2841","severity":1,"message":"2842","line":110,"column":61,"nodeType":"2843","messageId":"2844","endLine":110,"endColumn":63},{"ruleId":"2841","severity":1,"message":"2842","line":128,"column":47,"nodeType":"2843","messageId":"2844","endLine":128,"endColumn":49},{"ruleId":"2658","severity":1,"message":"3200","line":28,"column":3,"nodeType":"2660","endLine":28,"endColumn":10,"suggestions":"3201"},{"ruleId":"2658","severity":1,"message":"3200","line":27,"column":3,"nodeType":"2660","endLine":27,"endColumn":10,"suggestions":"3202"},{"ruleId":"2658","severity":1,"message":"3200","line":30,"column":3,"nodeType":"2660","endLine":30,"endColumn":10,"suggestions":"3203"},{"ruleId":"2658","severity":1,"message":"3200","line":26,"column":3,"nodeType":"2660","endLine":26,"endColumn":10,"suggestions":"3204"},{"ruleId":"2658","severity":1,"message":"3200","line":27,"column":3,"nodeType":"2660","endLine":27,"endColumn":10,"suggestions":"3205"},{"ruleId":"2658","severity":1,"message":"3200","line":38,"column":3,"nodeType":"2660","endLine":38,"endColumn":10,"suggestions":"3206"},{"ruleId":"2658","severity":1,"message":"3200","line":21,"column":3,"nodeType":"2660","endLine":21,"endColumn":10,"suggestions":"3207"},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3129","line":10,"column":10,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3130","line":11,"column":10,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":37},{"ruleId":"2619","severity":1,"message":"2740","line":14,"column":8,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3132","line":21,"column":3,"nodeType":"2621","messageId":"2622","endLine":21,"endColumn":17},{"ruleId":"2619","severity":1,"message":"3133","line":22,"column":3,"nodeType":"2621","messageId":"2622","endLine":22,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":27,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":36},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":38,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":46},{"ruleId":"2619","severity":1,"message":"3208","line":7,"column":8,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":25},{"ruleId":"2619","severity":1,"message":"2751","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3209","line":7,"column":13,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3210","line":8,"column":9,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3211","line":9,"column":9,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3212","line":10,"column":9,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3213","line":11,"column":9,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3214","line":11,"column":32,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":49},{"ruleId":"2619","severity":1,"message":"3215","line":15,"column":9,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":20},{"ruleId":"2658","severity":1,"message":"2959","line":50,"column":8,"nodeType":"2660","endLine":50,"endColumn":22,"suggestions":"3216"},{"ruleId":"2658","severity":1,"message":"2962","line":52,"column":49,"nodeType":"2660","endLine":52,"endColumn":186,"suggestions":"3217"},{"ruleId":"2658","severity":1,"message":"2964","line":52,"column":64,"nodeType":"2673","endLine":52,"endColumn":185},{"ruleId":"2619","severity":1,"message":"3218","line":8,"column":9,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":20},{"ruleId":"2872","severity":1,"message":"2873","line":54,"column":17,"nodeType":"2668","endLine":54,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3219","line":5,"column":8,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3220","line":6,"column":8,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3221","line":9,"column":12,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":21},{"ruleId":"2619","severity":1,"message":"3222","line":10,"column":10,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3223","line":11,"column":10,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":18},{"ruleId":"2619","severity":1,"message":"3224","line":12,"column":10,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":21},{"ruleId":"2619","severity":1,"message":"3225","line":13,"column":10,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3226","line":14,"column":10,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":26},{"ruleId":"2619","severity":1,"message":"3227","line":15,"column":10,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3228","line":16,"column":10,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3229","line":17,"column":10,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3230","line":18,"column":10,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":32},{"ruleId":"2675","severity":1,"message":"2676","line":209,"column":41,"nodeType":"2668","endLine":209,"endColumn":127},{"ruleId":"2619","severity":1,"message":"3231","line":9,"column":9,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3232","line":11,"column":9,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3233","line":3,"column":8,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2881","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3234","line":7,"column":11,"nodeType":"2621","messageId":"2622","endLine":7,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3235","line":9,"column":11,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":28},{"ruleId":"2619","severity":1,"message":"3236","line":13,"column":19,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":30},{"ruleId":"2619","severity":1,"message":"3237","line":13,"column":32,"nodeType":"2621","messageId":"2622","endLine":13,"endColumn":46},{"ruleId":"2619","severity":1,"message":"3238","line":16,"column":5,"nodeType":"2621","messageId":"2622","endLine":16,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3239","line":17,"column":5,"nodeType":"2621","messageId":"2622","endLine":17,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3240","line":18,"column":5,"nodeType":"2621","messageId":"2622","endLine":18,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3241","line":19,"column":5,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":18},{"ruleId":"2675","severity":1,"message":"2676","line":100,"column":9,"nodeType":"2668","endLine":100,"endColumn":77},{"ruleId":"2619","severity":1,"message":"3242","line":12,"column":5,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":13},{"ruleId":"2619","severity":1,"message":"3243","line":14,"column":5,"nodeType":"2621","messageId":"2622","endLine":14,"endColumn":13},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3167","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3244","line":3,"column":8,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2881","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3245","line":19,"column":10,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3246","line":20,"column":10,"nodeType":"2621","messageId":"2622","endLine":20,"endColumn":20},{"ruleId":"2619","severity":1,"message":"2987","line":15,"column":8,"nodeType":"2621","messageId":"2622","endLine":15,"endColumn":19},{"ruleId":"2619","severity":1,"message":"2988","line":19,"column":3,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":5},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":21,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":22},{"ruleId":"2989","severity":1,"message":"2990","line":21,"column":28,"nodeType":"2781","messageId":"2991","endLine":21,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3247","line":6,"column":8,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3248","line":39,"column":9,"nodeType":"2621","messageId":"2622","endLine":39,"endColumn":25},{"ruleId":"2658","severity":1,"message":"3249","line":48,"column":6,"nodeType":"2660","endLine":48,"endColumn":8,"suggestions":"3250"},{"ruleId":"2658","severity":1,"message":"3251","line":55,"column":6,"nodeType":"2660","endLine":55,"endColumn":8,"suggestions":"3252"},{"ruleId":"2658","severity":1,"message":"3253","line":62,"column":6,"nodeType":"2660","endLine":62,"endColumn":14,"suggestions":"3254"},{"ruleId":"2619","severity":1,"message":"2968","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3244","line":3,"column":8,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":27},{"ruleId":"2619","severity":1,"message":"2737","line":1,"column":17,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":26},{"ruleId":"2619","severity":1,"message":"2792","line":2,"column":10,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2992","line":2,"column":23,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":34},{"ruleId":"2619","severity":1,"message":"2993","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":21},{"ruleId":"2666","severity":1,"message":"2667","line":43,"column":10,"nodeType":"2668","endLine":46,"endColumn":12},{"ruleId":"2619","severity":1,"message":"2993","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":21},{"ruleId":"2619","severity":1,"message":"2997","line":12,"column":8,"nodeType":"2621","messageId":"2622","endLine":12,"endColumn":18},{"ruleId":"2619","severity":1,"message":"2984","line":60,"column":8,"nodeType":"2621","messageId":"2622","endLine":60,"endColumn":11},{"ruleId":"2619","severity":1,"message":"2982","line":37,"column":3,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3007","line":38,"column":3,"nodeType":"2621","messageId":"2622","endLine":38,"endColumn":23},{"ruleId":"2841","severity":1,"message":"2842","line":69,"column":38,"nodeType":"2843","messageId":"2844","endLine":69,"endColumn":40},{"ruleId":"2658","severity":1,"message":"3008","line":77,"column":3,"nodeType":"2660","endLine":77,"endColumn":23,"suggestions":"3255"},{"ruleId":"2841","severity":1,"message":"2842","line":89,"column":61,"nodeType":"2843","messageId":"2844","endLine":89,"endColumn":63},{"ruleId":"2619","severity":1,"message":"2984","line":61,"column":8,"nodeType":"2621","messageId":"2622","endLine":61,"endColumn":11},{"ruleId":"2619","severity":1,"message":"2982","line":32,"column":3,"nodeType":"2621","messageId":"2622","endLine":32,"endColumn":20},{"ruleId":"2619","severity":1,"message":"3010","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3153","line":11,"column":40,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":52},{"ruleId":"2619","severity":1,"message":"3154","line":11,"column":54,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":69},{"ruleId":"2619","severity":1,"message":"3155","line":11,"column":85,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":102},{"ruleId":"2619","severity":1,"message":"3156","line":11,"column":142,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":161},{"ruleId":"2619","severity":1,"message":"3010","line":2,"column":8,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":16},{"ruleId":"2619","severity":1,"message":"3256","line":11,"column":11,"nodeType":"2621","messageId":"2622","endLine":11,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3161","line":36,"column":3,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":22},{"ruleId":"2619","severity":1,"message":"3162","line":37,"column":3,"nodeType":"2621","messageId":"2622","endLine":37,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3164","line":50,"column":3,"nodeType":"2621","messageId":"2622","endLine":50,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3165","line":59,"column":8,"nodeType":"2621","messageId":"2622","endLine":59,"endColumn":14},{"ruleId":"2619","severity":1,"message":"2984","line":59,"column":8,"nodeType":"2621","messageId":"2622","endLine":59,"endColumn":11},{"ruleId":"2619","severity":1,"message":"2983","line":2,"column":29,"nodeType":"2621","messageId":"2622","endLine":2,"endColumn":38},{"ruleId":"2619","severity":1,"message":"3244","line":3,"column":8,"nodeType":"2621","messageId":"2622","endLine":3,"endColumn":27},{"ruleId":"2619","severity":1,"message":"3001","line":4,"column":8,"nodeType":"2621","messageId":"2622","endLine":4,"endColumn":29},{"ruleId":"2619","severity":1,"message":"3166","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":14},{"ruleId":"2619","severity":1,"message":"3257","line":9,"column":8,"nodeType":"2621","messageId":"2622","endLine":9,"endColumn":15},{"ruleId":"2658","severity":1,"message":"2709","line":26,"column":8,"nodeType":"2660","endLine":26,"endColumn":10,"suggestions":"3258"},{"ruleId":"2666","severity":1,"message":"2667","line":43,"column":41,"nodeType":"2668","endLine":44,"endColumn":69},{"ruleId":"2619","severity":1,"message":"3019","line":8,"column":8,"nodeType":"2621","messageId":"2622","endLine":8,"endColumn":15},{"ruleId":"2619","severity":1,"message":"3259","line":36,"column":12,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":23},{"ruleId":"2619","severity":1,"message":"3260","line":36,"column":25,"nodeType":"2621","messageId":"2622","endLine":36,"endColumn":39},{"ruleId":"2619","severity":1,"message":"3261","line":1,"column":38,"nodeType":"2621","messageId":"2622","endLine":1,"endColumn":48},{"ruleId":"2619","severity":1,"message":"3262","line":10,"column":8,"nodeType":"2621","messageId":"2622","endLine":10,"endColumn":27},{"ruleId":"2715","severity":1,"message":"2716","line":171,"column":29,"nodeType":"2668","messageId":"2717","endLine":171,"endColumn":82,"fix":"3263"},{"ruleId":"2767","severity":1,"message":"3021","line":17,"column":24,"nodeType":"2621","messageId":"2769","endLine":17,"endColumn":41},{"ruleId":"2658","severity":1,"message":"3022","line":20,"column":8,"nodeType":"2772","endLine":29,"endColumn":3},{"ruleId":"2619","severity":1,"message":"2984","line":24,"column":8,"nodeType":"2621","messageId":"2622","endLine":24,"endColumn":11},{"ruleId":"2619","severity":1,"message":"3264","line":5,"column":12,"nodeType":"2621","messageId":"2622","endLine":5,"endColumn":25},{"ruleId":"2619","severity":1,"message":"3265","line":6,"column":12,"nodeType":"2621","messageId":"2622","endLine":6,"endColumn":24},{"ruleId":"2619","severity":1,"message":"3266","line":19,"column":11,"nodeType":"2621","messageId":"2622","endLine":19,"endColumn":19},{"ruleId":"2619","severity":1,"message":"3267","line":27,"column":11,"nodeType":"2621","messageId":"2622","endLine":27,"endColumn":19},{"ruleId":"2671","severity":1,"message":"3143","line":54,"column":87,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":89},{"ruleId":"2671","severity":1,"message":"3143","line":54,"column":93,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":95},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":93,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":95},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":122,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":124},{"ruleId":"2671","severity":1,"message":"3143","line":54,"column":245,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":247},{"ruleId":"2671","severity":1,"message":"3143","line":54,"column":261,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":263},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":261,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":263},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":291,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":293},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":310,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":312},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":338,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":340},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":354,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":356},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":384,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":386},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":401,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":403},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":430,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":432},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":439,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":441},{"ruleId":"2671","severity":1,"message":"2672","line":54,"column":467,"nodeType":"2673","messageId":"2674","endLine":54,"endColumn":469},"no-native-reassign",["3268"],"no-negated-in-lhs",["3269"],"no-unused-vars","'onBoardCompleteReducer' is defined but never used.","Identifier","unusedVar","'CHANGE_PASSWORD_USER_RESET' is defined but never used.","'CHANGE_ADMIN_RESET' is defined but never used.","'GET_CONVERSION_RATE_FAIL' is defined but never used.","'GET_CONVERSION_RATE_RESET' is defined but never used.","'utcTimeOffset' is assigned a value but never used.","'UPDATE_SALON_REQUEST' is defined but never used.","'UPDATE_SALON_RESET' is defined but never used.","'UPDATE_SALON_FAIL' is defined but never used.","'UPDATE_SALON_SUCCESS' is defined but never used.","'GET_ALL_ENABLE_SALON_RESET' is defined but never used.","'congratsAnimation' is defined but never used.","'congratsNewAnimation2' is defined but never used.","'animationContainer' is assigned a value but never used.","'ADD_PRODUCTS_TO_CART' is defined but never used.","'REMOVE_PRODUCTS_TO_CART' is defined but never used.","'LoginScreen' is defined but never used.","'SalonScreen' is defined but never used.","'StylistsScreen' is defined but never used.","'ProductsScreen' is defined but never used.","'ProductCategoriesScreen' is defined but never used.","'StylistSessionScreen' is defined but never used.","'OrderHistoryScreen' is defined but never used.","'AppVersionScreen' is defined but never used.","'SendNotification' is defined but never used.","'ServiceScreen' is defined but never used.","'ServiceCategoriesScreen' is defined but never used.","'SubscriptionScreen' is defined but never used.","'DiscountsList' is defined but never used.","'PromoCodeScreen' is defined but never used.","'CouponBookB' is defined but never used.","'Dashboard' is defined but never used.","'NewNotificationsScreen' is defined but never used.","'getWebsiteSettingAction' is defined but never used.","'GET_WEBSITE_SETTING_RESET' is defined but never used.","'cartProducts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPublicWebsite'. Either include it or remove the dependency array.","ArrayExpression",["3270"],"React Hook useEffect has missing dependencies: 'getPublicWebsite' and 'salonId'. Either include them or remove the dependency array.",["3271"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["3272"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updateWaitlistModal' is assigned a value but never used.","'setUpdateWaitlistModal' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["3268"],["3269"],"'ADD_PRODUCT_STOCK_RESET' is defined but never used.","'GET_PRODUCT_ORDER_RESET' is defined but never used.","'userInfo' is assigned a value but never used.","'AppointmentList' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["3273"],"React Hook useEffect has missing dependencies: 'dispatch' and 'stylistId'. Either include them or remove the dependency array.",["3274"],["3275"],["3276"],"'setTotalPageSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'pageNumber'. Either include them or remove the dependency array.",["3277"],"React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.",["3278"],["3279"],["3280"],"'ProductCategoriesStyle' is defined but never used.",["3281"],["3282"],["3283"],["3284"],"'SalonsStyle' is defined but never used.","'validateOnlyNumber' is defined but never used.",["3285"],["3286"],["3287"],["3288"],["3289"],["3290"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["3291"],"'logout' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'password'. Either include them or remove the dependency array. You can also do a functional update 'setPassword(p => ...)' if you only need 'password' in the 'setPassword' call.",["3292"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"3293","text":"3294"},"'modalDoumentState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["3295"],"React Hook useEffect has a missing dependency: 'changePasswordUser'. Either include it or remove the dependency array.",["3296"],["3297"],"'onFormHandler' is assigned a value but never used.","'onFormModalClose' is assigned a value but never used.","'AppversionStyle' is defined but never used.","React Hook useEffect has a missing dependency: 'salonList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSalonId' needs the current value of 'salonList'.",["3298"],["3299"],"React Hook useEffect has missing dependencies: 'pageNumber' and 'salon'. Either include them or remove the dependency array.",["3300"],["3301"],["3302"],"'getStylistSettingsAction' is defined but never used.",["3303"],"'useEffect' is defined but never used.","'getOneProductAction' is defined but never used.","'productId' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["3304"],["3305"],["3306"],["3307"],["3308"],"'VideoCategoriesStyle' is defined but never used.",["3309"],["3310"],["3311"],["3312"],"'Button' is defined but never used.","'CompanyStyle' is defined but never used.","'totalPageSize' is assigned a value but never used.",["3313"],["3314"],"'formStyle' is defined but never used.","'status' is assigned a value but never used.",["3315"],"'getWebsiteServiceAction' is defined but never used.","'getWebsiteSlotsAction' is defined but never used.","'history' is assigned a value but never used.","'bannerPhoto' is assigned a value but never used.","'setBannerPhoto' is assigned a value but never used.","'bannerPhotoError' is assigned a value but never used.","'setBannerPhotoError' is assigned a value but never used.",["3316"],"no-use-before-define","'clearData' was used before it was defined.","usedBeforeDefined","'onChangeHandler' is assigned a value but never used.","The 'clearData' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'clearData' in its own useCallback() Hook.","VariableDeclarator",["3317"],"The 'clearData' function makes the dependencies of useEffect Hook (at line 81) change on every render. To fix this, wrap the definition of 'clearData' in its own useCallback() Hook.",["3318"],"The 'clearData' function makes the dependencies of useEffect Hook (at line 92) change on every render. To fix this, wrap the definition of 'clearData' in its own useCallback() Hook.",["3319"],["3320"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ServiceStyle' is defined but never used.","'filterId' is assigned a value but never used.","'setFilterId' is assigned a value but never used.","'minutesError' is assigned a value but never used.","'setMinutesError' is assigned a value but never used.",["3321"],["3322"],["3323"],["3324"],"'useDispatch' is defined but never used.","'getMenuSettingsAction' is defined but never used.","'VideosScreen' is defined but never used.","'addBulkAvailabilityAction' is defined but never used.","'getUnBlockAvailabilitysAction' is defined but never used.","'blockAppointmentAction' is defined but never used.","'GET_UNBLOCK_AVAILABILITYS_RESET' is defined but never used.","'updateAppointmentAction' is defined but never used.","'createStylistSettingsAction' is defined but never used.","'resetslot' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'pageLimit' is assigned a value but never used.",["3325"],["3326"],["3327"],"React Hook useEffect has missing dependencies: 'dispatch' and 'slotId'. Either include them or remove the dependency array.",["3328"],["3329"],["3330"],["3331"],["3332"],["3333"],["3334"],"React Hook useEffect has a missing dependency: 'slotId'. Either include it or remove the dependency array.",["3335"],"React Hook useEffect has missing dependencies: 'appointmentId', 'dispatch', 'slotId', and 'timeSlotId'. Either include them or remove the dependency array.",["3336"],"no-dupe-keys","Duplicate key 'salon'.","ObjectExpression","Duplicate key 'addDailyAvailabilitys'.","Duplicate key 'setAppointmentId'.","'GET_ALL_SERVICE_CATEGORY_RESET' is defined but never used.","'setIsMainService' is assigned a value but never used.",["3337"],["3338"],["3339"],["3340"],"'Subscription' is defined but never used.","'getEnableSubscriptionAction' is defined but never used.","'recurringType' is assigned a value but never used.","'setRecurringType' is assigned a value but never used.",["3341"],["3342"],"React Hook useEffect has missing dependencies: 'getPublicWebsite' and 'pageNumber'. Either include them or remove the dependency array.",["3343"],"React Hook useEffect has missing dependencies: 'categoryList', 'pageNumber', 'price.max', and 'price.min'. Either include them or remove the dependency array.",["3344"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["3345"],"'useCallback' is defined but never used.","'onDeleteModalClose' is assigned a value but never used.","'setOnDeleteModalClose' is assigned a value but never used.",["3346"],["3347"],"React Hook useEffect has missing dependencies: 'changePasswordUser' and 'pageNumber'. Either include them or remove the dependency array.",["3348"],["3349"],"React Hook useEffect has missing dependencies: 'history', 'pageNumber', and 'staffList.totalPageSize'. Either include them or remove the dependency array.",["3350"],"'createPlanAction' is defined but never used.","'deletePlanAction' is defined but never used.","'updatePlanAction' is defined but never used.","'AddPriceModal' is defined but never used.",["3351"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getSubscriptionPackages'. Either include them or remove the dependency array.",["3352"],["3353"],["3354"],"'data' is assigned a value but never used.","'DownloadButton' is defined but never used.",["3355"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getUserInfo'. Either include them or remove the dependency array.",["3356"],["3357"],"'clearData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["3358"],["3359"],["3360"],["3361"],"'CardCvcElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardNumberElement' is defined but never used.","'moment' is defined but never used.","'ADD_ORDER_RESET' is defined but never used.","'CART_RESET' is defined but never used.","'CHECKOUT_RESET' is defined but never used.","'stripe' is assigned a value but never used.","'elements' is assigned a value but never used.","'setShippingSame' is assigned a value but never used.",["3362"],"'billingError' is assigned a value but never used.","'setBillingError' is assigned a value but never used.","'setBilling' is assigned a value but never used.",["3363"],"'prevStep' is assigned a value but never used.",["3364"],"React Hook useEffect has a missing dependency: 'billing'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShipping' needs the current value of 'billing'.",["3365"],["3366"],"React Hook useEffect has missing dependencies: 'getPublicWebsite', 'history', and 'password'. Either include them or remove the dependency array. You can also do a functional update 'setPassword(p => ...)' if you only need 'password' in the 'setPassword' call.",["3367"],"React Hook useEffect has missing dependencies: 'dispatch', 'registerEmail.value', and 'registerPassword.value'. Either include them or remove the dependency array.",["3368"],["3369"],"'ADD_APPOINTMENT_RESET' is defined but never used.","'AddSlotModal' is defined but never used.","'stylistName' is assigned a value but never used.","'refreshRef' is assigned a value but never used.","'getLatestData' is assigned a value but never used.","'addSlotModal' is assigned a value but never used.",["3370"],["3371"],["3372"],["3373"],["3374"],["3375"],["3376"],["3377"],["3378"],["3379"],["3380"],"'setOriginalServiceListArr' is assigned a value but never used.",["3381"],["3382"],["3383"],["3384"],"React Hook useEffect has a missing dependency: 'salonId'. Either include it or remove the dependency array.",["3385"],["3386"],["3387"],"React Hook useEffect contains a call to 'setTotalPageSize'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getOrderHistory] as a second argument to the useEffect Hook.",["3388"],["3389"],["3390"],"'TextBox' is defined but never used.","'Calendar' is defined but never used.","'TimeDurationComponent' is defined but never used.","'RewardsModal' is defined but never used.","'showGoalsModal' is assigned a value but never used.","'setShowGoalsModal' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'email', 'name', 'phoneNo', and 'textArea'. Either include them or remove the dependency array. You can also do a functional update 'setName(n => ...)' if you only need 'name' in the 'setName' call.",["3391"],["3392"],["3393"],["3394"],["3395"],["3396"],["3397"],["3398"],"React Hook useEffect has a missing dependency: 'salon'. Either include it or remove the dependency array.",["3399"],["3400"],["3401"],["3402"],["3403"],["3404"],"'validatePhone' is defined but never used.",["3405"],["3406"],["3407"],"React Hook useEffect has a missing dependency: 'getFilteredList'. Either include it or remove the dependency array.",["3408"],["3409"],"React Hook useMemo has a missing dependency: 'getWebsiteService'. Either include it or remove the dependency array.",["3410"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.",["3411"],["3412"],["3413"],"'useState' is defined but never used.","'addAppOrderAction' is defined but never used.","'addOrderAction' is defined but never used.",["3414"],"React Hook useEffect has missing dependencies: 'getPublicWebsite' and 'salonName'. Either include them or remove the dependency array.",["3415"],["3416"],["3417"],["3418"],["3419"],["3420"],["3421"],"'ActivitySkeleton' is defined but never used.","'changeSlotStatus' is assigned a value but never used.","'isCompulsoryError' is assigned a value but never used.","'unMasking' is defined but never used.","'url' is assigned a value but never used.","'useParams' is defined but never used.",["3422"],"'disableDate' is assigned a value but never used.","'mm' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useSelector' is defined but never used.","'InputSections' is defined but never used.","'RadioButtons' is defined but never used.","'type' is assigned a value but never used.","'onChangeContentType' is assigned a value but never used.","'UploadFile' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'myProfileDetails' is assigned a value but never used.","'ActivitySkeletonSmall' is defined but never used.",["3423"],"React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array. You can also do a functional update 'setPassword(p => ...)' if you only need 'password' in the 'setPassword' call.",["3424"],{"range":"3425","text":"3294"},{"range":"3426","text":"3294"},"'setIsCompulsoryError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setEndTime', 'setIntervalTime', 'setIsCompulsory', 'setRecurringType', 'setServiceArray', and 'setStartTime'. Either include them or remove the dependency array.",["3427"],"'InputBox' is defined but never used.","'getUserInfo' is assigned a value but never used.","'markedPrice' is assigned a value but never used.","'discountPrice' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","Duplicate key 'padding'.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'Spinner' is defined but never used.",{"range":"3428","text":"3294"},"'handleChangeImage' was used before it was defined.","The 'handleChangeImage' function makes the dependencies of useEffect Hook (at line 17) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleChangeImage' in its own useCallback() Hook.","'notes' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'notesError' is assigned a value but never used.","'userRole' is assigned a value but never used.","'ADD_SERVICE_CATEGORY_REQUEST' is defined but never used.","'ADD_SERVICE_CATEGORY_SUCCESS' is defined but never used.","'ADD_SERVICE_CATEGORY_FAIL' is defined but never used.","'NoOptionsMessage' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'handleCreateAccountModalClose', 'handleLoginModalClose', 'registerEmail.value', and 'registerPassword.value'. Either include them or remove the dependency array.",["3429"],"React Hook useEffect has a missing dependency: 'emailFPwd'. Either include it or remove the dependency array. You can also do a functional update 'setEmailFPwd(e => ...)' if you only need 'emailFPwd' in the 'setEmailFPwd' call.",["3430"],"React Hook useEffect has missing dependencies: 'handleLoginModalClose' and 'password'. Either include them or remove the dependency array. You can also do a functional update 'setPassword(p => ...)' if you only need 'password' in the 'setPassword' call.",["3431"],"React Hook useEffect contains a call to 'setText'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectUpdateModel.isMainService] as a second argument to the useEffect Hook.",["3432"],"'MultiSelectBox' is defined but never used.","'InputTime' is defined but never used.","'stylistArray' is assigned a value but never used.","'setStylistArray' is assigned a value but never used.","'stylistArrayError' is assigned a value but never used.","'setStylistArrayError' is assigned a value but never used.","'leadTime' is assigned a value but never used.","'setLeadTime' is assigned a value but never used.","'leadTimeError' is assigned a value but never used.","'setLeadTimeError' is assigned a value but never used.","'breakTime' is assigned a value but never used.","'setBreakTime' is assigned a value but never used.","'breakTimeError' is assigned a value but never used.","'setBreakTimeError' is assigned a value but never used.","React Hook useEffect contains a call to 'setText'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isMainService] as a second argument to the useEffect Hook.",["3433"],"Duplicate key 'flexDirection'.","'deleteSlotAction' is defined but never used.","'handleAddModalClose' is assigned a value but never used.","'userLogin' is assigned a value but never used.","'appointmentTime' is assigned a value but never used.","'toast' is defined but never used.","'setAddSlotModal' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'appointmentId' is assigned a value but never used.","'convertMinutes' is assigned a value but never used.","'apt' is assigned a value but never used.","'changeAppointmentAction' is defined but never used.",["3434"],["3435"],"'GET_UNBLOCK_AVAILABILITYS_FAIL' is defined but never used.","'GET_UNBLOCK_AVAILABILITYS_SUCCESS' is defined but never used.","'GET_UNBLOCK_AVAILABILITYS_REQUEST' is defined but never used.","'deleteAppointmentAction' is defined but never used.","'setGetlatestData' is assigned a value but never used.","'resetHandler' is assigned a value but never used.","'setresetslot' is assigned a value but never used.","'handleResetSlot' is assigned a value but never used.","'copyToAllHandler' is assigned a value but never used.","'errorMessageHandler' is defined but never used.","React Hook useCallback has missing dependencies: 'setAddBuinessHoursModal' and 'setRecurringType'. Either include them or remove the dependency array.",["3436"],"'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'selectUpdateModel' is assigned a value but never used.","'setSelectUpdateModel' is assigned a value but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'addDailyAvailabilityAction' is defined but never used.","'confirmAppointmentAction' is defined but never used.","'date' is assigned a value but never used.","'match' is assigned a value but never used.","'appointments' is assigned a value but never used.","'addModalActive' is assigned a value but never used.","'setAppointments' is assigned a value but never used.","'startTime' is assigned a value but never used.","'calendarApi' is assigned a value but never used.","'setCalendarApi' is assigned a value but never used.","'store' is assigned a value but never used.","'blankEvent' is assigned a value but never used.","'addDayAvailabilitys' is assigned a value but never used.","'unBlockHandler' is assigned a value but never used.","'addDayAvailabilityHandler' is assigned a value but never used.","'getUnblockAvailabilitys' is assigned a value but never used.","'slotId' is assigned a value but never used.","'timeSlotId' is assigned a value but never used.","'tempDate' is assigned a value but never used.","'setEventStart' is assigned a value but never used.","'active' is assigned a value but never used.","'isDayWiseCalendarOpen' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'setSelectedDate' is assigned a value but never used.","'dragDrop' is assigned a value but never used.","'setDragDrop' is assigned a value but never used.","'changeByHours' is assigned a value but never used.","'availableList' is assigned a value but never used.","'setAvailableList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["3437"],"Duplicate key 'appointmentDetail'.","React Hook React.useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["3438"],["3439"],"'handleBlockStatus' is assigned a value but never used.","'handleStatusChange' is assigned a value but never used.","'getAllCouponsAction' is defined but never used.","'GET_ALL_COUPONS_BOOKB_RESET' is defined but never used.","'PromoCodeStyles' is defined but never used.","'setCreateModal' is assigned a value but never used.","'handleCreateModal' is assigned a value but never used.","'GET_ACTIVE_COUPONS_BOOKB_FAIL' is defined but never used.","'GET_ACTIVE_COUPONS_BOOKB_REQUEST' is defined but never used.","'GET_ACTIVE_COUPONS_BOOKB_SUCCESS' is defined but never used.","'handleSubscriptionModal' is assigned a value but never used.","'handleAppointmentModal' is assigned a value but never used.","'SingleDatePicker' is defined but never used.","'setFromDate' is assigned a value but never used.","'setToDate' is assigned a value but never used.","'labels' is assigned a value but never used.","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","'setMaxCalendarError' is assigned a value but never used.","'dateHour' is assigned a value but never used.","'deletePrice' is assigned a value but never used.","'UPDATE_SALON_STAFF_REQUEST' is defined but never used.","'UPDATE_SALON_STAFF_RESET' is defined but never used.","'UPDATE_SALON_STAFF_FAIL' is defined but never used.","'UPDATE_SALON_STAFF_SUCCESS' is defined but never used.","'setRoleError' is assigned a value but never used.","'setSalonIdError' is assigned a value but never used.","'messageTitle' is assigned a value but never used.","'setMessageTitle' is assigned a value but never used.","'messageTitleError' is assigned a value but never used.","'setSendMessageModal' is assigned a value but never used.","'SelectBox' is defined but never used.","'TextareaBox' is defined but never used.","'stylist' is assigned a value but never used.","'setStylist' is assigned a value but never used.","'setStylistNameError' is assigned a value but never used.","'stylistNameError' is assigned a value but never used.","'stylistList' is assigned a value but never used.","'setSelectUpdateModelUser' is assigned a value but never used.","'getAge' is assigned a value but never used.","'Styles' is defined but never used.","'styles' is defined but never used.","'Pie' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'userPieData'. Either exclude it or remove the dependency array.",["3440"],["3441"],"'stylist' is defined but never used.","'validatePassword' is defined but never used.","React Hook useEffect has missing dependencies: 'setState' and 'state.step1.countryCode.value'. Either include them or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["3442"],"'CardElement' is defined but never used.","'VERIFY_COUPON_RESET' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'confirmCardPayment'. Either include it or remove the dependency array.",["3443"],"'getAdminCoupon' is assigned a value but never used.","'isModalVisible1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'priceId'. Either include it or remove the dependency array.",["3444"],"React Hook useEffect has missing dependencies: 'packageId', 'priceId', 'product', 'setState', and 'state'. Either include them or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["3445"],["3446"],"React Hook useEffect has a missing dependency: 'setCouponData'. Either include it or remove the dependency array. If 'setCouponData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["3447"],"'handleClickCoupon' is assigned a value but never used.","'datePickerHandler' is assigned a value but never used.",["3448"],"'colors' is defined but never used.","'style2' is assigned a value but never used.","'style3' is assigned a value but never used.","'style4' is assigned a value but never used.","'style5' is assigned a value but never used.",["3449"],"'convert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["3450"],["3451"],["3452"],["3453"],["3454"],["3455"],["3456"],"'AvailabilityStyle' is defined but never used.","'serviceModal' is assigned a value but never used.","'setServiceModal' is assigned a value but never used.","'setIsUpdate' is assigned a value but never used.","'serviceDeleteModal' is assigned a value but never used.","'setServiceDeleteModal' is assigned a value but never used.","'handleEditService' is assigned a value but never used.","'serviceText' is assigned a value but never used.",["3457"],["3458"],"'productText' is assigned a value but never used.","'FileUpload' is defined but never used.","'imgFile' is defined but never used.","'logoModal' is assigned a value but never used.","'setLogoModal' is assigned a value but never used.","'imageSrc' is assigned a value but never used.","'setImageSrc' is assigned a value but never used.","'imageSrcError' is assigned a value but never used.","'setImageSrcError' is assigned a value but never used.","'uploadFileData' is assigned a value but never used.","'setUploadFileData' is assigned a value but never used.","'uploadFileDataError' is assigned a value but never used.","'setUploadFileDataError' is assigned a value but never used.","'contactText' is assigned a value but never used.","'contactPara' is assigned a value but never used.","'InputsSection' is defined but never used.","'appearanceBarText' is assigned a value but never used.","'appearanceBarPara' is assigned a value but never used.","'bannerImage' is assigned a value but never used.","'setBannerImage' is assigned a value but never used.","'clickButton' is assigned a value but never used.","'setClickButton' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","'hourText' is assigned a value but never used.","'hourPara' is assigned a value but never used.","'InputsSectionColumn' is defined but never used.","'selectedOption' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'ModalHeading' is defined but never used.","'handleCloseModal' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'setCoupon', and 'setCouponData'. Either include them or remove the dependency array. If 'setCouponData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["3459"],"React Hook useCallback has missing dependencies: 'dispatch' and 'priceId'. Either include them or remove the dependency array.",["3460"],"React Hook useEffect has a missing dependency: 'getTotalPriceCall'. Either include it or remove the dependency array.",["3461"],["3462"],"'addNotesModal' is assigned a value but never used.","'Content' is defined but never used.",["3463"],"'stylistView' is assigned a value but never used.","'setStylistView' is assigned a value but never used.","'useReducer' is defined but never used.","'SessionTimeoutModal' is defined but never used.",{"range":"3464","text":"3294"},"'selectedFiles' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'fileSize' is assigned a value but never used.","'fileType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"3465","fix":"3466"},{"desc":"3467","fix":"3468"},{"desc":"3469","fix":"3470"},{"desc":"3471","fix":"3472"},{"desc":"3473","fix":"3474"},{"desc":"3471","fix":"3475"},{"desc":"3473","fix":"3476"},{"desc":"3477","fix":"3478"},{"desc":"3479","fix":"3480"},{"desc":"3481","fix":"3482"},{"desc":"3483","fix":"3484"},{"desc":"3485","fix":"3486"},{"desc":"3487","fix":"3488"},{"desc":"3489","fix":"3490"},{"desc":"3491","fix":"3492"},{"desc":"3477","fix":"3493"},{"desc":"3494","fix":"3495"},{"desc":"3496","fix":"3497"},{"desc":"3498","fix":"3499"},{"desc":"3500","fix":"3501"},{"desc":"3502","fix":"3503"},{"desc":"3504","fix":"3505"},{"desc":"3506","fix":"3507"},[3804,3804]," rel=\"noreferrer\"",{"desc":"3508","fix":"3509"},{"desc":"3510","fix":"3511"},{"desc":"3512","fix":"3513"},{"desc":"3514","fix":"3515"},{"desc":"3516","fix":"3517"},{"desc":"3518","fix":"3519"},{"desc":"3520","fix":"3521"},{"desc":"3522","fix":"3523"},{"desc":"3477","fix":"3524"},{"desc":"3477","fix":"3525"},{"desc":"3526","fix":"3527"},{"desc":"3528","fix":"3529"},{"desc":"3530","fix":"3531"},{"desc":"3532","fix":"3533"},{"desc":"3477","fix":"3534"},{"desc":"3535","fix":"3536"},{"desc":"3537","fix":"3538"},{"desc":"3539","fix":"3540"},{"desc":"3541","fix":"3542"},{"desc":"3543","fix":"3544"},{"desc":"3477","fix":"3545"},{"desc":"3465","fix":"3546"},{"desc":"3547","fix":"3548"},{"desc":"3547","fix":"3549"},{"desc":"3547","fix":"3550"},{"desc":"3551","fix":"3552"},{"desc":"3541","fix":"3553"},{"desc":"3554","fix":"3555"},{"desc":"3556","fix":"3557"},{"desc":"3558","fix":"3559"},{"desc":"3560","fix":"3561"},{"desc":"3562","fix":"3563"},{"desc":"3564","fix":"3565"},{"desc":"3566","fix":"3567"},{"desc":"3568","fix":"3569"},{"desc":"3570","fix":"3571"},{"desc":"3572","fix":"3573"},{"desc":"3574","fix":"3575"},{"desc":"3576","fix":"3577"},{"desc":"3578","fix":"3579"},{"desc":"3580","fix":"3581"},{"desc":"3582","fix":"3583"},{"desc":"3541","fix":"3584"},{"desc":"3554","fix":"3585"},{"desc":"3556","fix":"3586"},{"desc":"3558","fix":"3587"},{"desc":"3465","fix":"3588"},{"desc":"3467","fix":"3589"},{"desc":"3590","fix":"3591"},{"desc":"3592","fix":"3593"},{"desc":"3594","fix":"3595"},{"desc":"3508","fix":"3596"},{"desc":"3510","fix":"3597"},{"desc":"3598","fix":"3599"},{"desc":"3600","fix":"3601"},{"desc":"3602","fix":"3603"},{"desc":"3600","fix":"3604"},{"desc":"3605","fix":"3606"},{"desc":"3607","fix":"3608"},{"desc":"3609","fix":"3610"},{"desc":"3611","fix":"3612"},{"desc":"3613","fix":"3614"},{"desc":"3615","fix":"3616"},{"desc":"3600","fix":"3617"},{"desc":"3605","fix":"3618"},{"desc":"3607","fix":"3619"},{"desc":"3609","fix":"3620"},{"desc":"3465","fix":"3621"},{"desc":"3467","fix":"3622"},{"desc":"3623","fix":"3624"},{"desc":"3625","fix":"3626"},{"desc":"3467","fix":"3627"},{"desc":"3628","fix":"3629"},{"desc":"3630","fix":"3631"},{"desc":"3551","fix":"3632"},{"desc":"3560","fix":"3633"},{"desc":"3564","fix":"3634"},{"desc":"3566","fix":"3635"},{"desc":"3568","fix":"3636"},{"desc":"3570","fix":"3637"},{"desc":"3572","fix":"3638"},{"desc":"3574","fix":"3639"},{"desc":"3576","fix":"3640"},{"desc":"3578","fix":"3641"},{"desc":"3580","fix":"3642"},{"desc":"3582","fix":"3643"},{"desc":"3541","fix":"3644"},{"desc":"3554","fix":"3645"},{"desc":"3556","fix":"3646"},{"desc":"3558","fix":"3647"},{"desc":"3648","fix":"3649"},{"desc":"3465","fix":"3650"},{"desc":"3485","fix":"3651"},{"desc":"3652","fix":"3653"},{"desc":"3477","fix":"3654"},{"desc":"3648","fix":"3655"},{"desc":"3656","fix":"3657"},{"desc":"3477","fix":"3658"},{"desc":"3494","fix":"3659"},{"desc":"3496","fix":"3660"},{"desc":"3498","fix":"3661"},{"desc":"3500","fix":"3662"},{"desc":"3502","fix":"3663"},{"desc":"3514","fix":"3664"},{"desc":"3518","fix":"3665"},{"desc":"3520","fix":"3666"},{"desc":"3522","fix":"3667"},{"desc":"3465","fix":"3668"},{"desc":"3467","fix":"3669"},{"desc":"3485","fix":"3670"},{"desc":"3465","fix":"3671"},{"desc":"3611","fix":"3672"},{"desc":"3673","fix":"3674"},{"desc":"3675","fix":"3676"},{"desc":"3677","fix":"3678"},{"desc":"3679","fix":"3680"},{"desc":"3487","fix":"3681"},{"desc":"3489","fix":"3682"},{"desc":"3491","fix":"3683"},{"desc":"3684","fix":"3685"},{"desc":"3686","fix":"3687"},{"desc":"3465","fix":"3688"},{"desc":"3477","fix":"3689"},{"desc":"3526","fix":"3690"},{"desc":"3528","fix":"3691"},{"desc":"3530","fix":"3692"},{"desc":"3532","fix":"3693"},{"desc":"3465","fix":"3694"},{"desc":"3600","fix":"3695"},{"desc":"3696","fix":"3697"},[4453,4453],[1609,1609],{"desc":"3698","fix":"3699"},[5248,5248],{"desc":"3700","fix":"3701"},{"desc":"3702","fix":"3703"},{"desc":"3704","fix":"3705"},{"desc":"3706","fix":"3707"},{"desc":"3708","fix":"3709"},{"desc":"3710","fix":"3711"},{"desc":"3712","fix":"3713"},{"desc":"3714","fix":"3715"},{"desc":"3716","fix":"3717"},{"desc":"3718","fix":"3719"},{"desc":"3720","fix":"3721"},{"desc":"3722","fix":"3723"},{"desc":"3724","fix":"3725"},{"desc":"3726","fix":"3727"},{"desc":"3728","fix":"3729"},{"desc":"3730","fix":"3731"},{"desc":"3732","fix":"3733"},{"desc":"3734","fix":"3735"},{"desc":"3736","fix":"3737"},{"desc":"3706","fix":"3738"},{"desc":"3708","fix":"3739"},{"desc":"3740","fix":"3741"},{"desc":"3740","fix":"3742"},{"desc":"3740","fix":"3743"},{"desc":"3740","fix":"3744"},{"desc":"3740","fix":"3745"},{"desc":"3740","fix":"3746"},{"desc":"3740","fix":"3747"},{"desc":"3675","fix":"3748"},{"desc":"3679","fix":"3749"},{"desc":"3750","fix":"3751"},{"desc":"3730","fix":"3752"},{"desc":"3753","fix":"3754"},{"desc":"3698","fix":"3755"},{"desc":"3600","fix":"3756"},[8207,8207],"Update the dependencies array to be: [getPublicWebsite]",{"range":"3757","text":"3758"},"Update the dependencies array to be: [dispatch, getPublicWebsite, salonId]",{"range":"3759","text":"3760"},"Update the dependencies array to be: [dispatch, getOneProduct, id]",{"range":"3761","text":"3762"},"Update the dependencies array to be: [stylistId, dispatch, history, getUserInfo]",{"range":"3763","text":"3764"},"Update the dependencies array to be: [addAppointment, updateAppointment, deleteAppointment, dispatch, stylistId]",{"range":"3765","text":"3766"},{"range":"3767","text":"3764"},{"range":"3768","text":"3766"},"Update the dependencies array to be: [getUserInfo, dispatch, pageNumber, history]",{"range":"3769","text":"3770"},"Update the dependencies array to be: [createVideo, dispatch, pageNumber]",{"range":"3771","text":"3772"},"Update the dependencies array to be: [changeVideoStatus, dispatch, pageNumber]",{"range":"3773","text":"3774"},"Update the dependencies array to be: [deleteVideo, dispatch, pageNumber]",{"range":"3775","text":"3776"},"Update the dependencies array to be: [dispatch, pageNumber]",{"range":"3777","text":"3778"},"Update the dependencies array to be: [createProductCategory, dispatch, pageNumber]",{"range":"3779","text":"3780"},"Update the dependencies array to be: [productCategoryStatus, dispatch, pageNumber]",{"range":"3781","text":"3782"},"Update the dependencies array to be: [deleteProductCategory, dispatch, pageNumber]",{"range":"3783","text":"3784"},{"range":"3785","text":"3770"},"Update the dependencies array to be: [createSalon, dispatch, pageNumber]",{"range":"3786","text":"3787"},"Update the dependencies array to be: [deleteSalon, dispatch, pageNumber]",{"range":"3788","text":"3789"},"Update the dependencies array to be: [changeStatusSalon, dispatch, pageNumber]",{"range":"3790","text":"3791"},"Update the dependencies array to be: [changeAppMenuSetting, dispatch, pageNumber]",{"range":"3792","text":"3793"},"Update the dependencies array to be: [cancelSubscription, dispatch, pageNumber]",{"range":"3794","text":"3795"},"Update the dependencies array to be: [checkInOut, dispatch]",{"range":"3796","text":"3797"},"Update the dependencies array to be: [userInfo, error, dispatch, history, password]",{"range":"3798","text":"3799"},"Update the dependencies array to be: [dispatch, history, userList]",{"range":"3800","text":"3801"},"Update the dependencies array to be: [sendMessageUser, dispatch, changePasswordUser]",{"range":"3802","text":"3803"},"Update the dependencies array to be: [addNotesUser, changePasswordUser, dispatch]",{"range":"3804","text":"3805"},"Update the dependencies array to be: [salonEnabledList, dispatch, salonList]",{"range":"3806","text":"3807"},"Update the dependencies array to be: [salon, dispatch, pageNumber]",{"range":"3808","text":"3809"},"Update the dependencies array to be: [createAppVersion, dispatch, pageNumber, salon]",{"range":"3810","text":"3811"},"Update the dependencies array to be: [changeAppVersionStatus, dispatch, pageNumber, salon]",{"range":"3812","text":"3813"},"Update the dependencies array to be: [deleteAppVersion, dispatch, pageNumber, salon]",{"range":"3814","text":"3815"},{"range":"3816","text":"3770"},{"range":"3817","text":"3770"},"Update the dependencies array to be: [createProduct, dispatch, pageNumber]",{"range":"3818","text":"3819"},"Update the dependencies array to be: [changeProductStatus, dispatch, pageNumber]",{"range":"3820","text":"3821"},"Update the dependencies array to be: [deleteProduct, dispatch, pageNumber]",{"range":"3822","text":"3823"},"Update the dependencies array to be: [addProductStock, dispatch, pageNumber]",{"range":"3824","text":"3825"},{"range":"3826","text":"3770"},"Update the dependencies array to be: [createVideoCategory, dispatch, pageNumber]",{"range":"3827","text":"3828"},"Update the dependencies array to be: [videoCategoryStatus, dispatch, pageNumber]",{"range":"3829","text":"3830"},"Update the dependencies array to be: [deleteVideoCategory, dispatch, pageNumber]",{"range":"3831","text":"3832"},"Update the dependencies array to be: [history, getUserInfo, dispatch, pageNumber]",{"range":"3833","text":"3834"},"Update the dependencies array to be: [createCompany, changeCompanyStatus, deleteCompany, dispatch, pageNumber]",{"range":"3835","text":"3836"},{"range":"3837","text":"3770"},{"range":"3838","text":"3758"},"Wrap the definition of 'clearData' in its own useCallback() Hook.",{"range":"3839","text":"3840"},{"range":"3841","text":"3840"},{"range":"3842","text":"3840"},"Update the dependencies array to be: [activatePromoCodes, addPromCodes, dispatch]",{"range":"3843","text":"3844"},{"range":"3845","text":"3834"},"Update the dependencies array to be: [createService, dispatch, pageNumber]",{"range":"3846","text":"3847"},"Update the dependencies array to be: [deleteService, dispatch, pageNumber]",{"range":"3848","text":"3849"},"Update the dependencies array to be: [changeServiceStatus, dispatch, pageNumber]",{"range":"3850","text":"3851"},"Update the dependencies array to be: [addDailyAvailabilitys, dispatch]",{"range":"3852","text":"3853"},"Update the dependencies array to be: [addAppointment, dispatch]",{"range":"3854","text":"3855"},"Update the dependencies array to be: [dispatch, updateAppointment]",{"range":"3856","text":"3857"},"Update the dependencies array to be: [deleteAppointment, dispatch, slotId]",{"range":"3858","text":"3859"},"Update the dependencies array to be: [deleteSlot, dispatch]",{"range":"3860","text":"3861"},"Update the dependencies array to be: [confirmAppointment, dispatch]",{"range":"3862","text":"3863"},"Update the dependencies array to be: [addBulkAvailabilitys, dispatch]",{"range":"3864","text":"3865"},"Update the dependencies array to be: [addDayAvailabilitys, dispatch]",{"range":"3866","text":"3867"},"Update the dependencies array to be: [delBlockAvailabilitys, dispatch]",{"range":"3868","text":"3869"},"Update the dependencies array to be: [addBuinessHoursModal, dispatch, stylistId]",{"range":"3870","text":"3871"},"Update the dependencies array to be: [changeAppointmentStatus, dispatch, slotId]",{"range":"3872","text":"3873"},"Update the dependencies array to be: [appointmentId, changeSlotStatus, dispatch, slotId, timeSlotId]",{"range":"3874","text":"3875"},{"range":"3876","text":"3834"},{"range":"3877","text":"3847"},{"range":"3878","text":"3849"},{"range":"3879","text":"3851"},{"range":"3880","text":"3758"},{"range":"3881","text":"3760"},"Update the dependencies array to be: [categoryList, price, dispatch, pageNumber, getPublicWebsite]",{"range":"3882","text":"3883"},"Update the dependencies array to be: [categoryList, dispatch, pageNumber, price.max, price.min]",{"range":"3884","text":"3885"},"Update the dependencies array to be: [dispatch, getAllProducts]",{"range":"3886","text":"3887"},{"range":"3888","text":"3801"},{"range":"3889","text":"3803"},"Update the dependencies array to be: [addNotesUser, changePasswordUser, dispatch, pageNumber]",{"range":"3890","text":"3891"},"Update the dependencies array to be: [dispatch]",{"range":"3892","text":"3893"},"Update the dependencies array to be: [userInfo, userData, dispatch, pageNumber, staffList.totalPageSize, history]",{"range":"3894","text":"3895"},{"range":"3896","text":"3893"},"Update the dependencies array to be: [addSubscription, dispatch, getSubscriptionPackages]",{"range":"3897","text":"3898"},"Update the dependencies array to be: [changeStatusSubscription, dispatch, getSubscriptionPackages]",{"range":"3899","text":"3900"},"Update the dependencies array to be: [deleteSubscription, dispatch, getSubscriptionPackages]",{"range":"3901","text":"3902"},"Update the dependencies array to be: [dispatch, salonId]",{"range":"3903","text":"3904"},"Update the dependencies array to be: [userLogin, modalState, getUserInfo, dispatch]",{"range":"3905","text":"3906"},"Update the dependencies array to be: [dispatch, publicAddAppointment]",{"range":"3907","text":"3908"},{"range":"3909","text":"3893"},{"range":"3910","text":"3898"},{"range":"3911","text":"3900"},{"range":"3912","text":"3902"},{"range":"3913","text":"3758"},{"range":"3914","text":"3760"},"Update the dependencies array to be: [addOrder, dispatch]",{"range":"3915","text":"3916"},"Update the dependencies array to be: [billing, shippingSame]",{"range":"3917","text":"3918"},{"range":"3919","text":"3760"},"Update the dependencies array to be: [userInfo, error, dispatch, history, getPublicWebsite, password]",{"range":"3920","text":"3921"},"Update the dependencies array to be: [createUser, dispatch, registerEmail.value, registerPassword.value]",{"range":"3922","text":"3923"},{"range":"3924","text":"3844"},{"range":"3925","text":"3853"},{"range":"3926","text":"3857"},{"range":"3927","text":"3859"},{"range":"3928","text":"3861"},{"range":"3929","text":"3863"},{"range":"3930","text":"3865"},{"range":"3931","text":"3867"},{"range":"3932","text":"3869"},{"range":"3933","text":"3871"},{"range":"3934","text":"3873"},{"range":"3935","text":"3875"},{"range":"3936","text":"3834"},{"range":"3937","text":"3847"},{"range":"3938","text":"3849"},{"range":"3939","text":"3851"},"Update the dependencies array to be: [history, userLogin, dispatch, salonId]",{"range":"3940","text":"3941"},{"range":"3942","text":"3758"},{"range":"3943","text":"3778"},"Add dependencies array: [getOrderHistory]",{"range":"3944","text":"3945"},{"range":"3946","text":"3770"},{"range":"3947","text":"3941"},"Update the dependencies array to be: [email, myProfileDetails, name, phoneNo, textArea]",{"range":"3948","text":"3949"},{"range":"3950","text":"3770"},{"range":"3951","text":"3787"},{"range":"3952","text":"3789"},{"range":"3953","text":"3791"},{"range":"3954","text":"3793"},{"range":"3955","text":"3795"},{"range":"3956","text":"3807"},{"range":"3957","text":"3811"},{"range":"3958","text":"3813"},{"range":"3959","text":"3815"},{"range":"3960","text":"3758"},{"range":"3961","text":"3760"},{"range":"3962","text":"3778"},{"range":"3963","text":"3758"},{"range":"3964","text":"3904"},"Update the dependencies array to be: [getPublicWebsite, dispatch, salonId]",{"range":"3965","text":"3966"},"Update the dependencies array to be: [categoryName, getFilteredList]",{"range":"3967","text":"3968"},"Update the dependencies array to be: [addWebsiteContactUs, dispatch]",{"range":"3969","text":"3970"},"Update the dependencies array to be: [categoryName, getWebsiteService]",{"range":"3971","text":"3972"},{"range":"3973","text":"3780"},{"range":"3974","text":"3782"},{"range":"3975","text":"3784"},"Update the dependencies array to be: [addAPayment, dispatch, transactionId]",{"range":"3976","text":"3977"},"Update the dependencies array to be: [dispatch, getPublicWebsite, salonName]",{"range":"3978","text":"3979"},{"range":"3980","text":"3758"},{"range":"3981","text":"3770"},{"range":"3982","text":"3819"},{"range":"3983","text":"3821"},{"range":"3984","text":"3823"},{"range":"3985","text":"3825"},{"range":"3986","text":"3758"},{"range":"3987","text":"3893"},"Update the dependencies array to be: [userInfo, error, dispatch, setPassword, history, password]",{"range":"3988","text":"3989"},"Update the dependencies array to be: [getStylistSettings, setEndTime, setIntervalTime, setIsCompulsory, setRecurringType, setServiceArray, setStartTime]",{"range":"3990","text":"3991"},"Update the dependencies array to be: [createUser, dispatch, handleCreateAccountModalClose, handleLoginModalClose, registerEmail.value, registerPassword.value]",{"range":"3992","text":"3993"},"Update the dependencies array to be: [userInfo, error, dispatch, emailFPwd]",{"range":"3994","text":"3995"},"Update the dependencies array to be: [userInfo, error, dispatch, handleLoginModalClose, password]",{"range":"3996","text":"3997"},"Add dependencies array: [selectUpdateModel.isMainService]",{"range":"3998","text":"3999"},"Add dependencies array: [isMainService]",{"range":"4000","text":"4001"},"Update the dependencies array to be: [dispatch, modalWaitlist, slotId]",{"range":"4002","text":"4003"},"Update the dependencies array to be: [addAppointment, dispatch, slotId]",{"range":"4004","text":"4005"},"Update the dependencies array to be: [setAddBuinessHoursModal, setRecurringType]",{"range":"4006","text":"4007"},"Update the dependencies array to be: [addAppointment, startDate, endDate, eventStart, setGetlatestData, updateAppointment, deleteAppointment, confirmAppointment, publicAddAppointment, addDailyAvailabilitys, addBulkAvailabilitys, deleteSlot, getList]",{"range":"4008","text":"4009"},"Update the dependencies array to be: [endDate, getList, socket, startDate]",{"range":"4010","text":"4011"},"Update the dependencies array to be: [getList]",{"range":"4012","text":"4013"},"Update the dependencies array to be: [maleCount, totalUsers]",{"range":"4014","text":"4015"},"Update the dependencies array to be: [femaleCount, totalUsers]",{"range":"4016","text":"4017"},"Update the dependencies array to be: [setState, state.step1.countryCode.value]",{"range":"4018","text":"4019"},"Update the dependencies array to be: [onBoardRegister, dispatch, confirmCardPayment]",{"range":"4020","text":"4021"},"Update the dependencies array to be: [dispatch, priceId]",{"range":"4022","text":"4023"},"Update the dependencies array to be: [trData, quantity, setState, state, priceId, product, packageId]",{"range":"4024","text":"4025"},"Update the dependencies array to be: [active, dispatch]",{"range":"4026","text":"4027"},"Update the dependencies array to be: [setCouponData, verfifyCoupon]",{"range":"4028","text":"4029"},{"range":"4030","text":"3999"},{"range":"4031","text":"4001"},"Update the dependencies array to be: [getData, token]",{"range":"4032","text":"4033"},{"range":"4034","text":"4033"},{"range":"4035","text":"4033"},{"range":"4036","text":"4033"},{"range":"4037","text":"4033"},{"range":"4038","text":"4033"},{"range":"4039","text":"4033"},{"range":"4040","text":"3968"},{"range":"4041","text":"3972"},"Update the dependencies array to be: [dispatch, setCoupon, setCouponData]",{"range":"4042","text":"4043"},{"range":"4044","text":"4023"},"Update the dependencies array to be: [coupon, getTotalPriceCall]",{"range":"4045","text":"4046"},{"range":"4047","text":"3991"},{"range":"4048","text":"3893"},[2369,2371],"[getPublicWebsite]",[2761,2771],"[dispatch, getPublicWebsite, salonId]",[3705,3720],"[dispatch, getOneProduct, id]",[4358,4388],"[stylistId, dispatch, history, getUserInfo]",[4669,4741],"[addAppointment, updateAppointment, deleteAppointment, dispatch, stylistId]",[4370,4400],[4681,4753],[2828,2851],"[getUserInfo, dispatch, pageNumber, history]",[3360,3383],"[createVideo, dispatch, pageNumber]",[3721,3750],"[changeVideoStatus, dispatch, pageNumber]",[4057,4080],"[deleteVideo, dispatch, pageNumber]",[2097,2107],"[dispatch, pageNumber]",[2510,2543],"[createProductCategory, dispatch, pageNumber]",[2921,2954],"[productCategoryStatus, dispatch, pageNumber]",[3332,3365],"[deleteProductCategory, dispatch, pageNumber]",[4163,4186],[5009,5032],"[createSalon, dispatch, pageNumber]",[5623,5646],"[deleteSalon, dispatch, pageNumber]",[6332,6361],"[changeStatusSalon, dispatch, pageNumber]",[7507,7539],"[changeAppMenuSetting, dispatch, pageNumber]",[8161,8191],"[cancelSubscription, dispatch, pageNumber]",[2234,2248],"[checkInOut, dispatch]",[1294,1321],"[userInfo, error, dispatch, history, password]",[4826,4836],"[dispatch, history, userList]",[8817,8844],"[sendMessageUser, dispatch, changePasswordUser]",[9296,9320],"[addNotesUser, changePasswordUser, dispatch]",[3490,3518],"[salonEnabledList, dispatch, salonList]",[3719,3736],"[salon, dispatch, pageNumber]",[4346,4374],"[createAppVersion, dispatch, pageNumber, salon]",[5050,5084],"[changeAppVersionStatus, dispatch, pageNumber, salon]",[5699,5727],"[deleteAppVersion, dispatch, pageNumber, salon]",[4427,4450],[3330,3353],[3903,3928],"[createProduct, dispatch, pageNumber]",[4293,4324],"[changeProductStatus, dispatch, pageNumber]",[4658,4683],"[deleteProduct, dispatch, pageNumber]",[5264,5291],"[addProductStock, dispatch, pageNumber]",[2355,2378],[2769,2800],"[createVideoCategory, dispatch, pageNumber]",[3166,3197],"[videoCategoryStatus, dispatch, pageNumber]",[3563,3594],"[deleteVideoCategory, dispatch, pageNumber]",[2452,2486],"[history, getUserInfo, dispatch, pageNumber]",[4284,4347],"[createCompany, changeCompanyStatus, deleteCompany, dispatch, pageNumber]",[2093,2116],[7549,7551],[6449,6963],"useCallback(() => {\r\n        setAddCouponData({\r\n            id: '',\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: ''\r\n        })\r\n        setAddCouponDataError({\r\n            title: '',\r\n            discount: '',\r\n            code: '',\r\n            stateDate: '',\r\n            endDate: '',\r\n            description: '',\r\n        })\r\n        dispatch(getAllCouponsAction())\r\n        setShowAddCouponModal(false)\r\n    })",[6449,6963],[6449,6963],[1935,1969],"[activatePromoCodes, addPromCodes, dispatch]",[3797,3829],[4886,4911],"[createService, dispatch, pageNumber]",[6055,6080],"[deleteService, dispatch, pageNumber]",[6813,6844],"[changeServiceStatus, dispatch, pageNumber]",[7238,7261],"[addDailyAvailabilitys, dispatch]",[7742,7758],"[addAppointment, dispatch]",[8269,8288],"[dispatch, updateAppointment]",[9196,9215],"[deleteAppointment, dispatch, slotId]",[9656,9668],"[deleteSlot, dispatch]",[10401,10421],"[confirmAppointment, dispatch]",[11042,11064],"[addBulkAvailabilitys, dispatch]",[11597,11618],"[addDayAvailabilitys, dispatch]",[12149,12172],"[delBlockAvailabilitys, dispatch]",[13534,13556],"[addBuinessHoursModal, dispatch, stylistId]",[13887,13922],"[changeAppointmentStatus, dispatch, slotId]",[14288,14306],"[appointmentId, changeSlotStatus, dispatch, slotId, timeSlotId]",[2655,2687],[3274,3299],[3950,3975],[4705,4736],[1636,1638],[2197,2207],[2687,2718],"[categoryList, price, dispatch, pageNumber, getPublicWebsite]",[3050,3060],"[categoryList, dispatch, pageNumber, price.max, price.min]",[3860,3876],"[dispatch, getAllProducts]",[5197,5207],[9861,9888],[10530,10554],"[addNotesUser, changePasswordUser, dispatch, pageNumber]",[16395,16397],"[dispatch]",[4486,4516],"[userInfo, userData, dispatch, pageNumber, staffList.totalPageSize, history]",[2141,2143],[2726,2743],"[addSubscription, dispatch, getSubscriptionPackages]",[3316,3342],"[changeStatusSubscription, dispatch, getSubscriptionPackages]",[3946,3966],"[deleteSubscription, dispatch, getSubscriptionPackages]",[2847,2856],"[dispatch, salonId]",[3771,3794],"[userLogin, modalState, getUserInfo, dispatch]",[4349,4371],"[dispatch, publicAddAppointment]",[2087,2089],[2672,2689],[3262,3288],[3892,3912],[3136,3138],[4513,4523],[5369,5379],"[addOrder, dispatch]",[5529,5543],"[billing, shippingSame]",[2678,2688],[3149,3176],"[userInfo, error, dispatch, history, getPublicWebsite, password]",[3645,3657],"[createUser, dispatch, registerEmail.value, registerPassword.value]",[1943,1977],[7645,7668],[8727,8746],[9713,9732],[10117,10129],[10862,10882],[11425,11447],[11980,12001],[12560,12583],[14197,14219],[14580,14615],[14975,14993],[3937,3969],[5026,5051],[6195,6220],[6953,6984],[1247,1277],"[history, userLogin, dispatch, salonId]",[1769,1771],[1940,1950],[2270,2270],", [getOrderHistory]",[4646,4669],[1012,1042],[3352,3370],"[email, myProfileDetails, name, phoneNo, textArea]",[4171,4194],[5017,5040],[5631,5654],[6340,6369],[7515,7547],[8169,8199],[3488,3516],[4356,4396],[5072,5118],[5732,5772],[1349,1351],[1497,1507],[1639,1649],[2424,2426],[2504,2513],[3251,3279],"[getPublicWebsite, dispatch, salonId]",[4123,4137],"[categoryName, getFilteredList]",[4648,4669],"[addWebsiteContactUs, dispatch]",[4725,4862],"[categoryName, getWebsiteService]",[2533,2566],[2944,2977],[3355,3388],[1511,1539],"[addAPayment, dispatch, transactionId]",[2381,2391],"[dispatch, getPublicWebsite, salonName]",[645,647],[3400,3423],[3973,3998],[4363,4394],[4728,4753],[5334,5361],[1015,1017],[964,966],[1337,1386],"[userInfo, error, dispatch, setPassword, history, password]",[3118,3138],"[getStylistSettings, setEndTime, setIntervalTime, setIsCompulsory, setRecurringType, setServiceArray, setStartTime]",[2114,2126],"[createUser, dispatch, handleCreateAccountModalClose, handleLoginModalClose, registerEmail.value, registerPassword.value]",[1701,1728],"[userInfo, error, dispatch, emailFPwd]",[2345,2372],"[userInfo, error, dispatch, handleLoginModalClose, password]",[605,605],", [selectUpdateModel.isMainService]",[2989,2989],", [isMainService]",[978,993],"[dispatch, modalWaitlist, slotId]",[1230,1246],"[addAppointment, dispatch, slotId]",[4071,4073],"[setAddBuinessHoursModal, setRecurringType]",[3993,4280],"[addAppointment, startDate, endDate, eventStart, setGetlatestData, updateAppointment, deleteAppointment, confirmAppointment, publicAddAppointment, addDailyAvailabilitys, addBulkAvailabilitys, deleteSlot, getList]",[7623,7651],"[endDate, getList, socket, startDate]",[7699,7701],"[getList]",[2437,2473],"[maleCount, totalUsers]",[2589,2627],"[femaleCount, totalUsers]",[1635,1637],"[setState, state.step1.countryCode.value]",[2278,2305],"[onBoardRegister, dispatch, confirmCardPayment]",[11108,11118],"[dispatch, priceId]",[11264,11282],"[trData, quantity, setState, state, priceId, product, packageId]",[11354,11362],"[active, dispatch]",[11886,11901],"[setCouponData, verfifyCoupon]",[605,605],[2914,2914],[1442,1449],"[getData, token]",[1305,1312],[1573,1580],[1227,1234],[1221,1228],[1453,1460],[816,823],[1628,1642],[1695,1832],[1191,1193],"[dispatch, setCoupon, setCouponData]",[1388,1390],[1502,1510],"[coupon, getTotalPriceCall]",[3089,3109],[1039,1041]]